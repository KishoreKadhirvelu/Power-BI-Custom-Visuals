{"version":3,"file":"visual.js","mappings":"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E,QAAQ;gBACpB,QAAQ,EAAG,IAAI;gBACf,UAAU,EAAE;oBACR,QAAQ,EAAE,IAAI,CAAC,YAAY;oBAC3B,UAAU,EAAE,IAAI,CAAC,cAAc;iBAClC;aACJ;SACJ;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC;YACzE,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC;gBAC9B,KAAK,EAAE,CAAC,GAAG,SAAS,EAAE,GAAG,OAAO,CAAC;aACpC,CAAC;YACF,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;QACzC,CAAC;IACD,CAAC;CACJ;;;;;;;;;;;;;;ACtgDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyE;AACN;AACvB;AAC5C;AAC8E;AAC9E,gBAAgB,sEAAmB;AACgB;AACV;AACA;AACzC;AAC+H;AAC/H,uBAAuB,6FAAgB;AACvC,qBAAqB,kDAAE;AACvB,mBAAmB,8FAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oBAAoB,sDAAM;AAC1B;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,SAAS;AAC/D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP,sCAAsC,YAAY;AACleAAe;AACzD;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B,8BAA8B,IAAI;AACzG,4CAA4C,2BAA2B,8BAA8B,IAAI;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,qCAAqC,2BAA2B,sBAAsB,IAAI;AAC1F,qCAAqC,2BAA2B,sBAAsB,IAAI;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6D;AAC9B;AAC/B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrhCA;AACmF;AACnF;AACoE;AACpE,WAAW,iFAAe;AAC1B,mBAAmB,8FAA4B;AAC/C,wBAAwB,8FAA4B;AACpD,6BAA6B,mGAAiC;AAC9D,qBAAqB,2FAAyB;AAC9C,4BAA4B,kGAAgC;AAC5D;AACsD;AACtD,6BAA6B,4FAAuC;AACP;AACX;AAC3C;AACA;AACA;AACA;AACA;AACA;AACP;AACA,cAAc,sEAAwB;AACtC;AACA;AACO;AACA;AACA,qCAAqC,QAAQ;AAC7C,8BAA8B,yDAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA,kBAAkB,sEAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;ACxVoD;AACZ;AACjC,kFAAkF,uEAAc;AACvG,eAAe,0DAAS;AACxB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AAC5B;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3DiD;AAC1C;AACA;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,oEAAW;AACxB;AACA;AACA,aAAa,oEAAW;AACxB;AACA;AACA,aAAa,oEAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,oEAAW;AACxB;AACA;AACA,aAAa,oEAAW;AACxB,aAAa,oEAAW;AACxB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsC;AACyC;AAC4B;AACZ;AAC3C;AACf;AACuB;AAC5D,6BAA6B,4FAAmC;AACzD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iEAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,uEAAc;AACxF,wEAAwE,uEAAc;AACtF,wCAAwC,uEAAc,0BAA0B,uEAAc,yCAAyC,uEAAc,2BAA2B,uEAAc;AAC9L;AACA;AACA;AACA;AACA;AACA,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B,oCAAoC,6EAA+B;AACnE;AACA;AACA;AACA,kCAAkC;AAClC;AACA,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B;AACA;AACA;AACA,kCAAkC;AAClC;AACA,iBAAiB,uEAAc;AAC/B,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uEAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uEAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oEAAiB;AAC5C;AACA,+BAA+B,oEAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uEAAc;AACjD;AACA,sCAAsC,uEAAc;AACpD;AACA;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+EAAyB;AACjE;AACA;AACA;AACA,wCAAwC,+EAAyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sEAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uFAAiC;AACpD,SAAS;AACT;AACA,mBAAmB,uDAAe,0BAA0B,oEAAW;AACvE,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,8DAAsB,0BAA0B,oEAAW;AAC9E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sEAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kEAAS;AAC1B;AACA;AACA,iBAAiB,kEAAS;AAC1B;AACA;AACA,iBAAiB,kEAAS;AAC1B;AACA;AACA,iBAAiB,kEAAS;AAC1B;AACA;AACA,iBAAiB,kEAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mGAAsB;AAC1C;AACA;AACA,uBAAuB,mGAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mGAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mGAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6EAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iFAA2B;AACrD,2BAA2B,iFAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iFAA2B;AACpD,4BAA4B,iFAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mGAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mGAAsB;AACvE,cAAc,mGAAsB;AACpC;AACA;AACA;AACA;AACA;AACA,kBAAkB,mGAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mGAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oEAAW;AAC5B,uBAAuB,wEAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oEAAW;AAC5B,iBAAiB,oEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oEAAW;AAC5B,iBAAiB,oEAAW;AAC5B,oDAAoD,2DAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA,oFAAoF,mGAAsB;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mGAAsB;AAChD;AACA;AACA;AACA;AACA,6BAA6B,mGAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sCAAsC,+EAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B,iBAAiB,uEAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sEAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6EAA+B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxtBA;AACmD;AAC5C;AACP;AACA;AACA;AACA;AACA,YAAY,oDAAsB;AAClC,YAAY,oDAAsB;AAClC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpCO;AACP;AACA;AACA;AACA;AACA;AACA,wDAAwD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA,0FAA0F;AAC1F;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3CO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClBmD;AACnD;AACO;AACP;AACA;AACA;AACA,WAAW,qDAAuB;AAClC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnCqD;AAC9C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,4DAA8B;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxCqD;AACF;AACA;AACE;AACY;AACR;AACF;AACiF;AACxI;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AAC4E;AAC5E;AACA;AACO;AACP;AACO;AACP;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2BAA2B;AACxE;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,wBAAwB,kFAAsC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qFAAyC;AAC9D;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,gEAAgE;AAC5J;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,oFAAoF;AAChL;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,uBAAuB;AACnH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,qKAAqK;AACjQ;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,mBAAmB;AAC/G;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,gEAAgE;AAC5J;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,6BAA6B;AACzH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,6BAA6B;AACzH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,4EAA4E;AACxK;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,mBAAmB;AAC/G;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,+BAA+B;AAC3H;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,yDAAyD;AACrJ;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2BAA2B;AACxE;AACA;AACA,eAAe;AACf;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO,4BAA4B,2DAAW;AAC9C;AACA;;;;;;;;;;;;ACpT2E;AACpE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kFAAa;AACjD;AACA,4DAA4D,+EAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,+EAAU;AAC3D;AACA,iCAAiC,gBAAgB;AACjD,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,wGAAwG;AAC7J;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oGAAoG;AACrJ;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,kDAAkD;AAC9E;AACA,yEAAyE,gBAAgB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oBAAoB,GAAG,uBAAuB;AAC3F;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kFAAa;AACzC;AACA,oDAAoD,+EAAU;AAC9D,6BAA6B,gBAAgB;AAC7C,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iEAAe,yBAAyB,EAAC;AACzC;;;;;;;;;;;;AChMqE;AACD;AACX;AACzD;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAO,CAAC,IAA2B;AACnE;AACA,+EAA+E,8FAA8F;AAC7K;AACA,kBAAe;AACf;;;;;;;ACnBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B,GAAG,kBAAkB,GAAG,kBAAkB,GAAG,cAAc,GAAG,sBAAsB,GAAG,oBAAoB,GAAG,kBAAkB,GAAG,oBAAoB,GAAG,4BAA4B,GAAG,eAAe,GAAG,YAAY,GAAG,kBAAkB,GAAG,gBAAgB,GAAG,kBAAkB,GAAG,eAAe,GAAG,cAAc,GAAG,gBAAgB,GAAG,oBAAoB,GAAG,iBAAiB,GAAG,uBAAuB,GAAG,qBAAqB,GAAG,gBAAgB,GAAG,iBAAiB;AAC1e;AACA,iBAAiB;AACjB;AACA;AACA,0BAA0B;AAC1B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACraAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8CAA8C;AAC9C,6BAAgC;AAChC,iCAAiC;AACjC;AACA;AACA;AACA,gBAAgB;AAChB,qBAAqB;AACrB,uBAAuB;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,kBAAkB;AAClB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe;AACf;AACA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AACloBAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,sBAAsB;AACtB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA,IAAI,kBAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,kCAAkC;AAClC;AACA;AACA,oCAAoC;AACpC;AACA;AACA,oCAAoC;AACpC;AACA;AACA,sCAAsC;AACtC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7yCa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,gBAAgB,mBAAO,CAAC,IAAa;AACrC;AACA,wCAAwC,mBAAO,CAAC,IAAiC;AACjF;AACA;AACA;AACA,2BAA2B,mwBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,wBAAwB;AACxB;;;;;;;AChUa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,kBAAkB,GAAG,kBAAkB,GAAG,gBAAgB,GAAG,eAAe,GAAG,gBAAgB,GAAG,iBAAiB,GAAG,gBAAgB;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;;;;;;ACnJa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC,GAAG,mCAAmC,GAAG,gCAAgC,GAAG,2BAA2B,GAAG,yBAAyB,GAAG,mBAAmB;AAC5L;AACA,0BAA0B,mBAAO,CAAC,IAA0C;AAC5E,wCAAwC,mBAAO,CAAC,IAAiC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mCAAmC;AACnC;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClXa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;;;;;;;AC3Ca;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,qBAAqB;AACtC,mBAAmB,mBAAO,CAAC,IAAc;AACzC,qBAAqB;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxCa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oEAAoE,yDAAyD;AAC7H;AACA;AACA,CAAC;AACD,kBAAkB;AAClB;;;;;;;AChFa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,aAAa;AACb;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;;;;;;ACtHa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,iBAAiB;AAClC,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,wBAAwB,mBAAO,CAAC,IAAqB;AACrD,uBAAuB,mBAAO,CAAC,IAAuB;AACtD,kBAAkB,mBAAO,CAAC,IAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,6EAA6E;AAC7E;AACA;AACA;;;;;;;AChJa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,wBAAwB,GAAG,sBAAsB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,6BAA6B;AAC7B;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;;;;;;ACvFa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,sBAAsB,GAAG,oBAAoB,GAAG,yBAAyB,GAAG,yBAAyB;AACjI,kBAAkB,mBAAO,CAAC,IAA6B;AACvD,2BAA2B,mBAAO,CAAC,GAAsC;AACzE;AACA,qBAAqB,mBAAO,CAAC,IAAkB;AAC/C,sBAAsB;AACtB,mBAAmB,mBAAO,CAAC,IAAgB;AAC3C,oBAAoB;AACpB,wBAAwB,mBAAO,CAAC,IAAqB;AACrD,yBAAyB;AACzB,2BAA2B,mBAAO,CAAC,IAAsB;AACzD,6BAA6B,KAAK,GAAG,OAAO,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,yBAAyB;AACzB;;;;;;;AC/Na;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C,oBAAoB,KAAK;AACpE;;;;;;;ACxCa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B,GAAG,gCAAgC,GAAG,cAAc,GAAG,wBAAwB,GAAG,iBAAiB,GAAG,qBAAqB,GAAG,2BAA2B,GAAG,2BAA2B,GAAG,wBAAwB,GAAG,uCAAuC;AAC3R;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,IAA6B;AACvD;AACA,wCAAwC,mBAAO,CAAC,IAAiC;AACjF;AACA,uBAAuB,mBAAO,CAAC,IAAuB;AACtD,wBAAwB,mBAAO,CAAC,IAAqB;AACrD,0BAA0B,mBAAO,CAAC,IAAqB;AACvD,mCAAmC,IAAI;AACvC;AACA,oCAAoC,IAAI,KAAK;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,yEAAyE;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtuBa;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D,yBAAkB,GAAG,UAAY,GAAG,UAAyB,GAAG,UAA6B,GAAG,UAAwB,GAAG,yBAAyB,GAAG,yBAAiB,GAAG,yBAAmB,GAAG,yBAAgB,GAAG,UAA8B,GAAG,yBAAwB,GAAG,UAAsB,GAAG,yBAAkB,GAAG,yBAAkB;AAChV,iBAAiB,mBAAO,CAAC,IAAc;AACvC,yBAAkB;AAClB,qBAAqB,mBAAO,CAAC,IAAkB;AAC/C,UAAsB;AACtB,uBAAuB,mBAAO,CAAC,IAAoB;AACnD,yBAAwB;AACxB,6BAA6B,mBAAO,CAAC,IAA0B;AAC/D,UAA8B;AAC9B,iBAAiB,mBAAO,CAAC,IAAc;AACvC,yBAAkB;AAClB,WAAW,mBAAO,CAAC,IAAe;AAClC,UAAY;AACZ,iBAAiB,mBAAO,CAAC,IAAmB;AAC5C,yBAAkB;AAClB,eAAe,mBAAO,CAAC,GAAY;AACnC,yBAAgB;AAChB,gBAAgB,mBAAO,CAAC,IAAkB;AAC1C,yBAAiB;AACjB,uBAAuB,mBAAO,CAAC,IAAyB;AACxD,UAAwB;AACxB,wBAAwB,mBAAO,CAAC,IAAuC;AACvE,yBAAyB;AACzB,4BAA4B,mBAAO,CAAC,IAA2C;AAC/E,UAA6B;AAC7B,wBAAwB,mBAAO,CAAC,IAAuC;AACvE,UAAyB;AACzB,kBAAkB,mBAAO,CAAC,IAAe;AACzC,yBAAmB;AACnB;;;;;;;AC/Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;;;;;;;ACFa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B,GAAG,+BAA+B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA,CAAC;AACD,+BAA+B;AAC/B,+BAA+B;AAC/B;;;;;;;ACvDa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B,GAAG,8BAA8B,GAAG,6BAA6B,GAAG,yBAAyB,GAAG,4BAA4B,GAAG,6BAA6B,GAAG,sBAAsB,GAAG,yBAAyB,GAAG,kBAAkB,GAAG,cAAc,GAAG,2BAA2B,GAAG,sBAAsB,GAAG,8BAA8B,GAAG,oBAAoB,GAAG,0BAA0B,GAAG,2CAA2C,GAAG,qBAAqB,GAAG,2BAA2B,GAAG,qBAAqB,GAAG,0BAA0B,GAAG,gBAAgB,GAAG,kBAAkB,GAAG,4BAA4B,GAAG,uBAAuB,GAAG,cAAc,GAAG,gBAAgB;AAC3rB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,iCAAiC;AACjC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;;;;;;ACxRa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,gCAAgC,GAAG,0BAA0B,GAAG,mCAAmC,GAAG,gCAAgC,GAAG,kCAAkC,GAAG,6BAA6B,GAAG,oCAAoC,GAAG,4BAA4B,GAAG,0BAA0B,GAAG,2BAA2B,GAAG,yBAAyB;AACrb;AACA,wCAAwC,mBAAO,CAAC,IAAiC;AACjF;AACA,kBAAkB,mBAAO,CAAC,IAAe;AACzC,gCAAgC,mBAAO,CAAC,GAA0C;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,+BAA+B;AAC/B,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;;;;;;ACzXa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B,GAAG,sBAAsB,GAAG,4BAA4B;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;;;;;;ACxDa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qCAAqC,GAAG,uBAAuB,GAAG,oBAAoB,GAAG,qBAAqB,GAAG,+BAA+B,GAAG,uBAAuB,GAAG,+BAA+B,GAAG,iCAAiC,GAAG,cAAc,GAAG,cAAc,GAAG,0BAA0B,GAAG,8BAA8B,GAAG,wBAAwB,GAAG,yBAAyB,GAAG,0BAA0B,GAAG,yBAAyB,GAAG,4BAA4B,GAAG,4BAA4B;AAC9f,0BAA0B,mBAAO,CAAC,IAAuC;AACzE,8BAA8B,mBAAO,CAAC,IAA2C;AACjF,uBAAuB,mBAAO,CAAC,IAAoB;AACnD,0BAA0B,mBAAO,CAAC,IAAuC;AACzE,yBAAyB,mBAAO,CAAC,IAAyB;AAC1D,wCAAwC,mBAAO,CAAC,IAAiC;AACjF,4CAA4C,mBAAO,CAAC,GAAqC;AACzF;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,WAAW,OAAO;AAClB;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE,GAAG,EAAE;AACjC,gCAAgC,GAAG,KAAK,EAAE;AAC1C,+BAA+B,GAAG,IAAI,EAAE;AACxC;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA,0CAA0C,EAAE;AAC5C;AACA,0CAA0C,EAAE;AAC5C;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D,oCAAoC,gCAAgC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc;AACd;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,wBAAwB;AACnC,WAAW,kCAAkC;AAC7C,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;;;;;;AC7fa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,uBAAuB,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,YAAY;AACvG;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,cAAc,SAAS,EAAE,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnsCAAsC;AACtC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzeA;AACA;AACA;AACO;AACP;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,kDAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCgE;AACF;AACE;AACE;AACA;AACG;AACU;AAC5C;AACY;AACI;AACV;AACc;AACd;AAC4K;AACrN;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoC;AAC0B;AACvD;AACP;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAoB;AAChD;AACA,uBAAuB,4CAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0CAAY;AAC9B;AACA,wBAAwB,0CAAY;AACpC;AACA;AACA,iCAAiC,0CAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0CAAY;AACtC,6BAA6B,qDAAuB;AACpD,6BAA6B,oDAAsB;AACnD,+BAA+B,uEAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA,8BAA8B,0CAAY;AAC1C,iCAAiC,qDAAuB;AACxD,iCAAiC,oDAAsB;AACvD;AACA;AACA,kCAAkC,0CAAY;AAC9C,gCAAgC,gBAAgB;AAChD;AACA,uCAAuC,uEAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAwB,8BAA8B,sDAAwB;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAmB;AAC7C;AACA;AACA,gBAAgB,qDAAuB;AACvC;AACA,wBAAwB,WAAW;AACnC,gBAAgB,qDAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA,iCAAiC,sDAAwB;AACzD,iCAAiC,uDAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoC;AAC7B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0CAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0CAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kDAAoB;AACtC,kBAAkB,kDAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;AC7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8D;AACtB;AACxC;AACO;AACP;AACA;AACA;AACA;AACA,YAAY,+DAAsB;AAClC;AACA;AACA,YAAY,+DAAsB;AAClC;AACA;AACA,YAAY,+DAAsB;AAClC;AACA;AACA,YAAY,+DAAsB;AAClC;AACA;AACA,YAAY,+DAAsB;AAClC;AACA;AACA,YAAY,+DAAsB;AAClC;AACA;AACA,YAAY,+DAAsB;AACleAAe,WAAW;AAC1B;AACA;AACA;AACA,eAAe,qDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAsB;AACrsCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzoBA;;;;;;;;;;ACAe;AACf;AACA;;;;;;;;;;;;;;;ACFuC;AACF;AACJ;;AAEjC,wBAAwB,iEAAQ,CAAC,8DAAS;AACnC;AACA;AACA,qBAAqB,iEAAQ,CAAC,2DAAM;AAC3C,iEAAe,WAAW,EAAC;;;;;;;;;;;;;ACRY;AACE;;AAE1B;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAS;AACxB,yBAAyB,kEAAS;AAClC;AACA,IAAI;AACJ,qBAAqB,8DAAS,UAAU,+DAAU;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;;;;;;;;;;;ACvDe;AACf;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNe;AACf;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnBe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACZA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC,yBAAyB,OAAO;AAChC,IAAI;AACJ,iCAAiC,OAAO;AACxC,yBAAyB,OAAO;AAChC;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;ACtDqC;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yGAAyG,6DAAQ;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,4FAA4F;;AAEvI;AACA;AACA,2CAA2C,gCAAgC,yEAAyE;AACpJ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,yCAAyC;;AAElF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,yBAAyB;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;AC7KA,6BAAe,oCAAS;AACxB;AACA;;;;;;;;;;;;;ACGmB;;;;;;;;;;ACLkB;AACW;AACL;AACE;AACL;AACH;AACD;AACgB;;AAEpD,iBAAiB,aAAa;AAC9B,kBAAkB,cAAc;AAChC,mBAAmB,eAAe;AAClC,mBAAmB;;AAEnB,OAAO,eAAe;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,iEAAiE;AAC3F,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA,0BAA0B,iEAAiE;AAC3F,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA,wBAAwB,yCAAyC;AACjE,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEA,6BAAe,sCAAW;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,gBAAgB;;AAEvD;;AAEA;AACA,qCAAqC,oCAAoC;AACzE,sCAAsC,yBAAyB;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,sDAAsD;AACrG,6DAA6D,sCAAsC;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,iHAAiH;AACpJ,mCAAmC,iGAAiG;AACpI,uCAAuC,wGAAwG;AAC/I,wCAAwC,wGAAwG;AAChJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,qBAAqB,QAAQ;AAC3E,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA,yCAAyC;AACzC,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACvmBoB;;;;;;;;;;;;;;ACLuB;;AAEpC;;AAEA;AACA;;AAEP;AACA;AACA;AACA,yBAAyB,IAAI;AAC7B,wCAAwC,IAAI,GAAG,IAAI,GAAG,IAAI;AAC1D,wCAAwC,IAAI,GAAG,IAAI,GAAG,IAAI;AAC1D,0CAA0C,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AACnE,0CAA0C,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AACnE,wCAAwC,IAAI,GAAG,IAAI,GAAG,IAAI;AAC1D,0CAA0C,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;;AAEne;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,+DAAM,WAAW,2DAAM;AACvB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,aAAa,YAAY,EAAE,YAAY,EAAE,YAAY;AACrD;;AAEA;AACA,aAAa,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,oDAAoD;AAC3G;;AAEA;AACA;AACA,YAAY,2BAA2B,EAAE,eAAe,IAAI,eAAe,IAAI,eAAe,EAAE,qBAAqB,EAAE,GAAG;AAC1H;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAAM,WAAW,2DAAM;AACvB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,cAAc,2BAA2B,EAAE,eAAe,IAAI,qBAAqB,KAAK,qBAAqB,GAAG,qBAAqB,EAAE,GAAG;AAC1I;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3YA,6BAAe,oCAAS;AACxB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;;;;;;;;;;ACTA,YAAY;;AAEZ;AACA,8CAA8C,KAAK,OAAO;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA;AACA,GAAG;AACH;AACA,mFAAmF,OAAO;AAC1F;AACA,gDAAgD,OAAO;AACvD,GAAG;AACH;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;;AAEA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;ACnFjB;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;ACVuC;;AAEvC;AACO;AACA;;AAEP;AACA;AACA;AACA;AACA,CAAC;;AAEc;AACf,WAAW,+DAAY;AACvB;AACA;AACA;AACA;;;;;;;;;;;;ACjBsD;;AAEtD,6BAAe,oCAAS;AACxB,aAAa,8EAAkB;AAC/B;;;;;;;;;;;;ACJA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP,gGAAgG;AAChG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnBA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACjBA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACNsD;;AAE/C;;AAEP,6BAAe,oCAAS;AACxB,UAAU,8EAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,8EAAkB,gCAAgC;AAC9F;;;;;;;;;;;;ACfsD;;AAEtD,6BAAe,oCAAS;AACxB,UAAU,8EAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,uDAAuD;;AAEhD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9CA;AACA,6BAAe,oCAAS;AACxB,kDAAkD,OAAO;AACzD;AACA,6BAA6B;AAC7B,sCAAsC,QAAQ;AAC9C,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;;;;;;;;;;;;;;ACV+C;AACM;AACN;;AAE/C,iEAAe;AACf;AACA;AACA;AACA,OAAO,kEAAa;AACpB;AACA;AACA;AACA;AACA,iBAAiB,sEAAa;AAC9B,OAAO,kEAAa;AACpB,OAAO,qEAAgB;AACvB;AACA;AACA,CAAC,EAAC;;;;;;;;;;;AClBF,6BAAe,oCAAS;AACxB;AACA;;;;;;;;;;;;;;;;;;;ACFqC;AACM;AACM;AACE;AACV;AACE;AACU;AAChB;;AAErC;AACA;;AAEA,6BAAe,oCAAS;AACxB,gFAAgF,6DAAQ,GAAG,oEAAW;AACtG;AACA;AACA;AACA,iDAAiD,6DAAQ,GAAG,uEAAc;AAC1E;AACA;AACA;;AAEA;AACA,gBAAgB,wEAAe;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,gEAAW;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,gEAAW;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,mEAAU;;AAEpC;AACA;;AAEA;AACA;AACA,mDAAmD,yEAAc;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE,uEAAuE;AACvE,sIAAsI;AACtI,sEAAsE;AACtE;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,wEAAe;AAClD,gDAAgD,iEAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnJqC;;AAErC,6BAAe,oCAAS;AACxB,sBAAsB,iEAAQ;AAC9B;;;;;;;;;;;;ACJqC;;AAErC,6BAAe,oCAAS;AACxB,yDAAyD,iEAAQ,qBAAqB,iEAAQ;AAC9F;;;;;;;;;;;;ACJqC;;AAErC,6BAAe,oCAAS;AACxB;AACA,qBAAqB,iEAAQ,QAAQ,iEAAQ;AAC7C;;;;;;;;;;;;ACL+B;AAC6B;;AAE5D,6BAAe,oCAAS;AACxB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ,YAAY,8DAAK;AACvC,SAAS,QAAQ;;AAEjB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;;;;;;;;;;;;ACrBO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBiC;;AAEjC,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yDAAK;AAChB;AACA;;;;;;;;;;;;;;ACZqC;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,0CAA0C,iEAAQ;AAClD;AACA;;AAEe;AACf;AACA,4BAA4B,iEAAQ;AACpC;;;;;;;;;;;AC5BA,iEAAe,YAAY,EAAC;;;;;;;;;;;ACA5B,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLkD;AACK;AACA;AACY;AACd;AACQ;AACV;AACM;AACU;AACV;AACF;AACE;AAC6B;AACjC;AAC4E;AAC/C;AAC/B;AAC+B;AACwB;AACtD;AACF;;;;;;;;;;;ACpBlD,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;;;;;;;;;;;;ACJA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;ACb+B;;AAE/B,6BAAe,oCAAS;AACxB,YAAY;AACZ,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,8DAAK;AAClB,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtByC;AACV;AACY;AACD;;AAE1C,iEAAe;AACf,cAAc,0DAAK;;AAEnB;AACA,2BAA2B,uDAAQ,mBAAmB,uDAAQ;AAC9D;AACA;AACA,kBAAkB,+DAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC,IAAI,EAAC;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,cAAc,uDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,yBAAyB,0DAAK;AAC9B,+BAA+B,gEAAW;;;;;;;;;;;ACtDjD,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;;;;;;;;;;;;ACJiC;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,4BAA4B;AAC5B;AACA;AACA,yCAAyC;AACzC,4BAA4B;AAC5B;AACA,MAAM,OAAO;AACb;AACA,cAAc,SAAS,+DAAM,SAAS;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA,SAAS;AACT;;;;;;;;;;;;AC/DA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACzBkC;AACY;;AAE9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa,+DAAM,SAAS,GAAG,aAAa,+DAAM,SAAS;AACzE,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,gCAAgC;AACjE,cAAc,sDAAsD,+DAAM,OAAO;AACjF,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,cAAc,qDAAqD,+DAAM,OAAO;AAChF,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa,+DAAM,SAAS,GAAG,aAAa,+DAAM,SAAS;AACzE,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,mDAAmD,wDAAQ;AAC3D,mDAAmD,wDAAQ;;;;;;;;;;;;;AC9Df;;AAEnD;;AAEA;AACO;AACP;AACA,wBAAwB,4DAAQ,GAAG,kEAAS;AAC5C;;AAEO;AACP,4BAA4B,4DAAQ;AACpC;AACA;AACA,iEAAiE,4DAAQ;AACzE;AACA,SAAS,kEAAS;AAClB;;;;;;;;;;;;;;;;;;;;ACjB+B;AACJ;AACa;AACX;AACI;AACA;AACA;AACI;AACuB;;AAE5D,6BAAe,oCAAS;AACxB;AACA,wCAAwC,iEAAQ;AAChD,0BAA0B,2DAAM;AAChC,+BAA+B,8DAAK,eAAe,yDAAG,IAAI,2DAAM;AAChE,qBAAqB,0DAAK,GAAG,yDAAG;AAChC,4BAA4B,yDAAI;AAChC,QAAQ,uEAAa,MAAM,gEAAW;AACtC,2BAA2B,4DAAY;AACvC,0FAA0F,2DAAM;AAChG,QAAQ,2DAAM;AACd;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB,GAAG,yBAAyB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc,GAAG,cAAc;AACnD;AACA;AACA,oBAAoB,IAAI,GAAG,IAAI,GAAG,cAAc,GAAG,cAAc;AACjE;AACA;AACA,oBAAoB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,cAAc,GAAG,cAAc;AAC/E;AACA;AACA;;AAEA;AACA,mDAAmD,EAAE;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,cAAc,GAAG,cAAc;AACrD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,cAAc,GAAG,cAAc;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,eAAe,GAAG,eAAe;AACzD;;AAEA,sBAAsB,EAAE,GAAG,EAAE,OAAO,yBAAyB,GAAG,0BAA0B,GAAG,0BAA0B;AACvH;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,EAAE;;AAErD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,GAAG,GAAG,GAAG;AAC/B;;AAEA;AACA;AACA,sBAAsB,GAAG,GAAG,GAAG;AAC/B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,EAAE,GAAG,EAAE,OAAO,GAAG,GAAG,OAAO,GAAG,OAAO,GAAG,EAAE,GAAG,EAAE,OAAO,GAAG,GAAG,cAAc,GAAG,cAAc;AACjH;;AAEA;AACA;AACA,sBAAsB,EAAE,GAAG,EAAE,KAAK,YAAY,GAAG,GAAG,GAAG,gCAAgC,GAAG,gCAAgC;AAC1H;AACA;AACA;AACA,oBAAoB,yBAAyB,GAAG,yBAAyB,GAAG,OAAO,GAAG,GAAG,GAAG,GAAG;AAC/F;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;AC3J2C;AACP;AACD;;AAEpB;AACf,cAAc,gEAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6DAAQ,sBAAsB,0BAA0B;AACzE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,wDAAS;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;ACpGe;AACf;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACJgC;AACoE;AAC/D;AACJ;;AAEjC;;AAEO;AACP;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,QAAQ,iEAAQ;AAChB;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,8DAAM;AAClB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,oBAAoB,+DAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wFAAwF,+DAAiB;AACzG;;AAEA;AACA,sDAAsD,2DAAM;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD,+DAAgB;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;;;;;;;;;;;;;;ACzHmB;;AAII;;AAIF;;AAIH;;AAIG;;AAKC;;AAKJ;;AAIG;;AAIE;;AAIA;;AAIC;;AAIL;;AAIG;;AAQG;;AAIQ;;AAQT;;AAIC;;;;;;;;;;;;AC7ElB;AACP;AACA;AACA,gCAAgC;AAChC,+CAA+C;AAC/C;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzB8C;AACG;AACb;AACK;;AAElC;AACP;;AAEA;AACA;AACA,WAAW,8DAAK;AAChB;;AAEA;AACA;AACA,WAAW,mEAAU;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAa;AAC1B;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEe;AACf,cAAc,oEAAU;;AAExB;AACA,WAAW,6DAAI;AACf;;AAEA,EAAE,wDAAS;;AAEX;AACA;;;;;;;;;;;ACrEe;AACf;AACA;;;;;;;;;;;;;;ACFmC;AACC;;AAE7B;;AAEQ;AACf,kBAAkB,wDAAS;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,wDAAS;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAS;;AAEX;AACA;;;;;;;;;;;;;;;;;AC7CkC;AAC+E;;AAElG;AACf,aAAa,4DAAQ;AACrB;AACA,cAAc,8DAAe;AAC7B;AACA;AACA;AACA,4DAA4D,8DAAe;AAC3E,aAAa,gEAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8DAAc;AAC1E;AACA;AACA;AACA;AACA,4DAA4D,8DAAc;AAC1E;AACA;AACA;AACA,SAAS,2DAAM;AACf;;;;;;;;;;;AC5BA;AACA;AACA;AACA,cAAc;AACd;AACA;AACe;AACf;AACA;;;;;;;;;;;ACRA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;;;;;;;;;;;;;ACJuC;AACD;;AAEtC;AACA;AACA;AACA;AACA,mBAAmB,0DAAK,8CAA8C,0DAAK;AAC3E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB,iBAAiB,kEAAS;AAC1B;AACA;AACA;AACA;;;;;;;;;;;;;;ACxB8C;AACE;AACJ;AACI;AACI;AACE;AACN;AACE;AACJ;AACM;AACM;AACR;AACM;AACC;AACX;;;;;;;;;;;;ACd9C,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACVyC;;AAEzC,6BAAe,oCAAS;AACxB;AACA;AACA,SAAS,+DAAU,2BAA2B,OAAO,+DAAU,uBAAuB,QAAQ;AAC9F;;;;;;;;;;;;ACNO;;AAEP,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;ACRmD;;AAErD,6BAAe,oCAAS;AACxB;AACA,YAAY,oEAAS;AACrB,YAAY,oEAAS,eAAe,+DAAI;AACxC;;;;;;;;;;;;;ACN+B;AACsB;;AAErD,6BAAe,oCAAS;AACxB;AACA,YAAY,oEAAS;AACrB,YAAY,oEAAS,EAAE,8DAAK,aAAa,+DAAI;AAC7C;;;;;;;;;;;;ACPoC;;AAEpC,6BAAe,oCAAS;AACxB,mDAAmD,gEAAO;AAC1D;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACPwC;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB,iBAAiB,kEAAS;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxDA,6BAAe,sCAAW;AAC1B;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;;;;;;;;;;;;;;ACZqC;AACA;AACC;;AAEtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA,MAAM;AACN,qBAAqB,yDAAS;AAC9B;AACA;;AAEA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAg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G;AACH;;;;;;;;;;;ACbA,6BAAe,uCAAY;AAC3B,4DAA4D,OAAO;AACnE,+DAA+D,OAAO;AACtE;AACA;AACA;AACA;;;;;;;;;;;ACNA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;;;;;;;;;;ACdA;AACA;AACA;;AAEA,6BAAe,sCAAW;AAC1B;AACA;;;;;;;;;;;;ACNqC;;AAErC,6BAAe,oCAAS;AACxB;;AAEA,+JAA+J,OAAO;AACtK,yHAAyH,OAAO;AAChI;AACA;AACA;AACA;AACA;;AAEA,SAAS,QAAQ;AACjB;AACA;;AAEA,aAAa,0DAAS;AACtB;;;;;;;;;;;AClBA,6BAAe,sCAAW;;AAE1B,4DAA4D,OAAO;AACnE,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACVA,6BAAe,sCAAW;AAC1B;AACA;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;;AAEA;AACA;AACA,8CAA8C,OAAO;AACrD,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,OAAO;AACrB;AACA;;;;;;;;;;;AClEA,6BAAe,sCAAW;;AAE1B,6DAA6D,QAAQ;AACrE,6EAA6E,SAAS;AACtF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3BA;AACA;AACA;;AAEA,6BAAe,sCAAW;AAC1B;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;;AAEA,6BAAe,sCAAW;AAC1B;AACA;;;;;;;;;;;;;ACPqC;AACC;;AAEtC,6BAAe,oCAAS;AACxB,6CAA6C,iEAAQ;;AAErD,sFAAsF,OAAO;AAC7F,gHAAgH,OAAO;AACvH;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,0DAAS;AACtB;;;;;;;;;;;;;;AChBqC;AACL;AACY;;AAE5C;AACA;AACA,WAAW,8DAAK;AAChB;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA,gBAAgB,oEAAW;;AAE3B,0FAA0F,OAAO;AACjG,+DAA+D,OAAO;AACtE;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,0DAAS;AACtB;;;;;;;;;;;;ACxB2C;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA,wDAAwD,kEAAY;AACpE;;;;;;;;;;;;ACjB2C;;AAE3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA,6DAA6D,kEAAY;AACzE;;;;;;;;;;;ACjBA,6BAAe,sCAAW;AAC1B;AACA,mCAAmC;AACnC;AACA;;;;;;;;;;;;ACJqC;;AAErC,6BAAe,oCAAS;AACxB;;AAEA;AACA;AACA;;AAEA,uFAAuF,OAAO;AAC9F,yGAAyG,OAAO;AAChH;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,0DAAS;AACtB;;AAEA;AACA;AACA;;;;;;;;;;;ACvBA,6BAAe,oCAAS;AACxB;AACA;;;;;;;;;;;;;ACFuC;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,SAAS,+DAAW;AACpB;;;;;;;;;;;AClCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxBA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;;;;;;;;;;;ACRA,6BAAe,oCAAS;AACxB;AACA;AACA,2BAA2B;AAC3B;;;;;;;;;;;;ACJO;;AAEP,6BAAe,oCAAS;AACxB;AACA;AACA,qBAAqB;AACrB;;;;;;;;;;;ACNA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,+BAA+B,sEAAsE;AACrG,+BAA+B;AAC/B,2CAA2C;AAC3C;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;;;;;;;;;;;;AC9BwC;AACE;AACA;AACF;AACqC,CAAC;AACD,CAAC;AACtB;AACiB;;AAEyB;AACnC;AACJ;AACF;AACI;AACE;AACR;AACI;AACE;AACN;AACQ;AACE;AACZ;AACwB;;AAEV;AACJ;AACR;AACkB;AAChB;AACgB;AACJ;AACR;AACgB;AACJ;AACR;AACI;AACZ;AACoC;AAClC;AACsD;;AAErE;AACoB;AACM;AACV;AACY;AACR;AACM;AACF;AACE;AACF;AACV;AACM;;;;;;;;;;;;;;;;ACpDjC;AACM;AACO;AACT;AACiB;;AAEpD,6BAAe,oCAAS;AACxB,gBAAgB,iEAAQ;AACxB;AACA,cAAc,iEAAW;AACzB;AACA,aAAa,2DAAQ;;AAErB,wDAAwD,wCAAM,GAAG,iEAAQ;AACzE,wDAAwD,wCAAM,GAAG,iEAAQ;;AAEzE;AACA;AACA,oBAAoB,8DAAK;AACzB;AACA;AACA;;AAEA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iEAAiE,iEAAQ;AACzE;;AAEA;AACA,iEAAiE,iEAAQ;AACzE;;AAEA;AACA,uEAAuE,iEAAQ;AAC/E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzD6B;;AAEtB;AACP;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;;AAEA,mBAAmB,mDAAI;AACvB;;;;;;;;;;;;AClBO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;ACNiC;;AAEjC,6BAAe,oCAAS;AACxB,cAAc,sDAAK;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sIAAsI;;AAE/H;AACP;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP,SAAS;AACT,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;AC7G8B;AAC8B;AACd;AACM;;;;;;;;;;;;ACHa;;AAEjE,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,mDAAmD,eAAe;AAClE,8BAA8B,uEAAQ,qBAAqB,qEAAM;AACjE,qBAAqB,oEAAK;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACvBuC;AACU;AACE;;AAEnD,8DAAS,uBAAuB,8DAAmB;AACnD,8DAAS,wBAAwB,+DAAoB;;;;;;;;;;;;ACLb;;AAExC,6BAAe,oCAAS;AACxB;AACA,IAAI,kEAAS;AACb,GAAG;AACH;;;;;;;;;;;;;;;ACNyD;AACR;AACV;AACV;;AAE7B;AACA;AACA;AACA;AACA,QAAQ,yDAAc;AACtB;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;;AAEA,sBAAsB,sEAAU;AAChC;AACA,IAAI;AACJ,SAAS,qEAAK,oCAAoC,uDAAG;AACrD;;AAEA,4DAA4D,OAAO;AACnE,+DAA+D,OAAO;AACtE;AACA,QAAQ,6EAAQ;AAChB;AACA;AACA;;AAEA,aAAa,sEAAU;AACvB;;;;;;;;;;;;;;;ACzC+E;AACxC;AACD;AACK;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB,iBAAiB,iEAAS,uCAAuC,4EAAoB,GAAG,gEAAW;AACnG;AACA,sEAAsE,8DAAU;AAChF;AACA;AACA;;;;;;;;;;;;AC7EuC;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA,iBAAiB,iEAAS;AAC1B;AACA;;;;;;;;;;;;AC3CwC;;AAExC;AACA;AACA,I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;AAEA;AACA;AACA;AACA,eAAe,yDAAK;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C,sCAAsC,6DAAO;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD;AACzD;AACA,2DAA2D;AAC3D;AACA,IAAI,6DAAO;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;;;;;;;;;;;;;ACxJsC;AACA;AACM;;AAE5C,6BAAe,oCAAS;AACxB;AACA;;AAEA,6CAA6C,iEAAQ;;AAErD,sFAAsF,OAAO;AAC7F,gHAAgH,OAAO;AACvH;AACA;AACA;AACA,QAAQ,kEAAQ,qCAAqC,2DAAG;AACxD;AACA;AACA;;AAEA,aAAa,2DAAU;AACvB;;;;;;;;;;;;;;ACrByC;AACH;AACM;;AAE5C,6BAAe,oCAAS;AACxB;AACA;;AAEA,6CAA6C,iEAAW;;AAExD,0FAA0F,OAAO;AACjG,+DAA+D,OAAO;AACtE;AACA,yFAAyF,2DAAG,wCAAwC,OAAO;AAC3I;AACA,YAAY,kEAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,2DAAU;AACvB;;;;;;;;;;;;ACzBuC;;AAEvC,gBAAgB,8DAAS;;AAEzB,6BAAe,sCAAW;AAC1B;AACA;;;;;;;;;;;;;;;;ACN+E;AAC5C;AACD;AACI;AACK;;AAE3C;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAK;AACvB,oDAAoD,iEAAK;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAK;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAK;AACvB;AACA;AACA,6EAA6E,iEAAK;AAClF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,2DAAG;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB,yCAAyC,4EAAoB,GAAG,gEAAW;AAC3E;AACA;AACA;AACA;AACA,+CAA+C,8DAAU;AACzD;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvBsC;;AAEtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA,qBAAqB,8DAAU;AAC/B;AACA;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvB6C;AACD;;AAE5C,6BAAe,sCAAW;AAC1B;AACA;AACA,YAAY,0DAAK;;AAEjB,4DAA4D,OAAO;AACnE,+DAA+D,OAAO;AACtE;AACA,sBAAsB,2DAAG;AACzB,QAAQ,kEAAQ;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,aAAa,2DAAU;AACvB;;;;;;;;;;;;;ACvBuC;;AAEvC;AACA;AACA;AACA,mBAAmB,2DAAG;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,2DAAG;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB,4BAA4B,OAAO;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAAe,oCAAS;AACxB;;AAEA;;AAEA;AACA,gBAAgB,2DAAG;AACnB,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA;AACA,mBAAmB,2DAAG;AACtB,2CAA2C;AAC3C,GAAG;;AAEH;AACA,WAAW,2DAAG;AACd;AACA;;;;;;;;;;AChF0C;AACoE;;;;;;;;;ACDvG;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEO;;AAEP;;AAEe;AACf;AACA;AACA;;;;;;;;;;AClDqC;AACW;AACD;AACF;AACL;AACH;AACF;AACgB;AACC;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,sCAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,gDAAgD;AACvF,oDAAoD,8CAA8C;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mBAAmB,4BAA4B;AAC/C;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iFAAiF,uBAAuB;AACxG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,qBAAqB;AAC/D,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC9byB;AACD;AACC;AACA;AACA;AACE;AACC;AACA;AACJ;AACD;AACC;AACC;AACA;AACC;AACH;AACM;AACE;AACP;AACG;AACC;AACF;AACD;AACU;AACN;AACJ;AACD;AACO;AACN;AACK;AACN;;;;;;;;;;;;AC7BjB;AACP;AACA;AACA,mCAAmC,UAAU,iBAAiB,SAAS,YAAY;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,mCAAmC,UAAU,iBAAiB,SAAS,YAAY;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;UC5DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN0C;AAK1C,IAAI,uBAAU,GAAQ,SAAS,CAAC;AAChC,IAAI,oBAAO,GAAQ,MAAM,CAAC,uBAAU,CAAC,CAAC;AACtC,IAAI,2EAA8D,GAAkB;IAChF,IAAI,EAAE,gEAAgE;IACtE,WAAW,EAAE,+BAA+B;IAC5C,KAAK,EAAE,QAAQ;IACf,UAAU,EAAE,OAAO;IACnB,MAAM,EAAE,CAAC,OAAkC,EAAE,EAAE;QAC3C,IAAI,kEAAM,EAAE,CAAC;YACT,OAAO,IAAI,kEAAM,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;QACD,MAAM,2BAA2B,CAAC;IACtC,CAAC;IACD,iBAAiB,EAAE,CAAC,QAAgB,EAAE,OAAiC,EAAE,YAAoB,EAAE,EAAE;QAC7F,MAAM,cAAc,GAAS,UAAW,CAAC,cAAc,CAAC;QACxD,IAAI,QAAQ,IAAI,cAAc,EAAE,CAAC;YAC7B,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;IACD,MAAM,EAAE,IAAI;CACf,CAAC;AACF,IAAI,OAAO,oBAAO,KAAK,WAAW,EAAE,CAAC;IACjC,oBAAO,CAAC,OAAO,GAAG,oBAAO,CAAC,OAAO,IAAI,EAAE,CAAC;IACxC,oBAAO,CAAC,OAAO,CAAC,OAAO,GAAG,oBAAO,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;IACxD,oBAAO,CAAC,OAAO,CAAC,OAAO,CAAC,gEAAgE,CAAC,GAAG,2EAA8D,CAAC;AAC/J,CAAC;AACD,mDAAe,2EAA8D,EAAC","sources":["webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/globalize/powerbiGlobalizeLocales.js","webpack:///./src/visual.ts","webpack:///./node_modules/powerbi-visuals-utils-chartutils/lib/axis/axis.js","webpack:///./node_modules/powerbi-visuals-utils-chartutils/lib/dataLabel/dataLabelUtils.js","webpack:///./node_modules/powerbi-visuals-utils-chartutils/lib/legend/legend.js","webpack:///./node_modules/powerbi-visuals-utils-chartutils/lib/legend/legendInterfaces.js","webpack:///./node_modules/powerbi-visuals-utils-chartutils/lib/legend/markers.js","webpack:///./node_modules/powerbi-visuals-utils-chartutils/lib/legend/svgLegend.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/converterHelper.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataRoleHelper.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataViewObject.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataViewObjects.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataViewObjectsParser.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataViewTransform.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataViewWildcard.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/index.js","webpack:///./node_modules/powerbi-visuals-utils-formattingmodel/lib/FormattingSettingsComponents.js","webpack:///./node_modules/powerbi-visuals-utils-formattingmodel/lib/FormattingSettingsService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingmodel/lib/index.js","webpack:///./node_modules/powerbi-visuals-utils-formattingmodel/lib/utils/FormattingSettingsUtils.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/globalize/globalize.cultures.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/globalize/globalize.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/date/dateTimeSequence.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/date/dateUtils.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/displayUnitSystem/displayUnitSystem.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/displayUnitSystem/displayUnitSystemType.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/font/family.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/font/familyInfo.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/formatting.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/formattingService/dateTimeFormat.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/formattingService/formattingEncoder.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/formattingService/formattingService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/formattingService/iFormattingService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/formattingService/numberFormat.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/index.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/interfaces.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/storageService/ephemeralStorageService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/stringExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/textMeasurementService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/textUtil.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/valueFormatter.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/src/wordBreaker.js","webpack:///./node_modules/powerbi-visuals-utils-svgutils/lib/cssConstants.js","webpack:///./node_modules/powerbi-visuals-utils-svgutils/lib/manipulation.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/double.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/arrayExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/enumExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/logicExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/regExpExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/stringExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/index.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/jsonComparer.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/numericSequence/numericSequence.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/numericSequence/numericSequenceRange.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/pixelConverter.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/prototype.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/textSizeDefaults.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/valueType.js","webpack:///external var \"null\"","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/index.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-brush/src/index.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/index.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/numberArray.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/index.js","webpack:///./node_modules/d3-scale/src/init.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-selection/src/array.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/index.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/iterator.js","webpack:///./node_modules/d3-selection/src/selection/join.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/selectChild.js","webpack:///./node_modules/d3-selection/src/selection/selectChildren.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/index.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/path.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-transition/src/index.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-transition/src/transition/easeVarying.js","webpack:///./node_modules/d3-transition/src/transition/end.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/textTween.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-zoom/src/index.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./node_modules/d3/src/index.js","webpack:///./node_modules/internmap/src/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./.tmp/precompile/visualPlugin.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.locales = void 0;\nexports.locales = {\"en-US\":[\"en-US\",\"default\",{\"englishName\":\"English (United States)\"}]}","\"use strict\";\r\n\r\nimport powerbi from \"powerbi-visuals-api\";\r\nimport { FormattingSettingsService } from \"powerbi-visuals-utils-formattingmodel\";\r\nimport { legend, legendInterfaces } from 'powerbi-visuals-utils-chartutils';\r\nimport \"./../style/visual.less\";\r\nimport { axis, dataLabelUtils } from \"powerbi-visuals-utils-chartutils\";\r\nimport { displayUnitSystem, font, valueFormatter } from \"powerbi-visuals-utils-formattingutils\";\r\nimport { IValueFormatter } from \"powerbi-visuals-utils-formattingutils/lib/src/valueFormatter\";\r\nimport { IDropdown, ICategorySelection, IProperty, IDataPoint } from './interfaces';\r\nimport { dataViewWildcard } from \"powerbi-visuals-utils-dataviewutils\";\r\nimport ISelectionId = powerbi.visuals.ISelectionId;\r\nimport ISelectionIdBuilder = powerbi.visuals.ISelectionIdBuilder;\r\nimport ITooltipService = powerbi.extensibility.ITooltipService;\r\nimport VisualObjectInstance = powerbi.VisualObjectInstance\r\nimport VisualTooltipDataItem = powerbi.extensibility.VisualTooltipDataItem;\r\nimport VisualConstructorOptions = powerbi.extensibility.visual.VisualConstructorOptions;\r\nimport VisualUpdateOptions = powerbi.extensibility.visual.VisualUpdateOptions;\r\nimport IVisual = powerbi.extensibility.visual.IVisual;\r\nimport IVisualEventService = powerbi.extensibility.IVisualEventService;\r\nimport IVisualHost = powerbi.extensibility.visual.IVisualHost;\r\nimport { VisualFormattingSettingsModel } from \"./settings\";\r\nimport * as d3 from \"d3\";\r\nimport { ItemDropdown } from \"powerbi-visuals-utils-formattingmodel/lib/FormattingSettingsComponents\";\r\nimport { LegendDataPoint, LineStyle, MarkerShape } from \"powerbi-visuals-utils-chartutils/lib/legend/legendInterfaces\";\r\nimport { LabelFormattedTextOptions } from \"powerbi-visuals-utils-chartutils/lib/dataLabel/dataLabelInterfaces\";\r\nimport DataLabelManager from \"powerbi-visuals-utils-chartutils/lib/dataLabel/dataLabelManager\";\r\nimport { ILabelLayout } from \"powerbi-visuals-utils-chartutils/lib/dataLabel/dataLabelInterfaces\";\r\ntype Selection<T extends d3.BaseType> = d3.Selection<T, any, any, any>;\r\n\r\nexport class Visual implements IVisual {\r\n    private target: HTMLElement;\r\n    private svg: Selection<SVGElement>\r\n    private legend: legendInterfaces.ILegend\r\n    private selectionIdBuilder: ISelectionIdBuilder;\r\n    private events: IVisualEventService;\r\n    private persistedProperties;\r\n    private selectionManager\r\n    private container: Selection<SVGElement>;\r\n    private tableContainer: HTMLElement\r\n    private allProperties\r\n    private visualHost: IVisualHost\r\n\r\n    private xAxis: Selection<SVGGElement>;\r\n    private yAxis: Selection<SVGGElement>;\r\n    private formattingSettingsService: FormattingSettingsService;\r\n    private margin = { top: 20, right: 20, bottom: 30, left: 40 };\r\n    private previousSelection: string\r\n    private previousLegendSelection: string\r\n\r\n    private tableFontSize: number\r\n    private tableFontFamily: string\r\n    private tableFontBold: boolean\r\n    private tableFontUnderline: boolean\r\n    private tableFontItalic: boolean\r\n    private tableFontColor: string\r\n    private tableDisplayUnits: number\r\n    private tableSelectedCategory: string;\r\n    private tableQueryName: string\r\n    private tableBorderColor: string\r\n    private tableBorderThickness: number\r\n\r\n    private fontSizeAll: number\r\n    private fontFamilyAll: string\r\n    private fontBoldAll: boolean\r\n    private fontUnderlineAll: boolean\r\n    private fontItalicAll: boolean\r\n    private fontColorAll: string\r\n    private displayUnitsPropertyAll: number;\r\n\r\n    private barColor: string\r\n    private barSelectedCategory: string;\r\n    private barTransparency: number\r\n    private barTransparencyAll: number\r\n    private barQueryName: string\r\n    private barColors: string[] = [\"#FF5733\", \"#3498DB\", \"#2ECC71\", \"#F39C12\", \"#9B59B6\", \"#E74C3C\", \"#1ABC9C\", \"#F1C40F\", \"#34495E\", \"#D35400\"]\r\n    private useConditionalFormatting: boolean\r\n   \r\n    private yAxisDisplayUnits: number\r\n    private yAxisMin: number\r\n    private yAxisMax: number\r\n\r\n    private yAxisFontSize: number\r\n    private yAxisFontFamily: string\r\n    private yAxisFontBold: boolean\r\n    private yAxisFontUnderline: boolean\r\n    private yAxisFontItalic: boolean\r\n    private yAxisFontColor: string\r\n\r\n    private xAxisFontSize: number\r\n    private xAxisFontFamily: string\r\n    private xAxisFontBold: boolean\r\n    private xAxisFontUnderline: boolean\r\n    private xAxisFontItalic: boolean\r\n    private xAxisFontColor: string\r\n\r\n    private lineColor: string\r\n    private lineSelectedCategory: string;\r\n    private lineQueryName: string\r\n    private lineColors: string[] = [\"red\", \"#193be6\", \"#90EE90\", \"#ADD8E6\", \"#D8BFD8\", \"#F08080\", \"#AFEEEE\", \"#FAFAD2\", \"#D3D3D3\", \"#FFE4C4\"]\r\n    private legendSeries: boolean\r\n    private legendPosition: string\r\n    private lineStyleAll: string\r\n    private lineStyle: string\r\n    private lineSizeAll: number\r\n    private lineSize: number\r\n    private markerSizeAll: number\r\n    private markerSize: number\r\n    private markerShapeAll: string\r\n    private markerShape: string\r\n\r\n    private dataLabelFontSize: number\r\n    private dataLabelFontFamily: string\r\n    private dataLabelFontBold: boolean\r\n    private dataLabelFontUnderline: boolean\r\n    private dataLabelFontItalic: boolean\r\n    private dataLabelFontColor: string\r\n    private dataLabelDisplayUnits: number\r\n    private dataLabelSelectedCategory: string;\r\n    private dataLabelQueryName: string\r\n\r\n    private dataLabelsSeries: boolean\r\n    private dataLabelFontSizeAll: number\r\n    private dataLabelFontFamilyAll: string\r\n    private dataLabelFontBoldAll: boolean\r\n    private dataLabelFontUnderlineAll: boolean\r\n    private dataLabelFontItalicAll: boolean\r\n    private dataLabelFontColorAll: string\r\n    private dataLabelDisplayUnitsPropertyAll: number\r\n\r\n    private tooltipService: ITooltipService;\r\n    private categorySelection: ICategorySelection[]\r\n\r\n    private selectedDataPoint: { identity: ISelectionId; label: string; };\r\n    private totalBars: IProperty[];\r\n    private totalLines: IProperty[];\r\n    private totalTableRows: IProperty[];\r\n\r\n    constructor(options: VisualConstructorOptions) {\r\n        this.formattingSettingsService = new FormattingSettingsService();\r\n        this.target = options.element;\r\n        this.visualHost = options.host;\r\n        this.events = this.visualHost.eventService;\r\n        this.legend = legend.createLegend(this.target, false, 0);\r\n        this.selectionIdBuilder = this.visualHost.createSelectionIdBuilder();\r\n        this.selectionManager = this.visualHost.createSelectionManager();\r\n        this.handleContextMenu();\r\n        this.svg = d3.select(this.target)\r\n            .append('svg')\r\n        this.container = this.svg\r\n            .append('g')\r\n            .attr(\"transform\", `translate(${this.margin.left * 2}, ${this.margin.top})`)\r\n        this.xAxis = this.svg\r\n            .append('g')\r\n            .attr('class', 'axis')\r\n        this.yAxis = this.svg\r\n            .append('g')\r\n            .attr(\"transform\", `translate(${this.margin.left * 2}, 0)`)\r\n            .attr('class', 'axis')\r\n        this.tooltipService = options.host.tooltipService;\r\n        this.tableContainer = document.createElement('div')\r\n        this.tableContainer.classList.add('tableContainer')\r\n        //this.persistState();\r\n    }\r\n\r\n    public update(options: VisualUpdateOptions) {\r\n        try\r\n        {\r\n            this.events.renderingStarted(options)\r\n            this.removeElements()\r\n            const selectedSettings = options.dataViews[0].metadata.objects\r\n            const getData = options.dataViews[0].categorical;\r\n            let allCategories = getData.categories[0].values\r\n            const allValues = getData.values\r\n\r\n            //Handling Blank/Null values in category\r\n            allCategories = allCategories.map(item => {\r\n                if(item === null){\r\n                    item = allCategories.includes('(Blank)') ? ' (Blank)' : '(Blank)'\r\n                }\r\n                return item\r\n            })\r\n\r\n            //Fetching property values\r\n            this.allProperties = []\r\n\r\n            //Table\r\n            this.fontSizeAll = this.getProperty<number>(selectedSettings, \"tableData\", \"fontSize\", 10)\r\n            this.fontFamilyAll = this.getProperty<string>(selectedSettings, \"tableData\", \"fontFamily\", \"wf_standard-font, helvetica, arial, sans-serif\")\r\n            this.fontBoldAll = this.getProperty<boolean>(selectedSettings, \"tableData\", \"fontBold\", false)\r\n            this.fontUnderlineAll = this.getProperty<boolean>(selectedSettings, \"tableData\", \"fontUnderline\", false)\r\n            this.fontItalicAll = this.getProperty<boolean>(selectedSettings, \"tableData\", \"fontItalic\", false)\r\n            this.fontColorAll = this.getProperty<string>(selectedSettings, \"tableData\", \"fontColor\", \"#000000\") === \"#000000\" ? \"#000000\" : selectedSettings.tableData.fontColor['solid'].color\r\n            this.displayUnitsPropertyAll = this.getProperty<number>(selectedSettings, \"tableData\", \"displayUnitsProperty\", 0)\r\n            \r\n            //Bar\r\n            this.barTransparencyAll = this.getProperty<number>(selectedSettings, \"barData\", \"transparency\", 0)\r\n\r\n           //Line\r\n            this.lineStyleAll = this.getProperty<string>(selectedSettings, \"lineData\", \"style\", \"0\")\r\n            this.markerSizeAll = this.getProperty<number>(selectedSettings, \"lineData\", \"marker\", 1)\r\n            this.markerShapeAll = this.getProperty<string>(selectedSettings, \"lineData\", \"markerShape\", \"0\")\r\n            this.lineSizeAll = this.getProperty<number>(selectedSettings, \"lineData\", \"lineSize\", 2)\r\n\r\n            //Data Labels\r\n            this.dataLabelFontSizeAll = this.getProperty<number>(selectedSettings, \"dataLabels\", \"fontSize\", 10)\r\n            this.dataLabelFontFamilyAll = this.getProperty<string>(selectedSettings, \"dataLabels\", \"fontFamily\", \"wf_standard-font, helvetica, arial, sans-serif\")\r\n            this.dataLabelFontBoldAll = this.getProperty<boolean>(selectedSettings, \"dataLabels\", \"fontBold\", false)\r\n            this.dataLabelFontUnderlineAll = this.getProperty<boolean>(selectedSettings, \"dataLabels\", \"fontUnderline\", false)\r\n            this.dataLabelFontItalicAll = this.getProperty<boolean>(selectedSettings, \"dataLabels\", \"fontItalic\", false)\r\n            this.dataLabelFontColorAll = this.getProperty<string>(selectedSettings, \"dataLabels\", \"fontColor\", \"#000000\") === \"#000000\" ? \"#000000\" : selectedSettings.dataLabels.fontColor['solid'].color\r\n            this.dataLabelDisplayUnitsPropertyAll = this.getProperty<number>(selectedSettings, \"dataLabels\", \"displayUnitsProperty\", 0)\r\n\r\n            allValues.forEach((label, i) => {\r\n                const currentValue = options.dataViews[0].metadata.columns.filter(item => item.queryName === label.source.queryName)[0].objects\r\n                const item = {\r\n                    queryName: <string>label.source.queryName,\r\n                    displayName: <string>label.source.displayName,\r\n                    format: <string>label.source.format,\r\n                    fontSize : this.getProperty<number>(currentValue,\"tableData\", \"fontSize\", this.fontSizeAll),\r\n                    fontFamily : this.getProperty<string>(currentValue,\"tableData\", \"fontFamily\", this.fontFamilyAll),\r\n                    fontBold : this.getProperty<boolean>(currentValue,\"tableData\", \"fontBold\", this.fontBoldAll),\r\n                    fontUnderline : this.getProperty<boolean>(currentValue,\"tableData\", \"fontUnderline\", this.fontUnderlineAll),\r\n                    fontItalic : this.getProperty<boolean>(currentValue,\"tableData\", \"fontItalic\", this.fontItalicAll),\r\n                    fontColor : this.getProperty<string>(currentValue,\"tableData\", \"fontColor\", this.fontColorAll) === this.fontColorAll ? this.fontColorAll : currentValue.tableData.fontColor['solid'].color,\r\n                    displayUnitsProperty : this.getProperty<number>(currentValue,\"tableData\", \"displayUnitsProperty\", this.displayUnitsPropertyAll),\r\n                    barColor : this.getProperty<string>(currentValue,\"barData\", \"fontColor\", this.barColors[i]) ===  this.barColors[i] ?  this.barColors[i] : currentValue.barData.fontColor['solid'].color,\r\n                    barTransparency : this.getProperty<number>(currentValue,\"barData\", \"transparency\", this.barTransparencyAll),\r\n                    lineColor: this.getProperty<string>(currentValue,\"lineData\", \"fontColor\", this.lineColors[i]) ===  this.lineColors[i] ?  this.lineColors[i] : currentValue.lineData.fontColor['solid'].color,\r\n                    lineStyle: this.getProperty<string>(currentValue,\"lineData\", \"style\", this.lineStyleAll),\r\n                    lineSelection: this.getProperty<boolean>(currentValue,\"lineData\", \"showSeries\", true),\r\n                    markerSize: this.getProperty<number>(currentValue,\"lineData\", \"marker\", this.markerSizeAll),\r\n                    markerShape: this.getProperty<string>(currentValue,\"lineData\", \"markerShape\", this.markerShapeAll),\r\n                    lineSize: this.getProperty<number>(currentValue,\"lineData\", \"lineSize\", this.lineSizeAll),\r\n                    tableSelection: this.getProperty<boolean>(currentValue,\"tableData\", \"showSeries\", true),\r\n                    dataLabelFontSize : this.getProperty<number>(currentValue,\"dataLabels\", \"fontSize\", this.dataLabelFontSizeAll),\r\n                    dataLabelFontFamily : this.getProperty<string>(currentValue,\"dataLabels\", \"fontFamily\", this.dataLabelFontFamilyAll),\r\n                    dataLabelFontBold : this.getProperty<boolean>(currentValue,\"dataLabels\", \"fontBold\", this.dataLabelFontBoldAll),\r\n                    dataLabelFontUnderline : this.getProperty<boolean>(currentValue,\"dataLabels\", \"fontUnderline\", this.dataLabelFontUnderlineAll),\r\n                    dataLabelFontItalic : this.getProperty<boolean>(currentValue,\"dataLabels\", \"fontItalic\", this.dataLabelFontItalicAll),\r\n                    dataLabelFontColor : this.getProperty<string>(currentValue,\"dataLabels\", \"fontColor\", this.dataLabelFontColorAll) === this.dataLabelFontColorAll ? this.dataLabelFontColorAll : currentValue.dataLabels.fontColor['solid'].color,\r\n                    dataLabelDisplayUnitsProperty : this.getProperty<number>(currentValue,\"dataLabels\", \"displayUnitsProperty\", this.dataLabelDisplayUnitsPropertyAll),\r\n                    dataLabelSelection: this.getProperty<boolean>(currentValue,\"dataLabels\", \"showSeries\", true),\r\n                    data: label.values,\r\n                    category: allCategories,\r\n                    role: label.source.roles[\"Bars\"] ? \"Bars\" : \"Lines\"\r\n                    //marker: dataPoints[i].role === \"Bars\" ? MarkerShape.square : MarkerShape.longDash\r\n                }\r\n                this.allProperties.push(item)\r\n            })\r\n\r\n            this.categorySelection = []\r\n            const legendData = {\r\n                dataPoints: [],\r\n                labelColor: \"black\",\r\n                fontSize: 8\r\n            };\r\n            for (let categoryIndex = 0; categoryIndex < allCategories.length; categoryIndex++) {\r\n                for (let measureIndex = 0; measureIndex < allValues.length; measureIndex++) {\r\n                    const measure = allValues[measureIndex];\r\n                    const selectionIdBuilder = this.visualHost.createSelectionIdBuilder();\r\n\r\n                    selectionIdBuilder.withCategory(getData.categories[0], categoryIndex);\r\n                    selectionIdBuilder.withMeasure(measure.source.queryName)\r\n                    const selectionId = selectionIdBuilder.createSelectionId()\r\n\r\n                    this.categorySelection.push({\r\n                        category: allCategories[categoryIndex],\r\n                        queryName: measure.source.queryName,\r\n                        selection: selectionId,\r\n                    });\r\n\r\n                    if (categoryIndex === 1) {\r\n                        const color = this.filterProperty(\"queryName\", measure.source.queryName)[0]\r\n                        if(color.lineSelection){\r\n                            const legendItem: LegendDataPoint = {\r\n                                label: measure.source.displayName,\r\n                                color: color.role === \"Bars\" ? color.barColor : color.lineColor,\r\n                                identity: selectionId,\r\n                                selected: true,\r\n                                markerShape: MarkerShape.circle\r\n                            };\r\n                            legendData.dataPoints.push(legendItem);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            this.totalBars = this.filterProperty('role', \"Bars\")\r\n            this.totalLines = this.filterProperty('role', \"Lines\")\r\n            this.totalTableRows = this.filterProperty('tableSelection', true)\r\n\r\n            //console.log(options.dataViews[0])\r\n\r\n            //Bar Properties\r\n            const barSelectedCategory = String(this.getProperty<string>(selectedSettings, \"barData\", \"categoryProperty\", \"0\"))\r\n            this.barSelectedCategory = Number(barSelectedCategory) > this.totalBars.length ? \"0\" : barSelectedCategory\r\n            this.barQueryName = this.barSelectedCategory === \"0\" ? \"All\" : this.totalBars[Number(this.barSelectedCategory) - 1].queryName\r\n            this.useConditionalFormatting = this.totalBars.length > 1 ? false : this.getProperty<boolean>(selectedSettings, \"barData\", \"useConditionalFormatting\", false)\r\n\r\n            //Line Properties\r\n            const lineSelectedCategory = String(this.getProperty<string>(selectedSettings, \"lineData\", \"categoryProperty\", \"0\"))\r\n            this.lineSelectedCategory = Number(lineSelectedCategory) > this.totalLines.length ? \"0\" : lineSelectedCategory\r\n            this.lineQueryName = this.lineSelectedCategory === \"0\" ? \"All\" : this.totalLines[Number(this.lineSelectedCategory) - 1].queryName\r\n\r\n            //Table Properties\r\n            const tableSelectedCategory = String(this.getProperty<string>(selectedSettings, \"tableData\", \"categoryProperty\", \"0\"))\r\n            this.tableSelectedCategory = Number(tableSelectedCategory) > this.totalBars.length + this.totalLines.length ? \"0\" : tableSelectedCategory\r\n            this.tableQueryName = this.tableSelectedCategory === \"0\" ? \"All\" : this.allProperties[Number(this.tableSelectedCategory) - 1].queryName\r\n            this.tableBorderColor = this.getProperty<string>(selectedSettings, \"tableData\", \"borderColor\", \"#808080\") ===  \"#808080\" ?  \"#808080\" : selectedSettings.tableData.borderColor['solid'].color\r\n            this.tableBorderThickness = this.getProperty<number>(selectedSettings, \"tableData\", \"borderThickness\", 1)\r\n    \r\n            //Data Label Properties\r\n            //this.dataLabelsSeries = this.getProperty<boolean>(selectedSettings, \"dataLabels\", \"series\", false)\r\n            const dataLabelSelectedCategory = String(this.getProperty<string>(selectedSettings, \"dataLabels\", \"categoryProperty\", \"0\"))\r\n            this.dataLabelSelectedCategory = Number(dataLabelSelectedCategory) > this.totalBars.length + this.totalLines.length ? \"0\" : dataLabelSelectedCategory\r\n            this.dataLabelQueryName = this.dataLabelSelectedCategory === \"0\" ? \"All\" : this.allProperties[Number(this.dataLabelSelectedCategory) - 1].queryName\r\n\r\n            //Legend Properties\r\n            this.legendSeries = this.getProperty<boolean>(selectedSettings, \"legend\", \"series\", true)\r\n            this.legendPosition = this.getProperty<string>(selectedSettings, \"legend\", \"position\", \"0\")\r\n\r\n            //Y-Axis\r\n            this.yAxisMin = this.getProperty<number>(selectedSettings, \"barData\", \"yAxisMin\", null)\r\n            this.yAxisMax = this.getProperty<number>(selectedSettings, \"barData\", \"yAxisMax\", null)\r\n\r\n            this.yAxisFontSize = this.getProperty<number>(selectedSettings, \"yAxis\", \"fontSize\", 10)\r\n            this.yAxisFontFamily = this.getProperty<string>(selectedSettings, \"yAxis\", \"fontFamily\", \"wf_standard-font, helvetica, arial, sans-serif\")\r\n            this.yAxisFontBold = this.getProperty<boolean>(selectedSettings, \"yAxis\", \"fontBold\", false)\r\n            this.yAxisFontUnderline = this.getProperty<boolean>(selectedSettings, \"yAxis\", \"fontUnderline\", false)\r\n            this.yAxisFontItalic = this.getProperty<boolean>(selectedSettings, \"yAxis\", \"fontItalic\", false)\r\n            this.yAxisFontColor = this.getProperty<string>(selectedSettings, \"yAxis\", \"fontColor\", \"#000000\") === \"#000000\" ? \"#000000\" : selectedSettings.yAxis.fontColor['solid'].color\r\n            this.yAxisDisplayUnits = this.getProperty<number>(selectedSettings, \"yAxis\", \"displayUnitsProperty\", 0)\r\n\r\n            //X-Axis\r\n            this.xAxisFontSize = this.getProperty<number>(selectedSettings, \"xAxis\", \"fontSize\", 10)\r\n            this.xAxisFontFamily = this.getProperty<string>(selectedSettings, \"xAxis\", \"fontFamily\", \"wf_standard-font, helvetica, arial, sans-serif\")\r\n            this.xAxisFontBold = this.getProperty<boolean>(selectedSettings, \"xAxis\", \"fontBold\", false)\r\n            this.xAxisFontUnderline = this.getProperty<boolean>(selectedSettings, \"xAxis\", \"fontUnderline\", false)\r\n            this.xAxisFontItalic = this.getProperty<boolean>(selectedSettings, \"xAxis\", \"fontItalic\", false)\r\n            this.xAxisFontColor = this.getProperty<string>(selectedSettings, \"xAxis\", \"fontColor\", \"#000000\") === \"#000000\" ? \"#000000\" : selectedSettings.xAxis.fontColor['solid'].color\r\n\r\n            //Legend Selection        \r\n            if(this.legendSeries){\r\n                this.legend.changeOrientation(Number(this.legendPosition))\r\n                this.legend.drawLegend(legendData, options.viewport);\r\n                const legends = d3.selectAll(\".legendItem\")\r\n                const legendAttributes = { 'fillOpacity': 1 }\r\n                document.querySelector('div').addEventListener('click', (e) => {\r\n                if (typeof this.selectedDataPoint !== \"undefined\") {\r\n                    this.handleClick(this.selectedDataPoint.identity, this.selectedDataPoint.label, true)\r\n                    this.resetSelection(legends, legendAttributes)\r\n                    this.previousLegendSelection = \"\"\r\n                }\r\n            })\r\n            legends.on(\"click\", (e, dataPoint: LegendDataPoint) => {\r\n                this.selectionManager\r\n                    .select(dataPoint.identity)\r\n                    .then((ids) => {\r\n                        this.handleClick(dataPoint.identity, dataPoint.label)\r\n                        if (this.previousLegendSelection !== dataPoint.label) {\r\n                            Array.from(legends).forEach((item: HTMLElement) => {\r\n                                item.querySelector('title').textContent !== dataPoint.label ? item.style.fillOpacity = '0.2' : item.style.fillOpacity = '1'\r\n                            })\r\n                            this.previousLegendSelection = dataPoint.label\r\n                        }\r\n                        else {\r\n                            this.resetSelection(legends, legendAttributes)\r\n                            this.previousLegendSelection = \"\"\r\n                        }\r\n                    });\r\n                e.stopImmediatePropagation()\r\n            });\r\n            }   \r\n            \r\n            //Property values based on user selection\r\n            this.tableFontSize = this.getPropertyValue<number>(this.tableQueryName, this.fontSizeAll, \"fontSize\")\r\n            this.tableFontFamily = this.getPropertyValue<string>(this.tableQueryName, this.fontFamilyAll, \"fontFamily\")\r\n            this.tableFontBold = this.getPropertyValue<boolean>(this.tableQueryName, this.fontBoldAll, \"fontBold\")\r\n            this.tableFontUnderline = this.getPropertyValue<boolean>(this.tableQueryName, this.fontUnderlineAll, \"fontUnderline\")\r\n            this.tableFontItalic = this.getPropertyValue<boolean>(this.tableQueryName, this.fontItalicAll, \"fontItalic\")\r\n            this.tableFontColor = this.getPropertyValue<string>(this.tableQueryName, this.fontColorAll, \"fontColor\")\r\n            this.tableDisplayUnits = this.getPropertyValue<number>(this.tableQueryName, this.displayUnitsPropertyAll, \"displayUnitsProperty\")\r\n            this.barColor = this.getPropertyValue<string>(this.barQueryName, this.barColors[0], \"barColor\")\r\n            this.barTransparency = this.getPropertyValue<number>(this.barQueryName, this.barTransparencyAll, \"barTransparency\")\r\n            this.lineColor = this.getPropertyValue<string>(this.lineQueryName, this.lineColors[0], \"lineColor\")\r\n            this.lineSize = this.getPropertyValue<number>(this.lineQueryName, this.lineSizeAll, \"lineSize\")\r\n            this.lineStyle = this.getPropertyValue<string>(this.lineQueryName, this.lineStyleAll, \"lineStyle\")\r\n            this.markerSize = this.getPropertyValue<number>(this.lineQueryName, this.markerSizeAll, \"markerSize\")\r\n            this.markerShape = this.getPropertyValue<string>(this.lineQueryName, this.markerShapeAll, \"markerShape\")\r\n\r\n            this.dataLabelFontSize = this.getPropertyValue<number>(this.dataLabelQueryName, this.dataLabelFontSizeAll, \"dataLabelFontSize\")\r\n            this.dataLabelFontFamily = this.getPropertyValue<string>(this.dataLabelQueryName, this.dataLabelFontFamilyAll, \"dataLabelFontFamily\")\r\n            this.dataLabelFontBold = this.getPropertyValue<boolean>(this.dataLabelQueryName, this.dataLabelFontBoldAll, \"dataLabelFontBold\")\r\n            this.dataLabelFontUnderline = this.getPropertyValue<boolean>(this.dataLabelQueryName, this.dataLabelFontUnderlineAll, \"dataLabelFontUnderline\")\r\n            this.dataLabelFontItalic = this.getPropertyValue<boolean>(this.dataLabelQueryName, this.dataLabelFontItalicAll, \"dataLabelFontItalic\")\r\n            this.dataLabelFontColor = this.getPropertyValue<string>(this.dataLabelQueryName, this.dataLabelFontColorAll, \"dataLabelFontColor\")\r\n            this.dataLabelDisplayUnits = this.getPropertyValue<number>(this.dataLabelQueryName, this.dataLabelDisplayUnitsPropertyAll, \"dataLabelDisplayUnitsProperty\")\r\n            this.dataLabelsSeries = this.getProperty<boolean>(selectedSettings, \"dataLabels\", \"series\", false)\r\n\r\n            const formatString: string = this.allProperties[0].format\r\n            const dataViewMetadataColumn: powerbi.DataViewMetadataColumn[] = this.allProperties.map(item => {\r\n                return { displayName: item.displayName }\r\n            })\r\n            \r\n            //YAxis Range\r\n            let maxValue: number = Math.max(...this.getMinMaxValue());\r\n            const getMin: number = Math.min(...this.getMinMaxValue());\r\n            var adjustedHeight = 0;\r\n            let minValue: number;\r\n            let barRules = options.dataViews[0].categorical.categories[0].objects;\r\n\r\n            if(typeof(barRules) !== \"undefined\"){\r\n                this.yAxisMin = Object.hasOwn(barRules[0][\"barData\"], \"yAxisMin\") ? <number>barRules[0][\"barData\"][\"yAxisMin\"] : this.yAxisMin\r\n                this.yAxisMax = Object.hasOwn(barRules[0][\"barData\"], \"yAxisMax\") ? <number>barRules[0][\"barData\"][\"yAxisMax\"] : this.yAxisMax\r\n            }\r\n\r\n            if (getMin === Infinity || getMin === -Infinity) {\r\n                this.removeElements()\r\n                return\r\n            }\r\n\r\n            if(this.yAxisMin === null){\r\n                minValue = getMin >= 0 ? 0 : getMin - Math.abs(((maxValue - getMin) / axis.getBestNumberOfTicks(getMin, maxValue, dataViewMetadataColumn, 5)));\r\n            }\r\n            else{\r\n                if(this.yAxisMin <= getMin){\r\n                    minValue =  this.yAxisMin\r\n                    if(getMin >= 0){\r\n                        adjustedHeight = this.yAxisMin\r\n                    }\r\n                }\r\n                else{\r\n                    minValue = getMin\r\n                    if(getMin >= 0){\r\n                        adjustedHeight = getMin\r\n                    }\r\n                }  \r\n            }\r\n            \r\n            if(this.yAxisMax === null){\r\n                maxValue = minValue < 0 && maxValue < 0 ? 0 : maxValue\r\n            }\r\n            else{\r\n                if(this.yAxisMax <= minValue){\r\n                    maxValue = minValue < 0 && maxValue < 0 ? 0 : maxValue\r\n                }\r\n                else{\r\n                    maxValue = this.yAxisMax;\r\n                }\r\n            }\r\n\r\n            const maxFontSize: number= this.totalTableRows.length > 0 ? Math.max(...this.allProperties.filter(item => item.tableSelection).map(item => item.fontSize)) : 10\r\n            const offSet: number = maxFontSize < 12 ? 2 : 1.75\r\n\r\n            let width: number = options.viewport.width\r\n            let height: number = options.viewport.height - ((this.totalTableRows.length + 1) * maxFontSize * offSet);\r\n            const widthOffset = 10\r\n\r\n            if (width < 125 || height < 125) {\r\n                this.removeElements()\r\n                return\r\n            }\r\n        \r\n            this.target.style.overflow = 'hidden'\r\n            const categoryLength: number = allCategories.length * 60\r\n            if (width < categoryLength) {\r\n                this.target.style.overflow = 'scroll'\r\n                width = categoryLength\r\n            }\r\n\r\n            this.svg\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height - 10)\r\n                .attr(\"transform\", \"translate(0, 30)\")\r\n\r\n            //XAxis\r\n            const xScale = d3.scaleBand()\r\n                .domain(this.allProperties[0].category)\r\n                .range([0, width - (this.margin.left * 2) - widthOffset])\r\n\r\n            const yScale = d3.scaleLinear()\r\n                .domain([minValue, maxValue])\r\n                .range([height - this.margin.top * 2, this.margin.top])\r\n\r\n            const xAxis = this.xAxis\r\n                .attr(\"transform\", `translate(${this.margin.left * 2}, ${yScale(minValue)})`)\r\n                .call(d3.axisBottom(xScale)\r\n                        .tickFormat(d => {\r\n                            let labelFormat: LabelFormattedTextOptions = {\r\n                                label: d,\r\n                                fontSize: 10,\r\n                                maxWidth: xScale.bandwidth()\r\n                            };\r\n                            return dataLabelUtils.getLabelFormattedText(labelFormat)\r\n                        }))\r\n                .style('display', 'block')\r\n                .style('font-Size', this.xAxisFontSize)\r\n                .style('Color', this.xAxisFontColor)\r\n                .style('font-Family', this.xAxisFontFamily)\r\n                .style('font-Weight', this.xAxisFontBold ? 'bold' : 'normal')\r\n                .style('font-Style', this.xAxisFontItalic ? 'italic' : 'normal')      \r\n\r\n            xAxis.selectAll(\"text\")\r\n                 .style('text-decoration', this.xAxisFontUnderline ? 'underline' : '') \r\n            \r\n            xAxis.selectAll(\".tick line, path\")\r\n                 .remove()\r\n            \r\n            //YAxis\r\n            const yAxis = this.yAxis\r\n                            .call(d3.axisLeft(yScale)\r\n                                    .ticks(axis.getBestNumberOfTicks(minValue, maxValue, dataViewMetadataColumn, 5))\r\n                                    .tickFormat(d => this.formatDataLabelText(this.yAxisDisplayUnits, formatString, Number(d)))\r\n                                    .tickSize(14))\r\n                            .style('display', 'block')\r\n                            .style('font-Size', this.yAxisFontSize)\r\n                            .style('Color', this.yAxisFontColor)\r\n                            .style('font-Family', this.yAxisFontFamily)\r\n                            .style('font-Weight', this.yAxisFontBold ? 'bold' : 'normal')\r\n                            .style('font-Style', this.yAxisFontItalic ? 'italic' : 'normal')      \r\n\r\n            yAxis.selectAll(\"text\")\r\n                 .style('text-decoration', this.yAxisFontUnderline ? 'underline' : '') \r\n            yAxis.selectAll(\".tick line, .domain\")\r\n                 .remove()\r\n        \r\n            //Bar Chart\r\n            let currentBarBandwidth: number = 0;\r\n            const padding: number = allCategories.length * 60 > width ? 30 : 20\r\n            const barBandwidth: number = (xScale.bandwidth() - padding) / this.totalBars.length;\r\n            \r\n            const linearGradient = options.dataViews[0].metadata[\"objectsRules\"];\r\n            let barRulesColor = this.getRules(barRules); \r\n\r\n            this.filterProperty('role', \"Bars\").forEach(bar => {\r\n                const data:IDataPoint[] = this.getDataPoints(bar)\r\n                const category = this.filterProperty(\"queryName\", bar.queryName, this.categorySelection)\r\n\r\n                this.container\r\n                    .selectAll('bar')\r\n                    .data(data)\r\n                    .enter()\r\n                    .append('rect')\r\n                    .attr(\"class\", bar.displayName)\r\n                    .attr('x', d => {\r\n                        return xScale(d['name']) + currentBarBandwidth + (padding / 2)\r\n                    })\r\n                    .attr('y', d => {\r\n                        const val = d['value']\r\n                        if(val === null){\r\n                            return\r\n                        }\r\n                        return val < 0 ? yScale(0) - this.margin.top : yScale(val) - this.margin.top\r\n                    })\r\n                    .attr('width', d => {\r\n                        if (barBandwidth < 0) {\r\n                            this.removeElements()\r\n                            return 0\r\n                        }\r\n                        return barBandwidth\r\n                    })\r\n                    .attr('height', d => {\r\n                        const h = maxValue + minValue - adjustedHeight\r\n                        const barHeight = d['value'] < 0 ? yScale(maxValue - Math.abs(d['value'])) : height - yScale(d['value']) - yScale(h)\r\n                        if (barHeight - this.margin.top < 0) {\r\n                            this.removeElements()\r\n                            return\r\n                        } else if (d['value'] === null){\r\n                            return\r\n                        }\r\n                        return barHeight - this.margin.top\r\n                    })\r\n                    .style('fill', (d, i) => {\r\n                        if(this.totalBars.length <= 1 && this.useConditionalFormatting){ \r\n                            if(typeof(linearGradient) !== \"undefined\" && typeof(linearGradient[\"barData\"]) !== \"undefined\"){\r\n                                return this.getGradientColor(linearGradient[\"barData\"], d['value'], minValue, maxValue)\r\n                            }\r\n                            else if(typeof(barRules) !== \"undefined\" ) {\r\n                                if(barRules[i] === null || Object.hasOwn(barRules[i][\"barData\"], \"fontColor\")){\r\n                                    return barRulesColor[i]\r\n                                }\r\n                                else{\r\n                                    return \"#000000\"\r\n                                }\r\n                            }\r\n                        }\r\n                        return bar.barColor\r\n                    })\r\n                    .attr('fill-opacity', (100 - bar.barTransparency) / 100)\r\n                    .on(\"click\", (e, d) => {\r\n                        const categorySelection = category[allCategories.indexOf(d['name'])]\r\n                        this.handleClick(categorySelection.selection, bar.displayName)\r\n                        e.stopImmediatePropagation()\r\n                    })\r\n                    .on(\"mouseout\", () => {\r\n                        this.tooltipService.hide({ isTouchEvent: false, immediately: true });\r\n                    })\r\n                    .on('mouseover', (e, d) => {\r\n                        this.tooltipService.show({\r\n                            dataItems: [\r\n                                { displayName: \"Category\", value: d['name'] },\r\n                                { displayName: bar.displayName, value: this.formatValue(bar.format, null, d['value'], 2) }\r\n                            ],\r\n                            coordinates: [e.clientX, e.clientY],\r\n                            isTouchEvent: false,\r\n                            identities: bar.selection\r\n                        })\r\n                    })\r\n                    .on('contextmenu', (e, d) => {\r\n                        const categorySelection = category[allCategories.indexOf(d['name'])]\r\n                        this.handleContextMenu(categorySelection.selection)\r\n                    })\r\n                currentBarBandwidth = currentBarBandwidth + barBandwidth\r\n            })\r\n\r\n            //Line chart\r\n            const lineBandwidth = (xScale.bandwidth() - padding);\r\n            this.filterProperty('role', \"Lines\").forEach(line => {\r\n                if(line.lineSelection){\r\n                    const data = this.getDataPoints(line)\r\n                    const category = this.filterProperty(\"queryName\", line.queryName, this.categorySelection)\r\n                    let splitData = [], //Splitting data to handle null values\r\n                    currentItem = [] \r\n                    data.forEach( item => {\r\n                        if (item.value === null) {\r\n                        if (currentItem.length > 0) {\r\n                            splitData.push(currentItem);\r\n                        }\r\n                        currentItem = [];\r\n                        } else {\r\n                            currentItem.push(item);\r\n                        }\r\n                    })\r\n                    if (currentItem.length > 0){\r\n                        splitData.push(currentItem)\r\n                    }\r\n        \r\n                    splitData.forEach(item => {\r\n                        this.container\r\n                        .datum(item)\r\n                        .append('path')\r\n                        .attr(\"d\", d3.line()\r\n                                    .x(d => xScale(d['name']) + (lineBandwidth / 2) + (padding / 2))\r\n                                    .y(d => yScale(d['value']) - this.margin.top)\r\n                        )\r\n                        .attr(\"class\", line.displayName)\r\n                        .style('stroke', line.lineColor)\r\n                        .style('stroke-width', line.lineSize)\r\n                        .style('fill', 'none')\r\n                        .attr(\"stroke-dasharray\", `10, ${line.lineStyle}`)\r\n\r\n                        //Marker\r\n                        const adjustedSize = String(line.markerShape) === \"6\" ? 1.5 : 1\r\n                        this.container\r\n                        .selectAll('marker')\r\n                        .data(item)\r\n                        .enter()\r\n                        .append('text')\r\n                        .classed(line.displayName, true)\r\n                        .classed(\"marker\", true)\r\n                        .attr('x', d => {\r\n                            return xScale(d['name']) + (lineBandwidth / 2) + (padding / 2) - (line.markerSize * adjustedSize)\r\n                        })\r\n                        .attr('y', d => {\r\n                            return yScale(d['value']) - this.margin.top + line.markerSize\r\n                        })\r\n                        .text(this.getMarkerShape(String(line.markerShape)))\r\n                       // .attr(\"r\", line.markerSize)\r\n                        .style('stroke', line.lineColor)\r\n                        .style('font-Size', line.markerSize * 3)\r\n                        .style('fill', line.lineColor)\r\n                        .on(\"click\", (e, d) => {\r\n                            const categorySelection = category[allCategories.indexOf(d['name'])]\r\n                            this.handleClick(categorySelection.selection, line.displayName)\r\n                            e.stopImmediatePropagation()\r\n                        })\r\n                        .on(\"mouseout\", () => {\r\n                            this.tooltipService.hide({ isTouchEvent: false, immediately: true });\r\n                        })\r\n                        .on('mouseover', (e, d) => {\r\n                            this.tooltipService.show({\r\n                                dataItems: [\r\n                                    { displayName: \"Category\", value: d['name'] },\r\n                                    { displayName: line.displayName, value: this.formatValue(line.format, null, d['value'], 2) }\r\n                                ],\r\n                                coordinates: [e.clientX, e.clientY],\r\n                                isTouchEvent: false,\r\n                                identities: line.selection\r\n                            })\r\n                        })\r\n                        .on('contextmenu', (e, d) => {\r\n                            const categorySelection = category[allCategories.indexOf(d['name'])]\r\n                            this.handleContextMenu(categorySelection.selection)\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n                    \r\n            //Data Labels\r\n            if (this.dataLabelsSeries) {\r\n                currentBarBandwidth = 0;\r\n                const bandwidth: number = this.totalBars.length !== 0 ? barBandwidth : lineBandwidth\r\n                this.allProperties.forEach(label => {\r\n                    if(label.lineSelection){\r\n                        const data: IDataPoint[] = this.getDataPoints(label)\r\n                        this.container\r\n                            .selectAll('datalabel')\r\n                            .data(data)\r\n                            .enter()\r\n                            .append('text')\r\n                            .text(d => {\r\n                                if(d['value'] === null){\r\n                                    return \"\"\r\n                                }\r\n                                return this.formatDataLabelText(label.dataLabelDisplayUnitsProperty, label.format, d['value'])\r\n                            })\r\n                            .attr('y', d => {\r\n                                if(d['value'] === null){\r\n                                    return\r\n                                }\r\n                                const val = yScale(d['value']) - this.margin.top\r\n                                return d['value'] < 0 ? val + 20 : val - 5\r\n                            })\r\n                            .attr(\"stroke\", label.dataLabelFontColor)\r\n                            .attr(\"stroke-width\", label.dataLabelSelection ? 0.5 : 0)\r\n                            .style(\"font-size\", label.dataLabelSelection ? label.dataLabelFontSize : 0 + \"px\")\r\n                            .style('Color', label.dataLabelFontColor)\r\n                            .style('font-Family', label.dataLabelFontFamily)\r\n                            .style('font-Weight', label.dataLabelFontBold ? 'bold' : 'normal')\r\n                            .style('font-Style', label.dataLabelFontItalic ? 'italic' : 'normal')      \r\n                            .style('text-decoration', label.dataLabelFontUnderline ? 'underline' : '') \r\n                            .each(function (d) {\r\n                                const textWidth = this.getBBox().width\r\n                                const width = xScale(d['name']) - (textWidth / 2)\r\n                                d3.select(this)\r\n                                .attr(\"x\", label.role === \"Bars\" ? width + ((padding + bandwidth) / 2) + currentBarBandwidth \r\n                                                                : width + (padding / 2) + (lineBandwidth / 2))\r\n                                .text(textWidth > bandwidth ? \"\" : this.textContent)\r\n                            })\r\n                            .attr('class', 'dataLabel')\r\n                            currentBarBandwidth = currentBarBandwidth + bandwidth\r\n                        }\r\n                    })\r\n            }\r\n\r\n            //Table\r\n            if (this.totalTableRows.length > 0) {\r\n                const marginTop: string = '25px'\r\n                const dataTable: HTMLElement = document.createElement('table')\r\n                const dataTableAttributes = {\r\n                    width: `${width - widthOffset}px`,\r\n                    marginTop: marginTop,\r\n                    height: `${options.viewport.height - height - 20}px`\r\n                }\r\n\r\n                this.styleElement(dataTable, dataTableAttributes)\r\n                dataTable.setAttribute(\"class\", 'table-data')\r\n                this.filterProperty('tableSelection', true).forEach(selectedText => {\r\n                    const styleAttributes = {\r\n                        fontSize: `${selectedText.fontSize}px`,\r\n                        fontFamily: selectedText.fontFamily,\r\n                        fontWeight: selectedText.fontBold ? 'bold' : 'normal',\r\n                        fontStyle: selectedText.fontItalic ? 'italic' : 'normal',\r\n                        textDecoration: selectedText.fontUnderline ? 'underline' : '',\r\n                        color: selectedText.fontColor\r\n                    }\r\n\r\n                    const dataRows: HTMLElement = document.createElement('tr')\r\n                    const dataCol: HTMLElement = document.createElement('td')\r\n                    dataCol.innerText = selectedText.displayName\r\n                    dataCol.style.width = `${this.margin.left * 2}px`\r\n                    this.styleElement(dataCol, styleAttributes)\r\n                    dataCol.setAttribute(\"class\", selectedText.displayName)\r\n                    dataRows.appendChild(dataCol)\r\n\r\n                    for (var j = 0; j < allCategories.length; j++) {\r\n                        const dataCol = document.createElement('td')\r\n                        let text = selectedText.data[j]\r\n                        const formattedValue = this.formatDataLabelText(selectedText.displayUnitsProperty, selectedText.format, text)\r\n\r\n                        dataCol.innerText = text === null ? \"\" : formattedValue\r\n                        this.styleElement(dataCol, styleAttributes)\r\n                        dataCol.style.border = `${this.tableBorderThickness / 20}px solid ${this.tableBorderColor}`\r\n                        dataCol.setAttribute(\"class\", selectedText.displayName)\r\n\r\n                        const tooltipCategory = this.formatValue(selectedText.format, null, selectedText.category[j], 2)\r\n                        dataCol.addEventListener('mouseover', (e) => {\r\n                            this.tooltipService.show({\r\n                                dataItems: [\r\n                                    { displayName: \"Category\", value: tooltipCategory },\r\n                                    { displayName: selectedText.displayName, value: formattedValue.toString() }\r\n                                ],\r\n                                coordinates: [e.clientX, e.clientY],\r\n                                isTouchEvent: false,\r\n                                identities: selectedText.selection\r\n                            })\r\n                        })\r\n\r\n                        dataCol.addEventListener(\"mouseout\", () => {\r\n                            this.tooltipService.hide({ isTouchEvent: false, immediately: true });\r\n                        })\r\n                        dataRows.appendChild(dataCol)\r\n                    }\r\n                    dataTable.appendChild(dataRows)\r\n                })\r\n                this.tableContainer.appendChild(dataTable)\r\n                this.target.append(this.tableContainer)\r\n            }\r\n            this.persistState();\r\n            this.events.renderingFinished(options);\r\n        }\r\n        catch (e) {\r\n            this.events.renderingFailed(options)\r\n        }\r\n    }\r\n\r\n    public removeElements(): void {\r\n        d3.selectAll('rect, table, path, .dataLabel, .legendItem, .marker, linearGradient')\r\n            .remove()\r\n\r\n        d3.selectAll('.axis')\r\n            .style('display', 'none')\r\n    }\r\n\r\n    public getDataPoints(role) {\r\n        return role['category'].map((category, i) => ({\r\n            name: category,\r\n            value: role['data'][i]\r\n        }))\r\n    }\r\n\r\n    public getFormattingModel(): powerbi.visuals.FormattingModel {\r\n        const tableDropDownCategories = this.getAllSeries(this.allProperties);\r\n        const dataLabelDropDownCategories = this.getAllSeries(this.allProperties);\r\n        const barDropDownCategories = this.getAllSeries(this.totalBars);\r\n        const lineDropDownCategories = this.getAllSeries(this.totalLines);\r\n\r\n        const tableFormatOptionsSelector = this.tableQueryName !== \"All\" ? this.tableQueryName : null\r\n        const barFormatOptionsSelector = this.barQueryName !== \"All\" ? this.barQueryName : null\r\n        const lineFormatOptionsSelector = this.lineQueryName !== \"All\" ? this.lineQueryName : null\r\n        const dataLabelFormatOptionsSelector = this.dataLabelQueryName !== \"All\" ? this.dataLabelQueryName : null\r\n\r\n        //Table Properties\r\n        const tableDropdown = this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"category_uid\", \"Series\", \"tableData\", \"categoryProperty\", null, this.tableSelectedCategory)\r\n        tableDropdown['control']['properties']['mergeValues'] = tableDropDownCategories as powerbi.IEnumMember[]\r\n\r\n        const tableSeries = this.getFormattingSlice(powerbi.visuals.FormattingComponent.ToggleSwitch, \"category_series_uid\", \"Show for this series\", \"tableData\", \"showSeries\", this.tableQueryName, this.tableSelectedCategory === \"0\" ? true : this.filterProperty(\"queryName\", this.tableQueryName)[0].tableSelection)\r\n        tableSeries['disabled'] = this.tableSelectedCategory === \"0\" ? true : false\r\n        let table1_dataFont = this.getFormattingGroup(\"Apply settings to\", \"settings_table_group_uid\", [tableDropdown, tableSeries])\r\n\r\n        const fontProperties = ['fontFamily', 'fontSize', 'fontBold', 'fontItalic', 'fontUnderline'];\r\n        const tableFontProperty = this.fontProperties(fontProperties, tableFormatOptionsSelector, \"tableData\", \"table\");\r\n\r\n        let table2_dataFont =\r\n            this.getFormattingGroup(\"Values\", \"table_fontProperties_group_uid\",\r\n                [this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"table_fontControl_displayUnits_uid\", \"Display units\", \"tableData\", \"displayUnitsProperty\", tableFormatOptionsSelector, this.tableDisplayUnits),\r\n                 this.fontSlice(tableFontProperty, \"table\"),\r\n                 this.getFormattingSlice(powerbi.visuals.FormattingComponent.ColorPicker, \"table_dataDesign_fontColor_slice\", \"Color\", \"tableData\", \"fontColor\", tableFormatOptionsSelector, { value: this.tableFontColor })])\r\n        table2_dataFont['disabled'] = this.tableSelectedCategory === \"0\" ? false : !this.filterProperty(\"queryName\", this.tableQueryName)[0].tableSelection\r\n\r\n        const borderThickness = this.getFormattingSlice(powerbi.visuals.FormattingComponent.Slider, \"border_Thickness_uid\", \"Thickness\", \"tableData\", \"borderThickness\", null, this.tableBorderThickness)\r\n        const borderThicknessProperties = {\r\n            minValue: {\r\n                type: powerbi.visuals.ValidatorType.Min,\r\n                value: 0,\r\n            },\r\n            maxValue: {\r\n                type: powerbi.visuals.ValidatorType.Max,\r\n                value: 100,\r\n            }\r\n        }\r\n        borderThickness['control']['properties']['options'] = borderThicknessProperties as powerbi.visuals.NumUpDownFormat\r\n        let table3_dataFont = this.getFormattingGroup(\"Border\", \"options_table_group_uid\", \r\n                [borderThickness,\r\n                 this.getFormattingSlice(powerbi.visuals.FormattingComponent.ColorPicker, \"table_borderColor_slice\", \"Color\", \"tableData\", \"borderColor\", null, { value: this.tableBorderColor })])\r\n\r\n        //Bar Properties\r\n        const barDropdown = this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"Series_bar_uid\", \"Series\", \"barData\", \"categoryProperty\", null, this.barSelectedCategory)\r\n        barDropdown['control']['properties']['mergeValues'] = barDropDownCategories as powerbi.IEnumMember[]\r\n        let bar1_dataFont = this.getFormattingGroup(\"Apply settings to\", \"settings_bar_group_uid\", [barDropdown])\r\n\r\n        const barColor = this.getFormattingSlice(powerbi.visuals.FormattingComponent.ColorPicker, \"bar_color_uid\", \"Color\", \"barData\", \"fontColor\", barFormatOptionsSelector, { value: this.barColor })\r\n        this.barSelectedCategory === \"0\" ? barColor['control']['properties']['descriptor'] = this.addConditionalFormattingOptions(barColor) : null\r\n        \r\n        const barConditionalFormat = \r\n        this.getFormattingSlice(powerbi.visuals.FormattingComponent.ToggleSwitch, \"bar_color_CF_series_uid\", \"Use conditional formatting\", \"barData\", \"useConditionalFormatting\", null, this.useConditionalFormatting)\r\n        \r\n        if(this.totalBars.length > 1){\r\n            barConditionalFormat[\"disabled\"] = true;\r\n        }\r\n\r\n        if(!this.useConditionalFormatting){\r\n            if(this.barSelectedCategory === \"0\"){\r\n                barColor['disabled'] = true\r\n            }\r\n            else{\r\n                barColor['disabled'] = false\r\n            }\r\n        }\r\n        else{\r\n            if(this.barSelectedCategory === \"0\"){\r\n                barColor['disabled'] = false\r\n            }\r\n            else{\r\n                barColor['disabled'] = true\r\n            }\r\n        }\r\n        \r\n        const barTransparency = this.getFormattingSlice(powerbi.visuals.FormattingComponent.Slider, \"bar_transparency_uid\", \"Transparency\", \"barData\", \"transparency\", barFormatOptionsSelector, this.barTransparency)\r\n        const barTransparencyProperties = {\r\n            unitSymbol: \"%\",\r\n            unitSymbolAfterInput: false,\r\n            minValue: {\r\n                type: powerbi.visuals.ValidatorType.Min,\r\n                value: 0,\r\n            },\r\n            maxValue: {\r\n                type: powerbi.visuals.ValidatorType.Max,\r\n                value: 100,\r\n            }\r\n        }\r\n        barTransparency['control']['properties']['options'] = barTransparencyProperties as powerbi.visuals.NumUpDownFormat\r\n\r\n        let bar2_dataFont = this.getFormattingGroup(\"Color\", \"bar_Properties_group_uid\", [barColor, barConditionalFormat, barTransparency])\r\n\r\n        //Line Properties\r\n        const lineDropdown = this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"Series_line_uid\", \"Series\", \"lineData\", \"categoryProperty\", null, this.lineSelectedCategory)\r\n        lineDropdown['control']['properties']['mergeValues'] = lineDropDownCategories as powerbi.IEnumMember[]\r\n\r\n        const lineSeries = this.getFormattingSlice(powerbi.visuals.FormattingComponent.ToggleSwitch, \"line_series_uid\", \"Show for this series\", \"lineData\", \"showSeries\", this.lineQueryName, this.lineSelectedCategory === \"0\" ? true : this.filterProperty(\"queryName\", this.lineQueryName)[0].lineSelection)\r\n        lineSeries['disabled'] = this.lineSelectedCategory === \"0\" ? true : false\r\n\r\n        const lineColor = this.getFormattingSlice(powerbi.visuals.FormattingComponent.ColorPicker, \"line_color_uid\", \"\", \"lineData\", \"fontColor\", lineFormatOptionsSelector, { value: this.lineColor })\r\n        lineColor['disabled'] =  this.lineSelectedCategory === \"0\" ? true : false\r\n        \r\n        const lineSize = this.getFormattingSlice(powerbi.visuals.FormattingComponent.NumUpDown, \"line_size_uid\", \"Width\", \"lineData\", \"lineSize\", lineFormatOptionsSelector, this.lineSize)\r\n        const lineSizeProperties = {\r\n            unitSymbol: \"px\",\r\n            unitSymbolAfterInput: false,\r\n            minValue: {\r\n                type: powerbi.visuals.ValidatorType.Min,\r\n                value: 0,\r\n            },\r\n            maxValue: {\r\n                type: powerbi.visuals.ValidatorType.Max,\r\n                value: 10,\r\n            }\r\n        }\r\n        lineSize['control']['properties']['options'] = lineSizeProperties as powerbi.visuals.NumUpDownFormat\r\n\r\n        const lineStyleDropdown = this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"Style_line_uid\", \"Style\", \"lineData\", \"style\", lineFormatOptionsSelector, this.lineStyle)\r\n        \r\n        //Marker\r\n        const markerSize = this.getFormattingSlice(powerbi.visuals.FormattingComponent.NumUpDown, \"marker_size_uid\", \"Size\", \"lineData\", \"marker\", lineFormatOptionsSelector, this.markerSize)\r\n        const markerSizeProperties = {\r\n            unitSymbol: \"px\",\r\n            unitSymbolAfterInput: false,\r\n            minValue: {\r\n                type: powerbi.visuals.ValidatorType.Min,\r\n                value: 0,\r\n            },\r\n            maxValue: {\r\n                type: powerbi.visuals.ValidatorType.Max,\r\n                value: 10,\r\n            }\r\n        }\r\n        markerSize['control']['properties']['options'] = markerSizeProperties as powerbi.visuals.NumUpDownFormat\r\n\r\n        const markerShape = this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"marker_shape_uid\", \"Shape\", \"lineData\", \"markerShape\", lineFormatOptionsSelector, this.markerShape)\r\n\r\n        let line1_dataFont = this.getFormattingGroup(\"Apply settings to\", \"settings_line_group_uid\", [lineDropdown, lineSeries])\r\n        let line4_dataFont = this.getFormattingGroup(\"Color\", \"Color_Properties_group_uid\", [lineColor])\r\n        let line2_dataFont = this.getFormattingGroup(\"Line\", \"line_Properties_group_uid\", [lineSize, lineStyleDropdown])\r\n        let line3_dataFont = this.getFormattingGroup(\"Marker\", \"marker_Properties_group_uid\", [markerSize, markerShape])\r\n        line2_dataFont['disabled'] = this.lineSelectedCategory === \"0\" ? false : !this.filterProperty(\"queryName\", this.lineQueryName)[0].lineSelection\r\n        line3_dataFont['disabled'] = this.lineSelectedCategory === \"0\" ? false : !this.filterProperty(\"queryName\", this.lineQueryName)[0].lineSelection\r\n\r\n        //Legend\r\n        let legend_dataFont = this.getFormattingGroup('Options', 'position_legend_uid', [this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"Legend_uid\", \"Position\", \"legend\", \"position\", null, this.legendPosition)])\r\n\r\n        //Y-Axis\r\n        let yAxisMinSlice = this.getFormattingSlice(powerbi.visuals.FormattingComponent.NumUpDown, \"yAxis_min_range_uid\", \"Minimum\", \"barData\", \"yAxisMin\", null, this.yAxisMin);\r\n        yAxisMinSlice['control']['properties']['descriptor'] = this.addConditionalFormattingOptions(yAxisMinSlice)\r\n        yAxisMinSlice['control']['properties']['placeholderText'] = 'Auto'  \r\n        \r\n        let yAxisMaxSlice = this.getFormattingSlice(powerbi.visuals.FormattingComponent.NumUpDown, \"yAxis_max_range_uid\", \"Maximum\", \"barData\", \"yAxisMax\", null, this.yAxisMax);\r\n        yAxisMaxSlice['control']['properties']['descriptor'] = this.addConditionalFormattingOptions(yAxisMaxSlice)\r\n        yAxisMaxSlice['control']['properties']['placeholderText'] = 'Auto'\r\n        \r\n        const yAxisFontProperty = this.fontProperties(fontProperties, null, \"yAxis\", \"yAxis\");\r\n\r\n        let yAxis_dataFont = \r\n        this.getFormattingGroup('Values', 'display_units_yAxis', \r\n            [this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"yAxis_fontControl_displayUnits_uid\", \"Display units\", \"yAxis\", \"displayUnitsProperty\", null, this.yAxisDisplayUnits),\r\n             this.fontSlice(yAxisFontProperty, \"yAxis\"), \r\n             this.getFormattingSlice(powerbi.visuals.FormattingComponent.ColorPicker, \"yAxis_dataDesign_fontColor_slice\", \"Color\", \"yAxis\", \"fontColor\", null, { value: this.yAxisFontColor })\r\n            ])\r\n\r\n        let yAxis_range = this.getFormattingGroup('Range', 'range_yAxis_min', [yAxisMinSlice, yAxisMaxSlice])\r\n\r\n        //X-Axis\r\n        const xAxisFontProperty = this.fontProperties(fontProperties, null, \"xAxis\", \"xAxis\");\r\n        let xAxis_dataFont = \r\n        this.getFormattingGroup('Values', 'xAxis_font', \r\n            [this.fontSlice(xAxisFontProperty, \"xAxis\"), \r\n             this.getFormattingSlice(powerbi.visuals.FormattingComponent.ColorPicker, \"xAxis_dataDesign_fontColor_slice\", \"Color\", \"xAxis\", \"fontColor\", null, { value: this.xAxisFontColor })\r\n            ])\r\n\r\n        //Data Label Properties\r\n        const dataLabelDropdown = this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"dataLabel_category_uid\", \"Series\", \"dataLabels\", \"categoryProperty\", null, this.dataLabelSelectedCategory)\r\n        dataLabelDropdown['control']['properties']['mergeValues'] = dataLabelDropDownCategories as powerbi.IEnumMember[]\r\n\r\n        const dataLabelSeries = this.getFormattingSlice(powerbi.visuals.FormattingComponent.ToggleSwitch, \"dataLabel_category_series_uid\", \"Show for this series\", \"dataLabels\", \"showSeries\", this.dataLabelQueryName, this.dataLabelSelectedCategory === \"0\" ? true : this.filterProperty(\"queryName\", this.dataLabelQueryName)[0].dataLabelSelection)\r\n        dataLabelSeries['disabled'] = this.dataLabelSelectedCategory === \"0\" ? true : false\r\n        let dataLabel1_dataFont = this.getFormattingGroup(\"Apply settings to\", \"dataLabel_settings_table_group_uid\", [dataLabelDropdown, dataLabelSeries])\r\n\r\n        const dataLabelFontProperty = this.fontProperties(fontProperties, dataLabelFormatOptionsSelector, \"dataLabels\", \"dataLabel\");\r\n        let dataLabel2_dataFont =\r\n            this.getFormattingGroup(\"Values\", \"dataLabel_fontProperties_group_uid\",\r\n                [this.getFormattingSlice(powerbi.visuals.FormattingComponent.Dropdown, \"dataLabel_fontControl_displayUnits_uid\", \"Display units\", \"dataLabels\", \"displayUnitsProperty\", dataLabelFormatOptionsSelector, this.dataLabelDisplayUnits),\r\n                 this.fontSlice(dataLabelFontProperty, \"dataLabel\"),\r\n                 this.getFormattingSlice(powerbi.visuals.FormattingComponent.ColorPicker, \"dataLabel_dataDesign_fontColor_slice\", \"Color\", \"dataLabels\", \"fontColor\", dataLabelFormatOptionsSelector, { value: this.dataLabelFontColor })])\r\n        dataLabel2_dataFont['disabled'] = this.dataLabelSelectedCategory === \"0\" ? false : !this.filterProperty(\"queryName\", this.dataLabelQueryName)[0].dataLabelSelection\r\n        \r\n        const groups = [\r\n            { role: \"yAxis\", group: [yAxis_range, yAxis_dataFont], displayName : \"Y-Axis\"},\r\n            { role: \"xAxis\", group: [xAxis_dataFont], displayName : \"X-Axis\"},\r\n            { role: \"bar\", group: [bar1_dataFont, bar2_dataFont], displayName : \"Bar\" },\r\n            { role: \"line\", group: [line1_dataFont, line4_dataFont, line2_dataFont, line3_dataFont], displayName : \"Line & Marker\" },\r\n            { role: \"table\", group: [table1_dataFont, table2_dataFont, table3_dataFont], displayName : \"Table\" },\r\n            { role: \"legend\", group : [legend_dataFont], displayName : \"Legend\" },\r\n            { role: \"dataLabels\", group: [dataLabel1_dataFont, dataLabel2_dataFont], displayName : \"Data Labels\" }\r\n        ]\r\n\r\n        const cards = groups.map(item => {\r\n            const card = this.getFormattingCard(`${item.role} Properties`, item.displayName, `${item.role}_uid`, item.group)\r\n            if(item.role === \"dataLabels\" || item.role === \"legend\"){\r\n                const slice = this.getFormattingSlice(powerbi.visuals.FormattingComponent.ToggleSwitch, `${item.role}_uid`, item.displayName, item.role, \"series\", null, this[`${item.role}Series`])\r\n                card['topLevelToggle'] = {\r\n                    suppressDisplayName: true,\r\n                    control: slice['control'] as { type: \"ToggleSwitch\"; properties: powerbi.visuals.ToggleSwitch },\r\n                    uid: `Series_${item.role}_uid`\r\n                }\r\n            }\r\n            return card\r\n        })\r\n\r\n        const formattingModel: powerbi.visuals.FormattingModel = { cards: cards };\r\n        return formattingModel;\r\n    }\r\n\r\n    public getFormattingCard(description, displayName, uid, groups): powerbi.visuals.FormattingCard {\r\n        return {\r\n            description: description,\r\n            displayName: displayName,\r\n            uid: uid,\r\n            groups: groups\r\n        }\r\n    }\r\n\r\n    public getFormattingGroup(displayName, uid, slices): powerbi.visuals.FormattingGroup {\r\n        return {\r\n            displayName: displayName,\r\n            uid: uid,\r\n            slices: slices\r\n        }\r\n    }\r\n\r\n    public getFormattingSlice(type, uid, displayName, objectName, propertyName, selector, value): powerbi.visuals.FormattingSlice {\r\n        return {\r\n            uid: uid,\r\n            displayName: displayName,\r\n            control: {\r\n                type: type,\r\n                properties: {\r\n                    descriptor:\r\n                    {\r\n                        objectName: objectName,\r\n                        propertyName: propertyName,\r\n                        selector: {\r\n                            metadata: selector\r\n                        }\r\n                    },\r\n                    value: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fontProperties(fontProperties, selector, object, property) {\r\n        const fontProperty = {};\r\n        fontProperties.forEach(item => {\r\n            fontProperty[item] = this.getFormattingSlice(powerbi.visuals.FormattingComponent.FontControl, `${property}_font_control_slice_uid`, \"Font\", object, item, selector, this[`${property}${item}`])['control']['properties']['descriptor'] as powerbi.visuals.FormattingDescriptor\r\n        })\r\n\r\n        return fontProperty\r\n    }\r\n\r\n    private addConditionalFormattingOptions(formattingOptions: powerbi.visuals.FormattingSlice){\r\n        const options = formattingOptions['control']['properties']['descriptor']\r\n\r\n        options['selector'] = dataViewWildcard.createDataViewWildcardSelector(dataViewWildcard.DataViewWildcardMatchingOption.InstancesOnly),\r\n        options['altConstantValueSelector'] = null,\r\n        options['instanceKind'] = powerbi.VisualEnumerationInstanceKinds.ConstantOrRule \r\n\r\n        return options\r\n    }\r\n\r\n    private getMinMaxValue(){\r\n        return this.allProperties.filter(item => item.lineSelection || item.role === \"Bars\").flatMap(item => item.data).filter(item => item !== null)\r\n    }\r\n\r\n    private getGradientColor(linearGradient, value: number, minValue, maxValue): string{\r\n        const linearGradientMinData = linearGradient[\"fontColor\"][\"gradient\"][\"options\"][\"linearGradient2\"][\"min\"]\r\n        const linearGradientMaxData = linearGradient[\"fontColor\"][\"gradient\"][\"options\"][\"linearGradient2\"][\"max\"]\r\n        const nullColoringStrategy = linearGradient[\"fontColor\"][\"gradient\"][\"options\"][\"linearGradient2\"][\"nullColoringStrategy\"]\r\n\r\n        //const numerator = value - linearGradientMinValue\r\n        //const denominator = linearGradientMaxValue === linearGradientMinValue ? numerator : linearGradientMaxValue - linearGradientMinValue\r\n\r\n        const linearGradientMinValue = linearGradientMinData[\"value\"] === null ? minValue : linearGradientMinData[\"value\"]\r\n        const linearGradientMaxValue = linearGradientMaxData[\"value\"] === null ? maxValue : linearGradientMaxData[\"value\"]\r\n\r\n        const gradientScale = d3.scaleLinear()\r\n                .domain([linearGradientMinValue, linearGradientMaxValue])\r\n                .range([0, 1])\r\n\r\n        if(value === null && nullColoringStrategy[\"strategy\"] === \"specificColor\"){\r\n            return nullColoringStrategy[\"color\"]\r\n        }\r\n\r\n        return d3.interpolateRgb(linearGradientMinData[\"color\"],  linearGradientMaxData[\"color\"])(gradientScale(value));\r\n    }\r\n\r\n    private getRules(rules: powerbi.DataViewObjects[]):string[] {\r\n        let rulesColor = []\r\n        if(typeof(rules) !== \"undefined\"){\r\n            rules.forEach((rule, i) => {\r\n                if(rule === null || typeof(rule[\"barData\"][\"fontColor\"]) === \"undefined\"){\r\n                    rulesColor.push(\"#000000\")\r\n                }\r\n                else if(typeof(rule[\"barData\"][\"fontColor\"]) !== \"undefined\"){\r\n                    rulesColor.push(rule[\"barData\"][\"fontColor\"][\"solid\"][\"color\"]);    \r\n                }\r\n            })\r\n        }\r\n        return rulesColor\r\n    }\r\n\r\n    private fontSlice(fontProperty, property) {\r\n        return {\r\n            uid: `${property}_data_font_control_slice_uid`,\r\n            displayName: \"Font\",\r\n            control: {\r\n                type: powerbi.visuals.FormattingComponent.FontControl,\r\n                properties: {\r\n                    fontFamily: {\r\n                        descriptor: fontProperty['fontFamily'],\r\n                        value: this[`${property}FontFamily`]\r\n                    },\r\n                    fontSize: {\r\n                        descriptor: fontProperty['fontSize'],\r\n                        options: {\r\n                            minValue: {\r\n                                type: powerbi.visuals.ValidatorType.Min,\r\n                                value: 8,\r\n                            },\r\n                            maxValue: {\r\n                                type: powerbi.visuals.ValidatorType.Min,\r\n                                value: 100,\r\n                            }\r\n                        },\r\n                        value: this[`${property}FontSize`]\r\n                    },\r\n                    bold: {\r\n                        descriptor: fontProperty['fontBold'],\r\n                        value: this[`${property}FontBold`]\r\n                    },\r\n                    italic: {\r\n                        descriptor: fontProperty['fontItalic'],\r\n                        value: this[`${property}FontItalic`]\r\n                    },\r\n                    underline: {\r\n                        descriptor: fontProperty['fontUnderline'],\r\n                        value: this[`${property}FontUnderline`]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getAllSeries(totalDataPoints): IDropdown[] {\r\n        const dropDownSeries = []\r\n        for (var i = 0; i < totalDataPoints.length + 1; i++) {\r\n            if (i === 0) {\r\n                dropDownSeries.push({\r\n                    \"value\": \"0\",\r\n                    \"displayName\": \"All\"\r\n                })\r\n            }\r\n            else {\r\n                dropDownSeries.push({\r\n                    \"value\": String(i),\r\n                    \"displayName\": totalDataPoints[i - 1].displayName\r\n                })\r\n            }\r\n        }\r\n        return dropDownSeries\r\n    }\r\n\r\n    private handleClick(selectionId: ISelectionId, barClass: string, isBodySelected: boolean = false): void {\r\n        this.selectedDataPoint = {\r\n            identity: selectionId,\r\n            label: barClass\r\n        }\r\n\r\n        this.selectionManager // Selection Manager for cross filtering and cross highlighting\r\n            .select(selectionId, false)\r\n            .then((ids) => {\r\n                const highlightClass = this.allProperties.filter(item => item.displayName === barClass)\r\n                const otherClasses = this.allProperties.filter(item => item.displayName !== barClass)\r\n                const selectedRow = d3.selectAll(`[class='${barClass}']`)\r\n\r\n                //Highlight Bars, Lines and Table   \r\n                if (!isBodySelected) {\r\n                    const highlightAttributes = {\r\n                        fontWeight: \"bold\",\r\n                        color: highlightClass[0].fontColor,\r\n                        borderColor: 'black',\r\n                        fillOpacity: \"1\",\r\n                        strokeWidth: '3'\r\n                    }\r\n                    this.resetSelection(selectedRow, highlightAttributes)\r\n\r\n                    //Deselect other Bars, Lines and Table\r\n                    otherClasses.forEach(item => {\r\n                        const resetRow = d3.selectAll(`[class='${item.displayName}']`)\r\n                        const resetAttributes = {\r\n                            color: '#D3D3D3',\r\n                            fontWeight: 'normal',\r\n                            fillOpacity: \"0.2\",\r\n                            strokeWidth: '1'\r\n                        }\r\n                        this.resetSelection(resetRow, resetAttributes)\r\n                    })\r\n                }\r\n\r\n                //Reset\r\n                if (this.previousSelection === barClass || isBodySelected) {\r\n                    this.selectionManager\r\n                        .clear()\r\n                        .then(() => {\r\n                            otherClasses.forEach(item => {\r\n                                const resetRow = d3.selectAll(`[class='${item.displayName}']`)\r\n                                const resetAttributes = {\r\n                                    color: item.fontColor,\r\n                                    borderColor: 'black',\r\n                                    fillOpacity: `${(100 - item.barTransparency) / 100}`,\r\n                                    strokeWidth: '3'\r\n                                }\r\n                                this.resetSelection(resetRow, resetAttributes)\r\n                            })\r\n\r\n                            const highlightAttributes = {\r\n                                color: highlightClass[0].fontColor,\r\n                                fontWeight: 'normal',\r\n                                fillOpacity: `${(100 - highlightClass[0].barTransparency) / 100}`,\r\n                                strokeWidth: '3' \r\n                            }\r\n                            this.resetSelection(selectedRow, highlightAttributes)\r\n                        })\r\n                    this.previousSelection = \"\"\r\n                    return\r\n                }\r\n                this.previousSelection = barClass\r\n            });\r\n    }\r\n\r\n    private resetSelection(node, attributes): void {\r\n        Array.from(node).forEach((item: HTMLElement) => {\r\n            this.styleElement(item, attributes)\r\n        })\r\n    }\r\n\r\n    private styleElement(element: HTMLElement, styleAttributes): void {\r\n        Object.entries(styleAttributes).forEach(([key, value]) => {\r\n            element.style[key] = value\r\n        })\r\n    }\r\n\r\n    private filterProperty(property: string, filterValue, object = this.allProperties) {\r\n        return object.filter(item => item[property] === filterValue)\r\n    }\r\n\r\n    private getPropertyValue<T>(queryName: string, value, property: string): T {\r\n        return queryName === \"All\" ? value : this.filterProperty(\"queryName\", queryName)[0][property]\r\n    }\r\n\r\n    private formatValue(formatString, formatValue, value, precision = 0): string {\r\n        const formatter: IValueFormatter = valueFormatter.create({\r\n            format: formatString,\r\n            value: formatValue,\r\n            precision: precision,\r\n            allowFormatBeautification: true\r\n        })\r\n        return formatter.format(value)\r\n    }\r\n\r\n    private getAutoNumber(formatString, value): string {\r\n        let formatValue = Math.abs(value)\r\n        switch (true) {\r\n            case (formatValue < 1000):\r\n                return this.formatValue(formatString, 0, value)\r\n            case (formatValue < 1000000):\r\n                return this.formatValue(formatString, 1001, value)\r\n            case (formatValue < 1000000000):\r\n                return this.formatValue(formatString, 1e6, value)\r\n            case (formatValue < 1000000000000):\r\n                return this.formatValue(formatString, 1e9, value)\r\n            case (formatValue < 1000000000000000):\r\n                return this.formatValue(formatString, 1e12, value)\r\n        }\r\n        return this.formatValue(formatString, 0, value)\r\n    }\r\n\r\n    public getProperty<T>(objects, object, property, defaultValue): T {\r\n        return typeof objects === \"undefined\" || typeof objects[object] === \"undefined\" || typeof objects[object][property] === \"undefined\" ? defaultValue : <T>objects[object][property]\r\n    }\r\n\r\n    private handleContextMenu(selectionID = null) {\r\n        d3.select(this.target).on('contextmenu', (e: PointerEvent) => {\r\n            this.selectionManager.showContextMenu(selectionID, {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            });\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    private getMarkerShape(selectedShape: string): string {\r\n         switch (selectedShape){\r\n            case \"0\":\r\n                return \"●\"\r\n            case \"1\":\r\n                return \"■\"\r\n            case \"2\":\r\n                 return \"▲\"\r\n            case \"3\":\r\n                return \"♦\"\r\n            case \"4\":\r\n                return \"X\"\r\n            case \"5\":\r\n                return \"+\"\r\n            case \"6\":\r\n                return \"—\"\r\n         }\r\n    }\r\n\r\n    private formatDataLabelText(displayUnitsProperty: number, format: string, value: number): string {\r\n        switch (displayUnitsProperty) {\r\n            case 0:\r\n                return this.getAutoNumber(format, value);\r\n            case 1000:\r\n                return this.formatValue(format, 1001, value, 2);\r\n            case 1000000:\r\n                return this.formatValue(format, 1e6, value, 2);\r\n            case 1000000000:\r\n                return this.formatValue(format, 1e9, value, 2);\r\n                break;\r\n            case 1000000000000:\r\n                return this.formatValue(format, 1e12, value, 2);\r\n                break;\r\n            default:\r\n                return this.formatValue(format, null, value, 2);\r\n        }\r\n    }\r\n\r\n    private persistState(): void {\r\n      const objects = []\r\n      this.allProperties.forEach(item => {\r\n      const tableProperties = {\r\n            objectName: \"tableData\",\r\n            selector: item.queryName,\r\n            properties: {\r\n                \"fontSize\": item.fontSize,\r\n                \"fontFamily\": item.fontFamily,\r\n                \"fontBold\": item.fontBold,\r\n                \"fontUnderline\": item.fontUnderline,\r\n                \"fontItalic\": item.fontItalic,\r\n                \"fontColor\": item.fontColor,\r\n                \"displayUnitsProperty\": item.displayUnitsProperty,\r\n                \"showSeries\": item.tableSelection\r\n            }\r\n         }\r\n      \r\n      const barProperties = {\r\n            objectName: \"barData\",\r\n            selector: item.queryName,\r\n            properties: {\r\n            \"fontColor\": this.barColor,\r\n            \"transparency\": item.barTransparency\r\n            }\r\n        }\r\n\r\n      const lineProperties = {\r\n            objectName: \"lineData\",\r\n            selector: item.queryName,\r\n            properties: {\r\n            \"fontColor\": this.lineColor,\r\n            \"lineSize\": this.lineSize,\r\n            \"style\": this.lineStyle,\r\n            \"marker\": this.markerSize,\r\n            \"showSeries\": item.lineSelection\r\n            }\r\n        }\r\n\r\n    const dataLabelProperties = {\r\n            objectName: \"dataLabels\",\r\n            selector: item.queryName,\r\n            properties: {\r\n                \"fontSize\": item.dataLabelFontSize,\r\n                \"fontFamily\": item.dataLabelFontFamily,\r\n                \"fontBold\": item.dataLabelFontBold,\r\n                \"fontUnderline\": item.dataLabelFontUnderline,\r\n                \"fontItalic\": item.dataLabelFontItalic,\r\n                \"fontColor\": item.dataLabelFontColor,\r\n                \"displayUnitsProperty\": item.dataLabelDisplayUnitsProperty,\r\n                \"showSeries\": item.dataLabelSelection\r\n            }\r\n         }\r\n         objects.push(tableProperties)\r\n         objects.push(barProperties)\r\n         objects.push(lineProperties)\r\n         objects.push(dataLabelProperties)\r\n       })\r\n\r\n       const instances: VisualObjectInstance[] = [\r\n        {   \r\n            objectName: \"tableData\",\r\n            selector : null,\r\n            properties: {\r\n                \"fontSize\": this.fontSizeAll,\r\n                \"fontFamily\": this.fontFamilyAll,\r\n                \"fontBold\": this.fontBoldAll,\r\n                \"fontUnderline\": this.fontUnderlineAll,\r\n                \"fontItalic\": this.fontItalicAll,\r\n                \"fontColor\": this.fontColorAll,\r\n                \"displayUnitsProperty\": this.displayUnitsPropertyAll,\r\n                \"showSeries\": true,\r\n                \"borderColor\": this.tableBorderColor,\r\n                \"borderThickness\": this.tableBorderThickness,\r\n            }\r\n        },\r\n        {   \r\n            objectName: \"barData\",\r\n            selector : null,\r\n            properties: {\r\n                \"fontColor\": this.barColors[0],\r\n                \"transparency\": this.barTransparencyAll,\r\n                \"yAxisMin\": this.yAxisMin,\r\n                \"yAxisMax\": this.yAxisMax,\r\n                \"yAxisFontSize\": this.yAxisFontSize,\r\n                \"yAxisFontFamily\": this.yAxisFontFamily,\r\n                \"yAxisFontBold\": this.yAxisFontBold,\r\n                \"yAxisFontUnderline\": this.yAxisFontUnderline,\r\n                \"yAxisFontItalic\": this.yAxisFontItalic,\r\n                \"yAxisFontColor\": this.yAxisFontColor,\r\n                \"displayUnitsProperty\": this.yAxisDisplayUnits,\r\n                \"useConditionalFormatting\": this.useConditionalFormatting\r\n            }\r\n        },\r\n        {   \r\n            objectName: \"yAxis\",\r\n            selector : null,\r\n            properties: {\r\n                \"fontSize\": this.yAxisFontSize,\r\n                \"fontFamily\": this.yAxisFontFamily,\r\n                \"fontBold\": this.yAxisFontBold,\r\n                \"fontUnderline\": this.yAxisFontUnderline,\r\n                \"fontItalic\": this.yAxisFontItalic,\r\n                \"fontColor\": this.yAxisFontColor,\r\n                \"displayUnitsProperty\": this.yAxisDisplayUnits\r\n            }\r\n        },\r\n        {   \r\n            objectName: \"xAxis\",\r\n            selector : null,\r\n            properties: {\r\n                \"fontSize\": this.xAxisFontSize,\r\n                \"fontFamily\": this.xAxisFontFamily,\r\n                \"fontBold\": this.xAxisFontBold,\r\n                \"fontUnderline\": this.xAxisFontUnderline,\r\n                \"fontItalic\": this.xAxisFontItalic,\r\n                \"fontColor\": this.xAxisFontColor\r\n            }\r\n        },\r\n        {   \r\n            objectName: \"lineData\",\r\n            selector : null,\r\n            properties: {\r\n                \"fontColor\": this.lineColors[0],\r\n                \"lineSize\": this.lineSizeAll,\r\n                \"style\": this.lineStyleAll,\r\n                \"marker\": this.markerSizeAll,\r\n                \"markerShape\": this.markerShapeAll,\r\n                \"showSeries\": true\r\n            }\r\n        },\r\n        {   \r\n            objectName: \"dataLabels\",\r\n            selector : null,\r\n            properties: {\r\n                \"fontSize\": this.dataLabelFontSizeAll,\r\n                \"fontFamily\": this.dataLabelFontFamilyAll,\r\n                \"fontBold\": this.dataLabelFontBoldAll,\r\n                \"fontUnderline\": this.dataLabelFontUnderlineAll,\r\n                \"fontItalic\": this.dataLabelFontItalicAll,\r\n                \"fontColor\": this.dataLabelFontColorAll,\r\n                \"displayUnitsProperty\": this.dataLabelDisplayUnitsPropertyAll,\r\n                \"showSeries\": false,\r\n                \"series\": this.dataLabelsSeries\r\n            }\r\n        },\r\n        {   \r\n            objectName: \"legend\",\r\n            selector : null,\r\n            properties: {\r\n                \"series\": this.legendSeries,\r\n                \"position\": this.legendPosition\r\n            }\r\n        }\r\n    ]\r\n\r\n    if (JSON.stringify(this.persistedProperties) !== JSON.stringify(instances)) {\r\n        this.visualHost.persistProperties({\r\n            merge: [...instances, ...objects]\r\n        })\r\n        this.persistedProperties = instances; \r\n    }\r\n    }\r\n}\r\n","/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\nimport { scaleLinear, scaleLog, scaleBand, scalePoint, } from \"d3-scale\";\nimport { axisLeft, axisBottom, axisTop, axisRight } from \"d3-axis\";\nimport { min, max, bisect } from \"d3-array\";\n// powerbi.extensibility.utils.type\nimport { double as Double, valueType } from \"powerbi-visuals-utils-typeutils\";\nvar ValueType = valueType.ValueType;\nimport { AxisOrientation } from \"./axisInterfaces\";\nimport * as axisScale from \"./axisScale\";\nimport * as axisStyle from \"./axisStyle\";\n// powerbi.extensibility.utils.formatting\nimport { valueFormatter as vf, wordBreaker, dateTimeSequence, formattingService } from \"powerbi-visuals-utils-formattingutils\";\nvar DateTimeSequence = dateTimeSequence.DateTimeSequence;\nvar valueFormatter = vf;\nvar numberFormat = formattingService.numberFormat;\nconst XLabelMaxAllowedOverflow = 35;\nconst TextHeightConstant = 10;\nconst MinTickCount = 2;\nconst DefaultBestTickCount = 3;\nconst ScalarTickLabelPadding = 3;\nconst TickLabelPadding = 2;\nconst MinOrdinalRectThickness = 20;\n/**\n * Default ranges are for when we have a field chosen for the axis,\n * but no values are returned by the query.\n */\nexport const emptyDomain = [0, 0];\nexport const stackedAxisPadding = 5;\nexport function getRecommendedNumberOfTicksForXAxis(availableWidth) {\n    if (availableWidth < 300) {\n        return 3;\n    }\n    if (availableWidth < 500) {\n        return 5;\n    }\n    return 8;\n}\nexport function getRecommendedNumberOfTicksForYAxis(availableWidth) {\n    if (availableWidth < 150) {\n        return 3;\n    }\n    if (availableWidth < 300) {\n        return 5;\n    }\n    return 8;\n}\n/**\n * Get the best number of ticks based on minimum value, maximum value,\n * measure metadata and max tick count.\n *\n * @param min The minimum of the data domain.\n * @param max The maximum of the data domain.\n * @param valuesMetadata The measure metadata array.\n * @param maxTickCount The max count of intervals.\n * @param isDateTime - flag to show single tick when min is equal to max.\n */\nexport function getBestNumberOfTicks(min, max, valuesMetadata, maxTickCount, isDateTime) {\n    if (isNaN(min) || isNaN(max)) {\n        return DefaultBestTickCount;\n    }\n    if (maxTickCount <= 1 || (max <= 1 && min >= -1)) {\n        return maxTickCount;\n    }\n    if (min === max) {\n        // datetime needs to only show one tick value in this case so formatting works correctly\n        if (isDateTime) {\n            return 1;\n        }\n        return DefaultBestTickCount;\n    }\n    if (hasNonIntegerData(valuesMetadata)) {\n        return maxTickCount;\n    }\n    // e.g. 5 - 2 + 1 = 4, => [2,3,4,5]\n    return Math.min(max - min + 1, maxTickCount);\n}\nexport function hasNonIntegerData(valuesMetadata) {\n    for (let i = 0, len = valuesMetadata.length; i < len; i++) {\n        const currentMetadata = valuesMetadata[i];\n        if (currentMetadata && currentMetadata.type && !currentMetadata.type.integer) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function getRecommendedTickValues(maxTicks, scale, axisType, isScalar, minTickInterval) {\n    if (!isScalar || isOrdinalScale(scale)) {\n        return getRecommendedTickValuesForAnOrdinalRange(maxTicks, scale.domain());\n    }\n    else if (isDateTime(axisType)) {\n        return getRecommendedTickValuesForADateTimeRange(maxTicks, scale.domain());\n    }\n    return getRecommendedTickValuesForAQuantitativeRange(maxTicks, scale, minTickInterval);\n}\nexport function getRecommendedTickValuesForAnOrdinalRange(maxTicks, labels) {\n    const tickLabels = [];\n    // return no ticks in this case\n    if (maxTicks <= 0)\n        return tickLabels;\n    const len = labels.length;\n    if (maxTicks > len)\n        return labels;\n    for (let i = 0, step = Math.ceil(len / maxTicks); i < len; i += step) {\n        tickLabels.push(labels[i]);\n    }\n    return tickLabels;\n}\nexport function getRecommendedTickValuesForAQuantitativeRange(maxTicks, scale, minInterval) {\n    let tickLabels = [];\n    // if maxticks is zero return none\n    if (maxTicks === 0)\n        return tickLabels;\n    const quantitiveScale = scale;\n    if (quantitiveScale.ticks) {\n        tickLabels = quantitiveScale.ticks(maxTicks);\n        if (tickLabels.length > maxTicks && maxTicks > 1)\n            tickLabels = quantitiveScale.ticks(maxTicks - 1);\n        if (tickLabels.length < MinTickCount) {\n            tickLabels = quantitiveScale.ticks(maxTicks + 1);\n        }\n        tickLabels = createTrueZeroTickLabel(tickLabels);\n        if (minInterval && tickLabels.length > 1) {\n            let tickInterval = tickLabels[1] - tickLabels[0];\n            while (tickInterval > 0 && tickInterval < minInterval) {\n                for (let i = 1; i < tickLabels.length; i++) {\n                    tickLabels.splice(i, 1);\n                }\n                tickInterval = tickInterval * 2;\n            }\n            // keep at least two labels - the loop above may trim all but one if we have odd # of tick labels and dynamic range < minInterval\n            if (tickLabels.length === 1) {\n                tickLabels.push(tickLabels[0] + minInterval);\n            }\n        }\n        return tickLabels;\n    }\n    return tickLabels;\n}\n/**\n * Round out very small zero tick values (e.g. -1e-33 becomes 0).\n *\n * @param ticks Array of numbers (from d3.scale.ticks([maxTicks])).\n * @param epsilon Max ratio of calculated tick interval which we will recognize as zero.\n *\n * e.g.\n *     ticks = [-2, -1, 1e-10, 3, 4]; epsilon = 1e-5;\n *     closeZero = 1e-5 * | 2 - 1 | = 1e-5\n *     // Tick values <= 1e-5 replaced with 0\n *     return [-2, -1, 0, 3, 4];\n */\nfunction createTrueZeroTickLabel(ticks, epsilon = 1e-5) {\n    if (!ticks || ticks.length < 2)\n        return ticks;\n    const closeZero = epsilon * Math.abs(ticks[1] - ticks[0]);\n    return ticks.map((tick) => Math.abs(tick) <= closeZero ? 0 : tick);\n}\nfunction getRecommendedTickValuesForADateTimeRange(maxTicks, dataDomain) {\n    let tickLabels = [];\n    if (dataDomain[0] === 0 && dataDomain[1] === 0)\n        return [];\n    const dateTimeTickLabels = DateTimeSequence.CALCULATE(new Date(dataDomain[0]), new Date(dataDomain[1]), maxTicks).sequence;\n    tickLabels = dateTimeTickLabels.map(d => d.getTime());\n    tickLabels = ensureValuesInRange(tickLabels, dataDomain[0], dataDomain[1]);\n    return tickLabels;\n}\nfunction normalizeLinearDomain(domain) {\n    if (isNaN(domain.min) || isNaN(domain.max)) {\n        domain.min = emptyDomain[0];\n        domain.max = emptyDomain[1];\n    }\n    else if (domain.min === domain.max) {\n        // d3 linear scale will give zero tickValues if max === min, so extend a little\n        domain.min = domain.min < 0 ? domain.min * 1.2 : domain.min * 0.8;\n        domain.max = domain.max < 0 ? domain.max * 0.8 : domain.max * 1.2;\n    }\n    else {\n        // Check that min is very small and is a negligable portion of the whole domain.\n        // (fix floating pt precision bugs)\n        // sometimes highlight value math causes small negative numbers which makes the axis add\n        // a large tick interval instead of just rendering at zero.\n        if (Math.abs(domain.min) < 0.0001 && domain.min / (domain.max - domain.min) < 0.0001) {\n            domain.min = 0;\n        }\n    }\n    return domain;\n}\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\nexport function getMargin(availableWidth, availableHeight, xMargin, yMargin) {\n    return {\n        top: 20,\n        right: 30,\n        bottom: 40,\n        left: 30\n    };\n}\n// TODO: Put the parameters into one object\n/* eslint-disable-next-line max-lines-per-function*/\nexport function getTickLabelMargins(viewport, yMarginLimit, textWidthMeasurer, textHeightMeasurer, axes, bottomMarginLimit, properties, scrollbarVisible, showOnRight, renderXAxis, renderY1Axis, renderY2Axis) {\n    const xAxisProperties = axes.x;\n    const y1AxisProperties = axes.y1;\n    const y2AxisProperties = axes.y2;\n    const xLabels = xAxisProperties.values;\n    const y1Labels = y1AxisProperties.values;\n    let leftOverflow = 0;\n    let rightOverflow = 0;\n    let maxWidthY1 = 0;\n    let maxWidthY2 = 0;\n    let xMax = 0; // bottom margin\n    const ordinalLabelOffset = xAxisProperties.categoryThickness ? xAxisProperties.categoryThickness / 2 : 0;\n    const scaleIsOrdinal = isOrdinalScale(xAxisProperties.scale);\n    const hasHierarchy = !arrayIsEmpty(axes.xStack);\n    let xLabelOuterPadding = 0;\n    if (xAxisProperties.outerPadding !== undefined) {\n        xLabelOuterPadding = xAxisProperties.outerPadding;\n    }\n    else if (xAxisProperties.xLabelMaxWidth !== undefined) {\n        xLabelOuterPadding = Math.max(0, (viewport.width - xAxisProperties.xLabelMaxWidth * xLabels.length) / 2);\n    }\n    let rotation;\n    if (scrollbarVisible || hasHierarchy)\n        rotation = LabelLayoutStrategy.DefaultRotationWithScrollbar;\n    else\n        rotation = LabelLayoutStrategy.DefaultRotation;\n    if (renderY1Axis) {\n        for (let i = 0, len = y1Labels.length; i < len; i++) {\n            properties.text = y1Labels[i];\n            maxWidthY1 = Math.max(maxWidthY1, textWidthMeasurer(properties));\n        }\n    }\n    if (y2AxisProperties && renderY2Axis) {\n        const y2Labels = y2AxisProperties.values;\n        for (let i = 0, len = y2Labels.length; i < len; i++) {\n            properties.text = y2Labels[i];\n            maxWidthY2 = Math.max(maxWidthY2, textWidthMeasurer(properties));\n        }\n    }\n    const textHeight = textHeightMeasurer(properties);\n    const maxNumLines = Math.floor(bottomMarginLimit / textHeight);\n    const xScale = xAxisProperties.scale;\n    const xDomain = xScale.domain();\n    if (renderXAxis && xLabels.length > 0) {\n        for (let i = 0, len = xLabels.length; i < len; i++) {\n            // find the max height of the x-labels, perhaps rotated or wrapped\n            let height;\n            properties.text = xLabels[i];\n            let width = textWidthMeasurer(properties);\n            if (xAxisProperties.willLabelsWordBreak) {\n                // Split label and count rows\n                const wordBreaks = wordBreaker.splitByWidth(properties.text, properties, textWidthMeasurer, xAxisProperties.xLabelMaxWidth, maxNumLines);\n                height = wordBreaks.length * textHeight;\n                // word wrapping will truncate at xLabelMaxWidth\n                width = xAxisProperties.xLabelMaxWidth;\n            }\n            else if (!xAxisProperties.willLabelsFit && scaleIsOrdinal) {\n                height = width * rotation.sine;\n                width = width * rotation.cosine;\n            }\n            else {\n                height = TextHeightConstant;\n            }\n            // calculate left and right overflow due to wide X labels\n            // (Note: no right overflow when rotated)\n            if (i === 0) {\n                if (scaleIsOrdinal) {\n                    if (!xAxisProperties.willLabelsFit /*rotated text*/)\n                        leftOverflow = width - ordinalLabelOffset - xLabelOuterPadding;\n                    else\n                        leftOverflow = (width / 2) - ordinalLabelOffset - xLabelOuterPadding;\n                    leftOverflow = Math.max(leftOverflow, 0);\n                }\n                else if (xDomain.length > 1) {\n                    // Scalar - do some math\n                    const xPos = xScale(xDomain[0]);\n                    // xPos already incorporates xLabelOuterPadding, don't subtract it twice\n                    leftOverflow = (width / 2) - xPos;\n                    leftOverflow = Math.max(leftOverflow, 0);\n                }\n            }\n            else if (i === len - 1) {\n                if (scaleIsOrdinal) {\n                    // if we are rotating text (!willLabelsFit) there won't be any right overflow\n                    if (xAxisProperties.willLabelsFit || xAxisProperties.willLabelsWordBreak) {\n                        // assume this label is placed near the edge\n                        rightOverflow = (width / 2) - ordinalLabelOffset - xLabelOuterPadding;\n                        rightOverflow = Math.max(rightOverflow, 0);\n                    }\n                }\n                else if (xDomain.length > 1) {\n                    // Scalar - do some math\n                    const xPos = xScale(xDomain[1]);\n                    // xPos already incorporates xLabelOuterPadding, don't subtract it twice\n                    rightOverflow = (width / 2) - (viewport.width - xPos);\n                    rightOverflow = Math.max(rightOverflow, 0);\n                }\n            }\n            xMax = Math.max(xMax, height);\n        }\n        // trim any actual overflow to the limit\n        leftOverflow = Math.min(leftOverflow, XLabelMaxAllowedOverflow);\n        rightOverflow = Math.min(rightOverflow, XLabelMaxAllowedOverflow);\n    }\n    let rightMargin = 0, leftMargin = 0, bottomMargin = Math.min(Math.ceil(xMax), bottomMarginLimit);\n    if (showOnRight) {\n        leftMargin = Math.min(Math.max(leftOverflow, maxWidthY2), yMarginLimit);\n        rightMargin = Math.min(Math.max(rightOverflow, maxWidthY1), yMarginLimit);\n    }\n    else {\n        leftMargin = Math.min(Math.max(leftOverflow, maxWidthY1), yMarginLimit);\n        rightMargin = Math.min(Math.max(rightOverflow, maxWidthY2), yMarginLimit);\n    }\n    if (hasHierarchy) {\n        bottomMargin += (textHeight + stackedAxisPadding) * (axes.xStack.length - 1);\n    }\n    return {\n        xMax: Math.ceil(bottomMargin),\n        yLeft: Math.ceil(leftMargin),\n        yRight: Math.ceil(rightMargin),\n        stackHeight: textHeight + stackedAxisPadding,\n    };\n}\nexport function columnDataTypeHasValue(dataType) {\n    return dataType && (dataType.bool || dataType.numeric || dataType.text || dataType.dateTime);\n}\nexport function createOrdinalType() {\n    return ValueType.fromDescriptor({ text: true });\n}\nexport function isOrdinal(dataType) {\n    return !!(dataType && (dataType.text || dataType.bool || (dataType.misc && dataType.misc.barcode) || (dataType.geography && dataType.geography.postalCode)));\n}\nexport function isOrdinalScale(scale) {\n    return typeof scale.bandwidth === \"function\";\n}\nexport function isDateTime(dataType) {\n    return !!(dataType && dataType.dateTime);\n}\nexport function invertScale(scale, x) {\n    if (isOrdinalScale(scale)) {\n        return invertOrdinalScale(scale, x);\n    }\n    return scale.invert(x);\n}\nexport function extent(scale) {\n    const range = scale.range();\n    return [range[0], range[range.length - 1]];\n}\n/**\n * Uses the D3 scale to get the actual category thickness.\n * @return The difference between the 1st and 2nd items in the range if there are 2 or more items in the range.\n * Otherwise, the length of the entire range.\n */\nexport function getCategoryThickness(scale) {\n    const leftEdges = scale.range();\n    if (leftEdges.length < 2) {\n        // We have 1 item if we don't have 2 edges. If we have 1 item, just use the entire axis length as the thickness.\n        if (isOrdinalScale(scale)) {\n            // We should only hit this if we have an ordinal scale. Other scales should always have 2 items in their range.\n            const rangeExtent = scale.range();\n            return rangeExtent[1] - rangeExtent[0];\n        }\n    }\n    return leftEdges[1] - leftEdges[0];\n}\n/**\n * Inverts the ordinal scale. If x < scale.range()[0], then scale.domain()[0] is returned.\n * Otherwise, it returns the greatest item in scale.domain() that's <= x.\n */\nexport function invertOrdinalScale(scale, x) {\n    const domain = scale.domain();\n    const range = domain.map(d => scale(d));\n    if (range.length < 2) {\n        return 0;\n    }\n    const leftEdges = [];\n    leftEdges[0] = range[0];\n    leftEdges[1] = range[range.length - 1];\n    const halfInnerPadding = 0;\n    // If x is less than the range, just return the 1st item in the domain\n    if (range[0] > x) {\n        return domain[0];\n    }\n    // d3.bisect returns the index at which we can insert something so that everything before it is lesser and everything after it is greater.\n    // The leftEdges don't include the inner padding, so we need to shift x over by halfInnerPadding to account it.\n    // We want index - 1 since that's the greatest value less than x, meaning that's the band we're in.\n    // Use that index to find the right value in the domain.\n    return domain[bisect(range, x + halfInnerPadding) - 1];\n}\nexport function findClosestXAxisIndex(categoryValue, categoryAxisValues) {\n    let closestValueIndex = -1, minDistance = Number.MAX_VALUE;\n    for (const i in categoryAxisValues) {\n        const distance = Math.abs(categoryValue - categoryAxisValues[i].categoryValue);\n        if (distance < minDistance) {\n            minDistance = distance;\n            closestValueIndex = parseInt(i, 10);\n        }\n    }\n    return closestValueIndex;\n}\nexport function lookupOrdinalIndex(scale, pixelValue) {\n    let closestValueIndex = -1;\n    let minDistance = Number.MAX_VALUE;\n    const domain = scale.domain();\n    if (domain.length < 2) {\n        return 0;\n    }\n    const halfWidth = (scale(1) - scale(0)) / 2;\n    for (const idx in domain) {\n        const leftEdgeInPixels = scale(idx);\n        const midPoint = leftEdgeInPixels + halfWidth;\n        const distance = Math.abs(pixelValue - midPoint);\n        if (distance < minDistance) {\n            minDistance = distance;\n            closestValueIndex = parseInt(idx, 10);\n        }\n    }\n    return closestValueIndex;\n}\n/** scale(value1) - scale(value2) with zero checking and min(+/-1, result) */\nexport function diffScaled(scale, value1, value2) {\n    const value = scale(value1) - scale(value2);\n    if (value === 0) {\n        return 0;\n    }\n    if (value < 0) {\n        return Math.min(value, -1);\n    }\n    return Math.max(value, 1);\n}\nexport function createDomain(data, axisType, isScalar, forcedScalarDomain, ensureDomain) {\n    if (isScalar && !isOrdinal(axisType)) {\n        let userMin, userMax;\n        if (forcedScalarDomain && forcedScalarDomain.length === 2) {\n            userMin = forcedScalarDomain[0];\n            userMax = forcedScalarDomain[1];\n        }\n        return createScalarDomain(data, userMin, userMax, axisType, ensureDomain);\n    }\n    return createOrdinalDomain(data);\n}\nexport function ensureValuesInRange(values, min, max) {\n    let filteredValues = values.filter(v => v >= min && v <= max);\n    if (filteredValues.length < 2) {\n        filteredValues = [min, max];\n    }\n    return filteredValues;\n}\n/**\n * Gets the ValueType of a category column, defaults to Text if the type is not present.\n */\nexport function getCategoryValueType(metadataColumn, isScalar) {\n    if (metadataColumn && columnDataTypeHasValue(metadataColumn.type)) {\n        return metadataColumn.type;\n    }\n    if (isScalar) {\n        return ValueType.fromDescriptor({ numeric: true });\n    }\n    return ValueType.fromDescriptor({ text: true });\n}\n/**\n * Create a D3 axis including scale. Can be vertical or horizontal, and either datetime, numeric, or text.\n * @param options The properties used to create the axis.\n */\nexport function createAxis(options) {\n    const pixelSpan = options.pixelSpan, dataDomain = options.dataDomain, metaDataColumn = options.metaDataColumn, formatString = options.formatString, outerPadding = options.outerPadding || 0, isCategoryAxis = !!options.isCategoryAxis, isScalar = !!options.isScalar, isVertical = !!options.isVertical, useTickIntervalForDisplayUnits = !!options.useTickIntervalForDisplayUnits, // DEPRECATE: same meaning as isScalar?\n    getValueFn = options.getValueFn, axisDisplayUnits = options.axisDisplayUnits, axisPrecision = options.axisPrecision, is100Pct = !!options.is100Pct, dataType = getCategoryValueType(metaDataColumn, isScalar);\n    let categoryThickness = options.categoryThickness;\n    // Create the Scale\n    const scaleResult = createScale(options);\n    const scale = scaleResult.scale;\n    const bestTickCount = scaleResult.bestTickCount;\n    const scaleDomain = scale.domain();\n    const isLogScaleAllowed = isLogScalePossible(dataDomain, dataType);\n    // fix categoryThickness if scalar and the domain was adjusted when making the scale \"nice\"\n    if (categoryThickness && isScalar && dataDomain && dataDomain.length === 2) {\n        const oldSpan = dataDomain[1] - dataDomain[0];\n        const newSpan = scaleDomain[1] - scaleDomain[0];\n        if (oldSpan > 0 && newSpan > 0) {\n            categoryThickness = categoryThickness * oldSpan / newSpan;\n        }\n    }\n    // Prepare Tick Values for formatting\n    let tickValues;\n    if (isScalar && bestTickCount === 1 && !arrayIsEmpty(dataDomain)) {\n        tickValues = [dataDomain[0]];\n    }\n    else {\n        const minTickInterval = isScalar ? getMinTickValueInterval(formatString, dataType, is100Pct) : undefined;\n        tickValues = getRecommendedTickValues(bestTickCount, scale, dataType, isScalar, minTickInterval);\n    }\n    if (options.scaleType && options.scaleType === axisScale.log && isLogScaleAllowed) {\n        tickValues = tickValues.filter((d) => { return powerOfTen(d); });\n    }\n    const formatter = createFormatter(scaleDomain, dataDomain, dataType, isScalar, formatString, bestTickCount, tickValues, getValueFn, useTickIntervalForDisplayUnits, axisDisplayUnits, axisPrecision);\n    // sets default orientation only, cartesianChart will fix y2 for comboChart\n    // tickSize(pixelSpan) is used to create gridLines\n    const axisFunction = isVertical ? axisLeft : axisBottom;\n    const axis = axisFunction(scale)\n        .tickSize(6)\n        .ticks(bestTickCount)\n        .tickValues(tickValues);\n    let formattedTickValues = [];\n    if (metaDataColumn)\n        formattedTickValues = formatAxisTickValues(axis, tickValues, formatter, dataType, getValueFn);\n    let xLabelMaxWidth;\n    // Use category layout of labels if specified, otherwise use scalar layout of labels\n    if (!isScalar && categoryThickness) {\n        xLabelMaxWidth = Math.max(1, categoryThickness - TickLabelPadding * 2);\n    }\n    else {\n        // When there are 0 or 1 ticks, then xLabelMaxWidth = pixelSpan\n        xLabelMaxWidth = tickValues.length > 1 ? getScalarLabelMaxWidth(scale, tickValues) : pixelSpan;\n        xLabelMaxWidth = xLabelMaxWidth - ScalarTickLabelPadding * 2;\n    }\n    return {\n        scale: scale,\n        axis: axis,\n        formatter: formatter,\n        values: formattedTickValues,\n        axisType: dataType,\n        axisLabel: null,\n        isCategoryAxis: isCategoryAxis,\n        xLabelMaxWidth: xLabelMaxWidth,\n        categoryThickness: categoryThickness,\n        outerPadding: outerPadding,\n        usingDefaultDomain: scaleResult.usingDefaultDomain,\n        isLogScaleAllowed: isLogScaleAllowed,\n        dataDomain: dataDomain,\n    };\n}\n/**\n * Creates a D3 axis for stacked axis usage. `options.innerTickSize` and `options.outerTickSize` will be defaulted to 0 if not set.\n * `options.orientation` will be defaulted to \"bottom\" if not specified.\n */\nexport function createStackedAxis(options) {\n    const axis = options.axis;\n    const orientation = options.orient;\n    let axisFunction;\n    // TODO: possible breaking changes\n    switch (orientation) {\n        case AxisOrientation.bottom:\n            axisFunction = axisBottom;\n            break;\n        case AxisOrientation.top:\n            axisFunction = axisTop;\n            break;\n        case AxisOrientation.left:\n            axisFunction = axisLeft;\n            break;\n        case AxisOrientation.right:\n            axisFunction = axisRight;\n    }\n    return axisFunction(options.scale)\n        .tickSize(options.innerTickSize || 0, options.outerTickSize || 0)\n        .ticks(axis.tickValues())\n        .tickValues(axis.tickValues())\n        .tickFormat(options.tickFormat);\n}\nfunction getScalarLabelMaxWidth(scale, tickValues) {\n    // find the distance between two ticks. scalar ticks can be anywhere, such as:\n    // |---50----------100--------|\n    if (scale && !arrayIsEmpty(tickValues)) {\n        return Math.abs(scale(tickValues[1]) - scale(tickValues[0]));\n    }\n    return 1;\n}\nexport function createScale(options) {\n    const pixelSpan = options.pixelSpan, metaDataColumn = options.metaDataColumn, outerPadding = options.outerPadding || 0, isScalar = !!options.isScalar, isVertical = !!options.isVertical, forcedTickCount = options.forcedTickCount, categoryThickness = options.categoryThickness, shouldClamp = !!options.shouldClamp, maxTickCount = options.maxTickCount, disableNice = options.disableNice, disableNiceOnlyForScale = options.disableNiceOnlyForScale, innerPadding = options.innerPadding, useRangePoint = options.useRangePoints, dataType = getCategoryValueType(metaDataColumn, isScalar);\n    let dataDomain = options.dataDomain;\n    let maxTicks = isVertical ? getRecommendedNumberOfTicksForYAxis(pixelSpan) : getRecommendedNumberOfTicksForXAxis(pixelSpan);\n    if (maxTickCount &&\n        maxTicks > maxTickCount)\n        maxTicks = maxTickCount;\n    let scalarDomain = dataDomain ? dataDomain.slice() : null;\n    let bestTickCount = maxTicks;\n    if (disableNice) {\n        bestTickCount = null;\n    }\n    let scale;\n    let usingDefaultDomain = false;\n    if (dataDomain == null || (dataDomain.length === 2 && dataDomain[0] == null && dataDomain[1] == null) || (dataDomain.length !== 2 && isScalar)) {\n        usingDefaultDomain = true;\n        if (dataType.dateTime || !isOrdinal(dataType))\n            dataDomain = emptyDomain;\n        else // ordinal\n            dataDomain = [];\n        if (isOrdinal(dataType)) {\n            scale = createOrdinalScale(pixelSpan, dataDomain, categoryThickness ? outerPadding / categoryThickness : 0, innerPadding, useRangePoint);\n        }\n        else {\n            scale = createNumericalScale(options.scaleType, pixelSpan, dataDomain, dataType, outerPadding, bestTickCount);\n        }\n    }\n    else {\n        if (isScalar && dataDomain.length > 0) {\n            if (!disableNice) {\n                bestTickCount = forcedTickCount !== undefined\n                    ? (maxTicks !== 0 ? forcedTickCount : 0)\n                    : getBestNumberOfTicks(dataDomain[0], dataDomain[dataDomain.length - 1], [metaDataColumn], maxTicks, dataType.dateTime);\n            }\n            const normalizedRange = normalizeLinearDomain({ min: dataDomain[0], max: dataDomain[dataDomain.length - 1] });\n            scalarDomain = [normalizedRange.min, normalizedRange.max];\n        }\n        if (isScalar && dataType.numeric && !dataType.dateTime) {\n            if (scalarDomain && scalarDomain.length === 2 && scalarDomain[0] === 0 && scalarDomain[1] === 0 && options.zeroScalarDomain) {\n                scalarDomain[0] = options.zeroScalarDomain[0];\n                scalarDomain[1] = options.zeroScalarDomain[1];\n            }\n            let bestTickCountForNumericalScale = bestTickCount;\n            if (disableNiceOnlyForScale) {\n                bestTickCountForNumericalScale = null;\n            }\n            scale = createNumericalScale(options.scaleType, pixelSpan, scalarDomain, dataType, outerPadding, bestTickCountForNumericalScale, shouldClamp);\n        }\n        else if (isScalar && dataType.dateTime) {\n            // Use of a linear scale, instead of a D3.time.scale, is intentional since we want\n            // to control the formatting of the time values, since d3's implementation isn't\n            // in accordance to our design.\n            //     scalarDomain: should already be in long-int time (via category.values[0].getTime())\n            scale = createLinearScale(pixelSpan, scalarDomain, outerPadding, null, shouldClamp); // DO NOT PASS TICKCOUNT\n        }\n        else if (dataType.text || dataType.dateTime || dataType.numeric || dataType.bool) {\n            scale = createOrdinalScale(pixelSpan, scalarDomain, categoryThickness ? outerPadding / categoryThickness : 0, innerPadding, useRangePoint);\n            bestTickCount = maxTicks === 0 ? 0\n                : Math.min(scalarDomain.length, (pixelSpan - outerPadding * 2) / MinOrdinalRectThickness);\n        }\n    }\n    // vertical ordinal axis (e.g. categorical bar chart) does not need to reverse\n    if (isVertical && isScalar) {\n        scale.range(scale.range().reverse());\n    }\n    normalizeInfinityInScale(scale);\n    return {\n        scale: scale,\n        bestTickCount: bestTickCount,\n        usingDefaultDomain: usingDefaultDomain,\n    };\n}\nexport function normalizeInfinityInScale(scale) {\n    // When large values (eg Number.MAX_VALUE) are involved, a call to scale.nice occasionally\n    // results in infinite values being included in the domain. To correct for that, we need to\n    // re-normalize the domain now to not include infinities.\n    const scaledDomain = scale.domain();\n    for (let i = 0, len = scaledDomain.length; i < len; ++i) {\n        if (scaledDomain[i] === Number.POSITIVE_INFINITY) {\n            scaledDomain[i] = Number.MAX_VALUE;\n        }\n        else if (scaledDomain[i] === Number.NEGATIVE_INFINITY) {\n            scaledDomain[i] = -Number.MAX_VALUE;\n        }\n    }\n    scale.domain(scaledDomain);\n}\nexport function createFormatter(scaleDomain, dataDomain, dataType, isScalar, formatString, bestTickCount, tickValues, getValueFn, useTickIntervalForDisplayUnits = false, axisDisplayUnits, axisPrecision) {\n    let formatter;\n    if (dataType.dateTime) {\n        if (isScalar) {\n            let value = new Date(scaleDomain[0]);\n            let value2 = new Date(scaleDomain[1]);\n            // datetime with only one value needs to pass the same value\n            // (from the original dataDomain value, not the adjusted scaleDomain)\n            // so formatting works correctly.\n            if (bestTickCount === 1)\n                value = value2 = new Date(dataDomain[0]);\n            // this will ignore the formatString and create one based on the smallest non-zero portion of the values supplied.\n            formatter = valueFormatter.create({\n                format: formatString,\n                value: value,\n                value2: value2,\n                tickCount: bestTickCount,\n            });\n        }\n        else {\n            // Use the model formatString for ordinal datetime\n            formatter = valueFormatter.createDefaultFormatter(formatString, true);\n        }\n    }\n    else {\n        if (useTickIntervalForDisplayUnits && isScalar && tickValues.length > 1) {\n            const value1 = axisDisplayUnits ? axisDisplayUnits : tickValues[1] - tickValues[0];\n            const options = {\n                format: formatString,\n                value: value1,\n                value2: 0,\n                allowFormatBeautification: true,\n            };\n            if (axisPrecision)\n                options.precision = axisPrecision;\n            else\n                options.precision = calculateAxisPrecision(tickValues[0], tickValues[1], axisDisplayUnits, formatString);\n            formatter = valueFormatter.create(options);\n        }\n        else {\n            // do not use display units, just the basic value formatter\n            // datetime is handled above, so we are ordinal and either boolean, numeric, or text.\n            formatter = valueFormatter.createDefaultFormatter(formatString, true);\n        }\n    }\n    return formatter;\n}\n// returns # of decimal places necessary to distinguish between tick mark values\nexport function calculateAxisPrecision(tickValue0, tickValue1, axisDisplayUnits, formatString) {\n    if (!axisDisplayUnits) {\n        const displayUnitSystem = valueFormatter.createDisplayUnitSystem();\n        displayUnitSystem.update(tickValue1 - tickValue0);\n        axisDisplayUnits = displayUnitSystem.displayUnit && displayUnitSystem.displayUnit.value || 1;\n    }\n    let value0 = (tickValue0 || 0) / axisDisplayUnits;\n    let value1 = (tickValue1 || 0) / axisDisplayUnits;\n    if (formatString) {\n        const partsPerScale = numberFormat.getCustomFormatMetadata(formatString, false, false, true).partsPerScale;\n        value0 *= partsPerScale;\n        value1 *= partsPerScale;\n    }\n    return Math.max(calculateAxisPrecisionForValue(value0), calculateAxisPrecisionForValue(value1));\n}\nfunction calculateAxisPrecisionForValue(value) {\n    if (value === 0)\n        return 0;\n    if (value < 0)\n        value = -value;\n    // calculate place of of the most significant decimal digit.\n    // 1 means tens digit\n    // 0 means the ones digit\n    // -1 means tenths digit\n    const mostSignificantDigit = Math.floor(Double.log10(value));\n    // rounding in various calculations can introduce extraneous amounts of precision in the number\n    // no need in an axis label to allow more than this number of digits as the *difference* between\n    // ticks\n    const MaxDigits = 5;\n    if (mostSignificantDigit >= 0) {\n        // value has an integer part but may also have a fraction part. get the number of significant\n        // digits in the integer part then see how many that leaves us for the fractional part\n        const integerSignificantDigits = mostSignificantDigit + 1;\n        const maxFractionDigits = MaxDigits - integerSignificantDigits;\n        if (maxFractionDigits <= 0) {\n            // the value's integer part has at least MaxDigits of precision\n            // so there aren't any left for the fractional part\n            return 0;\n        }\n        return numberOfDecimalPlaces(value, maxFractionDigits);\n    }\n    else {\n        // the interval has no integer part - it is a pure decimal fraction. we want the number\n        // of decimal places we have to allow so the precision doesn't exceed MaxDigits.\n        // knowing where there most significant digit is in the fraction, we can scale\n        // the number to the range [0.1, 1)\n        const rescaledValue = value / Double.pow10(mostSignificantDigit + 1);\n        // get the actual number of significant digits respecting the maximum\n        const fractionSignificantDigits = numberOfDecimalPlaces(rescaledValue, MaxDigits);\n        // this is the number of zeroes that are required due to the true scale of the decimal fraction\n        const fractionScaleDigits = -mostSignificantDigit - 1;\n        // number of decimal places is the number of zeros plus the limited number of significant digits\n        return fractionScaleDigits + fractionSignificantDigits;\n    }\n}\n// if we're limiting the decimal places to maxDecimalPlaces, how many decimal places do\n// we actually need to avoid trailing zeroes? for example, if the value is 1.500001 and\n// we want a maximum of three decimal places, the number rounded to three places is 1.500\n// so only one decimal place is necessary.\nfunction numberOfDecimalPlaces(value, maxDecimalPlaces) {\n    const formattedValue = value.toFixed(maxDecimalPlaces);\n    const decimalPoint = formattedValue.indexOf(\".\");\n    if (decimalPoint !== -1) {\n        for (let i = formattedValue.length; i-- > decimalPoint;) {\n            if (formattedValue[i] !== \"0\") {\n                return i - decimalPoint;\n            }\n        }\n    }\n    return 0;\n}\n/**\n * Format the linear tick labels or the category labels.\n */\nfunction formatAxisTickValues(axis, tickValues, formatter, dataType, getValueFn) {\n    let formattedTickValues = [];\n    if (!getValueFn)\n        getValueFn = data => data;\n    if (formatter) {\n        axis.tickFormat(d => formatter.format(getValueFn(d, dataType)));\n        formattedTickValues = tickValues.map(d => formatter.format(getValueFn(d, dataType)));\n    }\n    else {\n        formattedTickValues = tickValues.map((d) => getValueFn(d, dataType));\n    }\n    return formattedTickValues;\n}\nexport function getMinTickValueInterval(formatString, columnType, is100Pct) {\n    const isCustomFormat = formatString && !numberFormat.isStandardFormat(formatString);\n    if (isCustomFormat) {\n        let precision = numberFormat.getCustomFormatMetadata(formatString, true /*calculatePrecision*/).precision;\n        if (formatString.indexOf(\"%\") > -1)\n            precision += 2; // percent values are multiplied by 100 during formatting\n        return Math.pow(10, -precision);\n    }\n    else if (is100Pct) {\n        return 0.01;\n    }\n    else if (columnType.integer) {\n        return 1;\n    }\n    return 0;\n}\nfunction createScalarDomain(data, userMin, userMax, axisType, ensureDomain) {\n    if (data.length === 0) {\n        return null;\n    }\n    const defaultMinX = min(data, (kv) => { return min(kv.data, d => { return d && d.categoryValue; }); });\n    const defaultMaxX = max(data, (kv) => { return max(kv.data, d => { return d && d.categoryValue; }); });\n    return combineDomain([userMin, userMax], [defaultMinX, defaultMaxX], ensureDomain);\n}\n/**\n * Creates a [min,max] from your Cartiesian data values.\n *\n * @param data The series array of CartesianDataPoints.\n * @param includeZero Columns and bars includeZero, line and scatter do not.\n */\nexport function createValueDomain(data, includeZero) {\n    if (data.length === 0)\n        return null;\n    const minY = min(data, (kv) => { return min(kv.data, d => { return d && d.value; }); });\n    const maxY = max(data, (kv) => { return max(kv.data, d => { return d && d.value; }); });\n    if (includeZero) {\n        return [Math.min(minY, 0), Math.max(maxY, 0)];\n    }\n    return [minY, maxY];\n}\nfunction createOrdinalDomain(data) {\n    if (arrayIsEmpty(data)) {\n        return [];\n    }\n    // each series shares the same categories for oridinal axes (even if a series has some nulls)\n    const domain = [];\n    const firstSeries = data[0];\n    for (const dp of firstSeries.data) {\n        if (!dp.highlight) {\n            domain.push(dp.categoryIndex);\n        }\n    }\n    return domain;\n}\nimport * as LabelLayoutStrategy from \"./labelLayoutStrategy\";\nexport { LabelLayoutStrategy };\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\nexport function createPointScale(pixelSpan, dataDomain, outerPaddingRatio = 0, innerPaddingRatio = 0.2, useRangePoints = false) {\n    return scalePoint()\n        .range([0, pixelSpan])\n        .padding(outerPaddingRatio)\n        /* Avoid using rangeRoundBands here as it is adding some extra padding to the axis*/\n        .domain(dataDomain);\n}\nexport function createOrdinalScale(pixelSpan, dataDomain, outerPaddingRatio = 0, innerPaddingRatio = 0.2, useRangePoints = false) {\n    if (useRangePoints) {\n        return scalePoint()\n            .rangeRound([0, pixelSpan])\n            .padding(innerPaddingRatio)\n            /* Avoid using rangeRoundBands here as it is adding some extra padding to the axis*/\n            .domain(dataDomain);\n    }\n    return scaleBand()\n        .range([0, pixelSpan])\n        .paddingInner(innerPaddingRatio)\n        .paddingOuter(outerPaddingRatio)\n        /* Avoid using rangeRoundBands here as it is adding some extra padding to the axis*/\n        .domain(dataDomain);\n}\nexport function isLogScalePossible(domain, axisType) {\n    if (domain == null) {\n        return false;\n    }\n    if (isDateTime(axisType)) {\n        return false;\n    }\n    return (domain[0] > 0 && domain[1] > 0) || (domain[0] < 0 && domain[1] < 0); // doman must exclude 0\n}\n// this function can return different scales e.g. log, linear\n// NOTE: export only for testing, do not access directly\nexport function createNumericalScale(axisScaleType, pixelSpan, dataDomain, dataType, outerPadding = 0, niceCount, shouldClamp) {\n    if (axisScaleType === axisScale.log && isLogScalePossible(dataDomain, dataType)) {\n        return createLogScale(pixelSpan, dataDomain, outerPadding, niceCount);\n    }\n    return createLinearScale(pixelSpan, dataDomain, outerPadding, niceCount, shouldClamp);\n}\nfunction createLogScale(pixelSpan, dataDomain, outerPadding = 0, niceCount) {\n    const logScale = scaleLog()\n        .range([outerPadding, pixelSpan - outerPadding])\n        .domain([dataDomain[0], dataDomain[1]])\n        .clamp(true);\n    if (niceCount) {\n        logScale.nice();\n    }\n    return logScale;\n}\n// NOTE: export only for testing, do not access directly\nexport function createLinearScale(pixelSpan, dataDomain, outerPadding = 0, niceCount, shouldClamp) {\n    const linearScale = scaleLinear()\n        .range([outerPadding, pixelSpan - outerPadding])\n        .domain([dataDomain[0], dataDomain[1]])\n        .clamp(shouldClamp);\n    // .nice(undefined) still modifies the scale boundaries, and for datetime this messes things up.\n    // we use millisecond ticks since epoch for datetime, so we don't want any \"nice\" with numbers like 17398203392.\n    if (niceCount) {\n        linearScale.nice(niceCount);\n    }\n    return linearScale;\n}\nexport function getRangeForColumn(sizeColumn) {\n    const result = {};\n    if (sizeColumn) {\n        result.min = (sizeColumn.min == null\n            ? sizeColumn.minLocal == null ? min(sizeColumn.values) : sizeColumn.minLocal\n            : sizeColumn.min);\n        result.max = (sizeColumn.max == null\n            ? sizeColumn.maxLocal == null ? max(sizeColumn.values) : sizeColumn.maxLocal\n            : sizeColumn.max);\n    }\n    return result;\n}\n/**\n * Set customized domain, but don't change when nothing is set\n */\nexport function applyCustomizedDomain(customizedDomain, forcedDomain) {\n    let domain = [undefined, undefined];\n    if (forcedDomain && forcedDomain.length === 2) {\n        domain = [forcedDomain[0], forcedDomain[1]];\n    }\n    if (customizedDomain && customizedDomain.length === 2) {\n        if (customizedDomain[0] != null) {\n            domain[0] = customizedDomain[0];\n        }\n        if (customizedDomain[1] != null) {\n            domain[1] = customizedDomain[1];\n        }\n    }\n    if (domain[0] == null && domain[1] == null) {\n        return forcedDomain; // return untouched object\n    }\n    // do extra check to see if the user input was valid with the merged axis values.\n    if (domain[0] != null && domain[1] != null) {\n        if (domain[0] > domain[1]) {\n            return forcedDomain;\n        }\n    }\n    return domain;\n}\n/**\n * Combine the forced domain with the actual domain if one of the values was set.\n * The forcedDomain is in 1st priority. Extends the domain if the any reference point requires it.\n */\nexport function combineDomain(forcedDomain, domain, ensureDomain) {\n    let combinedDomain = domain ? [domain[0], domain[1]] : [];\n    if (ensureDomain) {\n        if (combinedDomain[0] == null || ensureDomain.min < combinedDomain[0])\n            combinedDomain[0] = ensureDomain.min;\n        if (combinedDomain[1] == null || ensureDomain.max > combinedDomain[1])\n            combinedDomain[1] = ensureDomain.max;\n    }\n    const domainBeforeForced = [combinedDomain[0], combinedDomain[1]];\n    if (forcedDomain && forcedDomain.length === 2) {\n        if (forcedDomain[0] != null) {\n            combinedDomain[0] = forcedDomain[0];\n        }\n        if (forcedDomain[1] != null) {\n            combinedDomain[1] = forcedDomain[1];\n        }\n        if (combinedDomain[0] > combinedDomain[1]) {\n            combinedDomain = domainBeforeForced; // this is invalid, so take the original domain considering the values and the reference line\n        }\n    }\n    return combinedDomain;\n}\nexport function createAxisLabel(properties, label, unitType, y2 = false) {\n    const propertyName = y2 ? \"secAxisStyle\" : \"axisStyle\";\n    if (!properties || !properties[propertyName]) {\n        return label;\n    }\n    let modifiedLabel;\n    if (properties[propertyName] === axisStyle.showBoth) {\n        modifiedLabel = label + \" (\" + unitType + \")\";\n    }\n    else if (properties[propertyName] === axisStyle.showUnitOnly) {\n        modifiedLabel = unitType;\n    }\n    else {\n        modifiedLabel = label;\n    }\n    return modifiedLabel;\n}\nexport function scaleShouldClamp(combinedDomain, domain) {\n    if (!combinedDomain || !domain || combinedDomain.length < 2 || domain.length < 2) {\n        return false;\n    }\n    // when the start or end is different, clamp it\n    return combinedDomain[0] !== domain[0] || combinedDomain[1] !== domain[1];\n}\nexport function normalizeNonFiniteNumber(value) {\n    if (isNaN(value)) {\n        return null;\n    }\n    else if (value === Number.POSITIVE_INFINITY) {\n        return Number.MAX_VALUE;\n    }\n    else if (value === Number.NEGATIVE_INFINITY) {\n        return -Number.MAX_VALUE;\n    }\n    return value;\n}\n/**\n * Indicates whether the number is power of 10.\n */\nexport function powerOfTen(d) {\n    const value = Math.abs(d);\n    // formula log2(Y)/log2(10) = log10(Y)\n    // because double issues this won't return exact value\n    // we need to ceil it to nearest number.\n    let log10 = Math.log(value) / Math.LN10;\n    log10 = Math.ceil(log10 - 1e-12);\n    return value / Math.pow(10, log10) === 1;\n}\nfunction arrayIsEmpty(array) {\n    return !(array && array.length);\n}\n//# sourceMappingURL=axis.js.map","// powerbi.extensibility.utils.type\nimport { pixelConverter as PixelConverter } from \"powerbi-visuals-utils-typeutils\";\n// powerbi.extensibility.utils.formatting\nimport * as formatting from \"powerbi-visuals-utils-formattingutils\";\nvar font = formatting.font;\nvar numberFormat = formatting.formattingService.numberFormat;\nvar formattingService = formatting.formattingService.formattingService;\nvar textMeasurementService = formatting.textMeasurementService;\nvar valueFormatter = formatting.valueFormatter;\nvar DisplayUnitSystemType = formatting.displayUnitSystemType.DisplayUnitSystemType;\n// powerbi.extensibility.utils.svg\nimport * as svg from \"powerbi-visuals-utils-svgutils\";\nvar createClassAndSelector = svg.CssConstants.createClassAndSelector;\nimport * as dataLabelInterfaces from \"./dataLabelInterfaces\";\nimport DataLabelManager from \"./dataLabelManager\";\nexport const maxLabelWidth = 50;\nexport const defaultLabelDensity = \"50\";\nexport const DefaultDy = \"-0.15em\";\nexport const DefaultFontSizeInPt = 9;\nexport const StandardFontFamily = font.Family.regular.css;\nexport const LabelTextProperties = {\n    fontFamily: font.Family.regularSecondary.css,\n    fontSize: PixelConverter.fromPoint(DefaultFontSizeInPt),\n    fontWeight: \"normal\",\n};\nexport const defaultLabelColor = \"#777777\";\nexport const defaultInsideLabelColor = \"#ffffff\";\nexport const hundredPercentFormat = \"0.00 %;-0.00 %;0.00 %\";\nexport const defaultLabelPrecision = undefined;\nconst defaultCountLabelPrecision = 0;\nconst labelGraphicsContextClass = createClassAndSelector(\"labels\");\nconst linesGraphicsContextClass = createClassAndSelector(\"lines\");\nconst labelsClass = createClassAndSelector(\"data-labels\");\nconst lineClass = createClassAndSelector(\"line-label\");\nconst DimmedOpacity = 0.4;\nconst DefaultOpacity = 1.0;\nfunction getFillOpacity(selected, highlight, hasSelection, hasPartialHighlights) {\n    if ((hasPartialHighlights && !highlight) || (hasSelection && !selected)) {\n        return DimmedOpacity;\n    }\n    return DefaultOpacity;\n}\nexport function updateLabelSettingsFromLabelsObject(labelsObj, labelSettings) {\n    if (labelsObj) {\n        if (labelsObj.show !== undefined) {\n            labelSettings.show = labelsObj.show;\n        }\n        if (labelsObj.showSeries !== undefined) {\n            labelSettings.show = labelsObj.showSeries;\n        }\n        if (labelsObj.color !== undefined) {\n            labelSettings.labelColor = labelsObj.color.solid.color;\n        }\n        if (labelsObj.labelDisplayUnits !== undefined) {\n            labelSettings.displayUnits = labelsObj.labelDisplayUnits;\n        }\n        if (labelsObj.labelPrecision !== undefined) {\n            labelSettings.precision = (labelsObj.labelPrecision >= 0)\n                ? labelsObj.labelPrecision\n                : defaultLabelPrecision;\n        }\n        if (labelsObj.fontSize !== undefined) {\n            labelSettings.fontSize = labelsObj.fontSize;\n        }\n        if (labelsObj.showAll !== undefined) {\n            labelSettings.showLabelPerSeries = labelsObj.showAll;\n        }\n        if (labelsObj.labelStyle !== undefined) {\n            labelSettings.labelStyle = labelsObj.labelStyle;\n        }\n        if (labelsObj.labelPosition) {\n            labelSettings.position = labelsObj.labelPosition;\n        }\n    }\n}\nexport function getDefaultLabelSettings(show = false, labelColor, fontSize) {\n    return {\n        show: show,\n        position: dataLabelInterfaces.PointLabelPosition.Above,\n        displayUnits: 0,\n        precision: defaultLabelPrecision,\n        labelColor: labelColor || defaultLabelColor,\n        fontSize: fontSize || DefaultFontSizeInPt,\n    };\n}\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\nexport function getDefaultColumnLabelSettings(isLabelPositionInside) {\n    const labelSettings = getDefaultLabelSettings(false, undefined);\n    labelSettings.position = null;\n    labelSettings.labelColor = undefined;\n    return labelSettings;\n}\nexport function getDefaultPointLabelSettings() {\n    return {\n        show: false,\n        position: dataLabelInterfaces.PointLabelPosition.Above,\n        displayUnits: 0,\n        precision: defaultLabelPrecision,\n        labelColor: defaultLabelColor,\n        fontSize: DefaultFontSizeInPt,\n    };\n}\nexport function getLabelPrecision(precision, format) {\n    if (precision !== defaultLabelPrecision) {\n        return precision;\n    }\n    if (format === \"g\" || format === \"G\") {\n        return;\n    }\n    if (format) {\n        // Calculate precision from positive format by default\n        const positiveFormat = numberFormat.getComponents(format).positive, formatMetadata = numberFormat.getCustomFormatMetadata(positiveFormat, true /*calculatePrecision*/);\n        if (formatMetadata.hasDots) {\n            return formatMetadata.precision;\n        }\n    }\n    // For count fields we do not want a precision by default\n    return defaultCountLabelPrecision;\n}\nexport function drawDefaultLabelsForDataPointChart(data, context, layout, viewport, isAnimator = false, animationDuration, hasSelection, hideCollidedLabels = true) {\n    // Hide and reposition labels that overlap\n    const dataLabelManager = new DataLabelManager();\n    const filteredData = dataLabelManager.hideCollidedLabels(viewport, data, layout, false, hideCollidedLabels);\n    const hasAnimation = isAnimator && !!animationDuration;\n    let selectedLabels = selectLabels(filteredData, context, false, hasAnimation, animationDuration);\n    if (!selectedLabels) {\n        return;\n    }\n    if (hasAnimation) {\n        selectedLabels\n            .text((d) => d.labeltext)\n            .transition(\"\")\n            .duration(animationDuration)\n            // .style(layout.style as any)\n            .style(\"opacity\", (hasSelection ? d => getFillOpacity(d.selected, false, hasSelection, false) : 1))\n            .attr(\"x\", (d) => d.labelX)\n            .attr(\"y\", (d) => d.labelY);\n        layout && layout.style && Object.keys(layout.style).forEach(style => selectedLabels = selectedLabels.style(style, layout.style[style]));\n    }\n    else {\n        selectedLabels\n            .attr(\"x\", (d) => d.labelX)\n            .attr(\"y\", (d) => d.labelY)\n            .text((d) => d.labeltext)\n            .style(layout.style);\n        layout && layout.style && Object.keys(layout.style).forEach(style => selectedLabels = selectedLabels.style(style, layout.style[style]));\n    }\n    return selectedLabels;\n}\nfunction selectLabels(filteredData, context, isDonut = false, forAnimation = false, animationDuration) {\n    // Check for a case where resizing leaves no labels - then we need to remove the labels \"g\"\n    if (filteredData.length === 0) {\n        cleanDataLabels(context, true);\n        return null;\n    }\n    if (context.select(labelGraphicsContextClass.selectorName).empty()) {\n        context.append(\"g\").classed(labelGraphicsContextClass.className, true);\n    }\n    // line chart ViewModel has a special \"key\" property for point identification since the \"identity\" field is set to the series identity\n    const hasKey = filteredData[0].key != null;\n    const hasDataPointIdentity = filteredData[0].identity != null;\n    const getIdentifier = hasKey ?\n        (d) => d.key\n        : hasDataPointIdentity ?\n            d => d.identity.getKey()\n            : undefined;\n    const labels = isDonut ?\n        context.select(labelGraphicsContextClass.selectorName).selectAll(labelsClass.selectorName).data(filteredData, (d) => d.data.identity.getKey())\n        : getIdentifier != null ?\n            context.select(labelGraphicsContextClass.selectorName).selectAll(labelsClass.selectorName).data(filteredData, getIdentifier)\n            : context.select(labelGraphicsContextClass.selectorName).selectAll(labelsClass.selectorName).data(filteredData);\n    if (forAnimation) {\n        labels\n            .exit()\n            .transition()\n            .duration(animationDuration)\n            .style(\"opacity\", 0) // fade out labels that are removed\n            .remove();\n    }\n    else {\n        labels.exit().remove();\n    }\n    const allLabels = labels.enter()\n        .append(\"text\")\n        .classed(labelsClass.className, true)\n        .merge(labels);\n    if (forAnimation) {\n        allLabels.style(\"opacity\", 0);\n    }\n    return allLabels;\n}\nexport function cleanDataLabels(context, removeLines = false) {\n    const empty = [], labels = context.selectAll(labelsClass.selectorName).data(empty);\n    labels\n        .exit()\n        .remove();\n    context\n        .selectAll(labelGraphicsContextClass.selectorName)\n        .remove();\n    if (removeLines) {\n        const lines = context\n            .selectAll(lineClass.selectorName)\n            .data(empty);\n        lines\n            .exit()\n            .remove();\n        context\n            .selectAll(linesGraphicsContextClass.selectorName)\n            .remove();\n    }\n}\nexport function setHighlightedLabelsOpacity(context, hasSelection, hasHighlights) {\n    context\n        .selectAll(labelsClass.selectorName)\n        .style(\"fill-opacity\", (d) => {\n        const labelOpacity = getFillOpacity(d.selected, d.highlight, !d.highlight && hasSelection, !d.selected && hasHighlights) < 1 ? 0 : 1;\n        return labelOpacity;\n    });\n}\nexport function getLabelFormattedText(options) {\n    const properties = {\n        text: options.formatter\n            ? options.formatter.format(options.label)\n            : formattingService.formatValue(options.label, options.format),\n        fontFamily: LabelTextProperties.fontFamily,\n        fontSize: PixelConverter.fromPoint(options.fontSize),\n        fontWeight: LabelTextProperties.fontWeight,\n    };\n    return textMeasurementService.getTailoredTextOrDefault(properties, options.maxWidth\n        ? options.maxWidth\n        : maxLabelWidth);\n}\nexport function enumerateDataLabels(options) {\n    if (!options.dataLabelsSettings) {\n        return;\n    }\n    const instance = {\n        objectName: \"labels\",\n        selector: options.selector,\n        properties: {},\n    };\n    if (options.show && options.selector) {\n        instance.properties[\"showSeries\"] = options.dataLabelsSettings.show;\n    }\n    else if (options.show) {\n        instance.properties[\"show\"] = options.dataLabelsSettings.show;\n    }\n    instance.properties[\"color\"] = options.dataLabelsSettings.labelColor || defaultLabelColor;\n    if (options.displayUnits) {\n        instance.properties[\"labelDisplayUnits\"] = options.dataLabelsSettings.displayUnits;\n    }\n    if (options.precision) {\n        const precision = options.dataLabelsSettings.precision;\n        instance.properties[\"labelPrecision\"] = precision === defaultLabelPrecision ? null : precision;\n    }\n    if (options.position) {\n        instance.properties[\"labelPosition\"] = options.dataLabelsSettings.position;\n        if (options.positionObject) {\n            instance.validValues = { \"labelPosition\": options.positionObject };\n        }\n    }\n    if (options.labelStyle) {\n        instance.properties[\"labelStyle\"] = options.dataLabelsSettings.labelStyle;\n    }\n    if (options.fontSize) {\n        instance.properties[\"fontSize\"] = options.dataLabelsSettings.fontSize;\n    }\n    if (options.labelDensity) {\n        const lineChartSettings = options.dataLabelsSettings;\n        if (lineChartSettings) {\n            instance.properties[\"labelDensity\"] = lineChartSettings.labelDensity;\n        }\n    }\n    // Keep show all as the last property of the instance.\n    if (options.showAll) {\n        instance.properties[\"showAll\"] = options.dataLabelsSettings.showLabelPerSeries;\n    }\n    options.instances.push(instance);\n    return instance;\n}\nexport function enumerateCategoryLabels(enumeration, dataLabelsSettings, withFill, isShowCategory = false, fontSize) {\n    const labelSettings = (dataLabelsSettings)\n        ? dataLabelsSettings\n        : getDefaultPointLabelSettings();\n    const instance = {\n        objectName: \"categoryLabels\",\n        selector: null,\n        properties: {\n            show: isShowCategory\n                ? labelSettings.showCategory\n                : labelSettings.show,\n            fontSize: dataLabelsSettings ? dataLabelsSettings.fontSize : DefaultFontSizeInPt,\n        },\n    };\n    if (withFill) {\n        instance.properties[\"color\"] = labelSettings.categoryLabelColor\n            ? labelSettings.categoryLabelColor\n            : labelSettings.labelColor;\n    }\n    if (fontSize) {\n        instance.properties[\"fontSize\"] = fontSize;\n    }\n    enumeration.instances.push(instance);\n}\nexport function createColumnFormatterCacheManager() {\n    return {\n        cache: { defaultFormatter: null },\n        getOrCreate(formatString, labelSetting, value2) {\n            if (formatString) {\n                const cacheKeyObject = {\n                    formatString: formatString,\n                    displayUnits: labelSetting.displayUnits,\n                    precision: getLabelPrecision(labelSetting.precision, formatString),\n                    value2: value2\n                };\n                const cacheKey = JSON.stringify(cacheKeyObject);\n                if (!this.cache[cacheKey]) {\n                    this.cache[cacheKey] = valueFormatter.create(getOptionsForLabelFormatter(labelSetting, formatString, value2, cacheKeyObject.precision));\n                }\n                return this.cache[cacheKey];\n            }\n            if (!this.cache.defaultFormatter) {\n                this.cache.defaultFormatter = valueFormatter.create(getOptionsForLabelFormatter(labelSetting, formatString, value2, labelSetting.precision));\n            }\n            return this.cache.defaultFormatter;\n        }\n    };\n}\nexport function getOptionsForLabelFormatter(labelSetting, formatString, value2, precision) {\n    return {\n        displayUnitSystemType: DisplayUnitSystemType.DataLabels,\n        format: formatString,\n        precision: precision,\n        value: labelSetting.displayUnits,\n        value2: value2,\n        allowFormatBeautification: true,\n    };\n}\nexport function isTextWidthOverflows(textWidth, maxTextWidth) {\n    return textWidth > maxTextWidth;\n}\nexport function isTextHeightOverflows(textHeight, innerChordLength) {\n    return textHeight > innerChordLength;\n}\n//# sourceMappingURL=dataLabelUtils.js.map","import { LegendPosition } from \"./legendInterfaces\";\nimport { SVGLegend } from \"./svgLegend\";\nexport function createLegend(legendParentElement, isScrollable = false, legendPosition = LegendPosition.Top) {\n    return new SVGLegend(legendParentElement, legendPosition, isScrollable);\n}\nexport function isLeft(orientation) {\n    switch (orientation) {\n        case LegendPosition.Left:\n        case LegendPosition.LeftCenter:\n            return true;\n        default:\n            return false;\n    }\n}\nexport function isTop(orientation) {\n    switch (orientation) {\n        case LegendPosition.Top:\n        case LegendPosition.TopCenter:\n            return true;\n        default:\n            return false;\n    }\n}\nexport function positionChartArea(chartArea, legend) {\n    const legendMargins = legend.getMargins(), legendOrientation = legend.getOrientation();\n    chartArea.style(\"margin-left\", isLeft(legendOrientation)\n        ? legendMargins.width + \"px\"\n        : null);\n    chartArea.style(\"margin-top\", isTop(legendOrientation)\n        ? legendMargins.height + \"px\"\n        : null);\n}\n//# sourceMappingURL=legend.js.map","/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\nexport var LegendPosition;\n(function (LegendPosition) {\n    LegendPosition[LegendPosition[\"Top\"] = 0] = \"Top\";\n    LegendPosition[LegendPosition[\"Bottom\"] = 1] = \"Bottom\";\n    LegendPosition[LegendPosition[\"Right\"] = 2] = \"Right\";\n    LegendPosition[LegendPosition[\"Left\"] = 3] = \"Left\";\n    LegendPosition[LegendPosition[\"None\"] = 4] = \"None\";\n    LegendPosition[LegendPosition[\"TopCenter\"] = 5] = \"TopCenter\";\n    LegendPosition[LegendPosition[\"BottomCenter\"] = 6] = \"BottomCenter\";\n    LegendPosition[LegendPosition[\"RightCenter\"] = 7] = \"RightCenter\";\n    LegendPosition[LegendPosition[\"LeftCenter\"] = 8] = \"LeftCenter\";\n})(LegendPosition || (LegendPosition = {}));\nexport var MarkerShape;\n(function (MarkerShape) {\n    MarkerShape[\"circle\"] = \"circle\";\n    MarkerShape[\"square\"] = \"square\";\n    MarkerShape[\"longDash\"] = \"longDash\";\n})(MarkerShape || (MarkerShape = {}));\nexport var LineStyle;\n(function (LineStyle) {\n    LineStyle[\"dashed\"] = \"dashed\";\n    LineStyle[\"solid\"] = \"solid\";\n    LineStyle[\"dotted\"] = \"dotted\";\n    LineStyle[\"dotdash\"] = \"dotdash\";\n    LineStyle[\"dashdot\"] = \"dashdot\";\n})(LineStyle || (LineStyle = {}));\nexport const legendProps = {\n    show: \"show\",\n    position: \"position\",\n    titleText: \"titleText\",\n    showTitle: \"showTitle\",\n    labelColor: \"labelColor\",\n    fontSize: \"fontSize\",\n};\n//# sourceMappingURL=legendInterfaces.js.map","import { MarkerShape } from \"./legendInterfaces\";\nexport const defaultSize = 5;\nexport const LegendIconLineTotalWidth = 31;\nconst circlePath = \"M 0 0 m -5 0 a 5 5 0 1 0 10 0 a 5 5 0 1 0 -10 0\";\nconst squarePath = \"M 0 0 m -5 -5 l 10 0 l 0 10 l -10 0 z\";\nconst longDashPath = \"M -\" + (LegendIconLineTotalWidth / 2) + \" 0 L \" + (LegendIconLineTotalWidth / 2) + \" 0\";\nconst shapeStroke = 0;\nconst thickStroke = 2;\nexport function getPath(shape) {\n    switch (shape) {\n        case MarkerShape.circle: {\n            return circlePath;\n        }\n        case MarkerShape.square: {\n            return squarePath;\n        }\n        case MarkerShape.longDash: {\n            return longDashPath;\n        }\n        default: {\n            return undefined;\n        }\n    }\n}\nexport function getStrokeWidth(shape) {\n    switch (shape) {\n        case MarkerShape.longDash: {\n            return thickStroke;\n        }\n        case MarkerShape.circle:\n        case MarkerShape.square:\n        default: {\n            return shapeStroke;\n        }\n    }\n}\n//# sourceMappingURL=markers.js.map","/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\nimport { select } from \"d3-selection\";\nimport { textMeasurementService } from \"powerbi-visuals-utils-formattingutils\";\nimport { pixelConverter as PixelConverter, prototype as Prototype } from \"powerbi-visuals-utils-typeutils\";\nimport { CssConstants, manipulation as svgManipulation } from \"powerbi-visuals-utils-svgutils\";\nimport { LegendPosition } from \"./legendInterfaces\";\nimport * as Markers from \"./markers\";\nimport { LineStyle, MarkerShape } from \"./legendInterfaces\";\nvar createClassAndSelector = CssConstants.createClassAndSelector;\nexport class SVGLegend {\n    constructor(element, legendPosition, isScrollable) {\n        this.legendDataStartIndex = 0;\n        this.arrowPosWindow = 1;\n        this.lastCalculatedWidth = 0;\n        this.visibleLegendWidth = 0;\n        this.visibleLegendHeight = 0;\n        this.legendFontSizeMarginDifference = 0;\n        this.legendFontSizeMarginValue = 0;\n        this.svg = select(element)\n            .append(\"svg\")\n            .style(\"position\", \"absolute\");\n        this.svg.style(\"display\", \"inherit\");\n        this.svg.classed(\"legend\", true);\n        this.group = this.svg\n            .append(\"g\")\n            .attr(\"id\", \"legendGroup\");\n        this.isScrollable = isScrollable;\n        this.element = element;\n        this.changeOrientation(legendPosition);\n        this.parentViewport = { height: 0, width: 0 };\n        this.calculateViewport();\n        this.updateLayout();\n    }\n    updateLayout() {\n        const legendViewport = this.viewport;\n        const orientation = this.orientation;\n        this.svg.attr(\"height\", legendViewport.height || (orientation === LegendPosition.None ? 0 : this.parentViewport.height));\n        this.svg.attr(\"width\", legendViewport.width || (orientation === LegendPosition.None ? 0 : this.parentViewport.width));\n        const isRight = orientation === LegendPosition.Right || orientation === LegendPosition.RightCenter, isBottom = orientation === LegendPosition.Bottom || orientation === LegendPosition.BottomCenter;\n        this.svg.style(\"margin-left\", isRight ? (this.parentViewport.width - legendViewport.width) + \"px\" : null);\n        this.svg.style(\"margin-top\", isBottom ? (this.parentViewport.height - legendViewport.height) + \"px\" : null);\n    }\n    calculateViewport() {\n        switch (this.orientation) {\n            case LegendPosition.Top:\n            case LegendPosition.Bottom:\n            case LegendPosition.TopCenter:\n            case LegendPosition.BottomCenter:\n                const pixelHeight = PixelConverter.fromPointToPixel(this.data && this.data.fontSize\n                    ? this.data.fontSize\n                    : SVGLegend.DefaultFontSizeInPt);\n                const fontHeightSize = SVGLegend.TopLegendHeight + (pixelHeight - SVGLegend.DefaultFontSizeInPt);\n                this.viewport = { height: fontHeightSize, width: 0 };\n                return;\n            case LegendPosition.Right:\n            case LegendPosition.Left:\n            case LegendPosition.RightCenter:\n            case LegendPosition.LeftCenter:\n                const width = this.lastCalculatedWidth\n                    ? this.lastCalculatedWidth\n                    : this.parentViewport.width * SVGLegend.LegendMaxWidthFactor;\n                this.viewport = { height: 0, width: width };\n                return;\n            case LegendPosition.None:\n                this.viewport = { height: 0, width: 0 };\n        }\n    }\n    getMargins() {\n        return this.viewport;\n    }\n    isVisible() {\n        return this.orientation !== LegendPosition.None;\n    }\n    changeOrientation(orientation) {\n        if (orientation) {\n            this.orientation = orientation;\n        }\n        else {\n            this.orientation = LegendPosition.Top;\n        }\n        this.svg.attr(\"orientation\", orientation);\n    }\n    getOrientation() {\n        return this.orientation;\n    }\n    drawLegend(data, viewport) {\n        // clone because we modify legend item label with ellipsis if it is truncated\n        const clonedData = Prototype.inherit(data), newDataPoints = [];\n        for (const dp of data.dataPoints) {\n            newDataPoints.push(Prototype.inherit(dp));\n        }\n        clonedData.dataPoints = newDataPoints;\n        this.setTooltipToLegendItems(clonedData);\n        this.drawLegendInternal(clonedData, viewport, true /* perform auto width */);\n    }\n    /* eslint-disable-next-line max-lines-per-function */\n    drawLegendInternal(data, viewport, autoWidth) {\n        this.parentViewport = viewport;\n        this.data = data;\n        if (data.dataPoints.length === 0) {\n            this.changeOrientation(LegendPosition.None);\n        }\n        if (this.getOrientation() === LegendPosition.None) {\n            data.dataPoints = [];\n        }\n        // Adding back the workaround for Legend Left/Right position for Map\n        const mapControls = this.element.getElementsByClassName(\"mapControl\");\n        if (mapControls.length > 0 && !this.isTopOrBottom(this.orientation)) {\n            for (let i = 0; i < mapControls.length; ++i) {\n                const element = mapControls[i];\n                element.style.display = \"inline-block\";\n            }\n        }\n        this.calculateViewport();\n        const layout = this.calculateLayout(data, autoWidth);\n        const titleLayout = layout.title;\n        const titleData = titleLayout ? [titleLayout] : [];\n        const group = this.group;\n        // transform the wrapping group if position is centered\n        if (this.isCentered(this.orientation)) {\n            let centerOffset = 0;\n            if (this.isTopOrBottom(this.orientation)) {\n                centerOffset = Math.max(0, (this.parentViewport.width - this.visibleLegendWidth) / 2);\n                group.attr(\"transform\", svgManipulation.translate(centerOffset, 0));\n            }\n            else {\n                centerOffset = Math.max((this.parentViewport.height - this.visibleLegendHeight) / 2);\n                group.attr(\"transform\", svgManipulation.translate(0, centerOffset));\n            }\n        }\n        else {\n            group.attr(\"transform\", null);\n        }\n        const legendTitle = group\n            .selectAll(SVGLegend.LegendTitle.selectorName);\n        const legendTitleData = legendTitle.data(titleData);\n        const enteredLegendTitle = legendTitleData\n            .enter()\n            .append(\"text\")\n            .classed(SVGLegend.LegendTitle.className, true);\n        legendTitleData\n            .merge(enteredLegendTitle)\n            .style(\"fill\", data.labelColor)\n            .style(\"font-size\", PixelConverter.fromPoint(data.fontSize))\n            .style(\"font-family\", data.fontFamily)\n            .text((d) => d.text)\n            .attr(\"x\", (d) => d.x)\n            .attr(\"y\", (d) => d.y)\n            .append(\"title\")\n            .text(data.title);\n        legendTitleData\n            .exit()\n            .remove();\n        const virtualizedDataPoints = data.dataPoints.slice(this.legendDataStartIndex, this.legendDataStartIndex + layout.numberOfItems);\n        const legendItems = group\n            .selectAll(SVGLegend.LegendItem.selectorName)\n            .data(virtualizedDataPoints, (d) => {\n            return d.identity.getKey() + (d.layerNumber != null ? d.layerNumber : \"\");\n        });\n        const itemsEnter = legendItems.enter()\n            .append(\"g\")\n            .classed(SVGLegend.LegendItem.className, true);\n        itemsEnter\n            .append(\"path\")\n            .classed(SVGLegend.LegendIcon.className, true);\n        itemsEnter\n            .append(\"text\")\n            .classed(SVGLegend.LegendText.className, true);\n        itemsEnter\n            .append(\"title\")\n            .text((d) => d.tooltip);\n        legendItems\n            .merge(itemsEnter)\n            .select(SVGLegend.LegendIcon.selectorName)\n            .attr(\"transform\", (dataPoint) => {\n            return svgManipulation.translateAndScale(dataPoint.glyphPosition.x, dataPoint.glyphPosition.y, this.getIconScale(dataPoint.markerShape));\n        })\n            .attr(\"d\", (dataPoint) => {\n            return Markers.getPath(dataPoint.markerShape || MarkerShape.circle);\n        })\n            .attr(\"stroke-width\", (dataPoint) => {\n            if (dataPoint.lineStyle) {\n                return 2;\n            }\n            return Markers.getStrokeWidth(dataPoint.markerShape || MarkerShape.circle);\n        })\n            .style(\"fill\", (dataPoint) => {\n            if (dataPoint.lineStyle) {\n                return null;\n            }\n            return dataPoint.color;\n        })\n            .style(\"stroke\", (dataPoint) => dataPoint.color)\n            .style(\"stroke-dasharray\", (dataPoint) => {\n            if (dataPoint.lineStyle) {\n                return SVGLegend.getStrokeDashArrayForLegend(dataPoint.lineStyle);\n            }\n            return null;\n        })\n            .style(\"stroke-linejoin\", \"round\");\n        legendItems\n            .merge(itemsEnter)\n            .select(\"title\")\n            .text((dataPoint) => dataPoint.tooltip);\n        const mergedLegendItems = legendItems.merge(itemsEnter);\n        mergedLegendItems\n            .select(SVGLegend.LegendText.selectorName)\n            .attr(\"x\", (dataPoint) => dataPoint.textPosition.x)\n            .attr(\"y\", (dataPoint) => dataPoint.textPosition.y)\n            .text((d) => d.label)\n            .style(\"fill\", data.labelColor)\n            .style(\"font-size\", PixelConverter.fromPoint(data.fontSize))\n            .style(\"font-family\", data.fontFamily);\n        legendItems\n            .exit()\n            .remove();\n        this.drawNavigationArrows(layout.navigationArrows);\n        this.updateLayout();\n    }\n    static getStrokeDashArrayForLegend(style) {\n        switch (style) {\n            case LineStyle.dashed: {\n                return \"7,5\";\n            }\n            case LineStyle.dotted: {\n                return \"2.5,3.1\";\n            }\n            case LineStyle.dotdash: {\n                return \"2.5,3.1,7,3.1\";\n            }\n            case LineStyle.dashdot: {\n                return \"7,3.1,2.5,3.1\";\n            }\n            case LineStyle.solid: {\n                return null;\n            }\n        }\n    }\n    normalizePosition(points) {\n        if (this.legendDataStartIndex >= points.length) {\n            this.legendDataStartIndex = points.length - 1;\n        }\n        if (this.legendDataStartIndex < 0) {\n            this.legendDataStartIndex = 0;\n        }\n    }\n    calculateTitleLayout(title) {\n        let width = 0;\n        const hasTitle = !!title;\n        if (hasTitle) {\n            const isHorizontal = this.isTopOrBottom(this.orientation);\n            const textProperties = SVGLegend.getTextProperties(title, this.data.fontSize, this.data.fontFamily);\n            let text = title;\n            width = textMeasurementService.measureSvgTextWidth(textProperties);\n            if (isHorizontal) {\n                const maxTitleWidth = this.parentViewport.width * SVGLegend.LegendMaxWidthFactor - SVGLegend.TitlePadding;\n                text = textMeasurementService.getTailoredTextOrDefault(textProperties, maxTitleWidth);\n                if (width > maxTitleWidth) {\n                    width = maxTitleWidth;\n                }\n                width += SVGLegend.TitlePadding;\n            }\n            else {\n                text = textMeasurementService.getTailoredTextOrDefault(textProperties, this.viewport.width);\n            }\n            return {\n                text,\n                width,\n                x: 0,\n                y: 0,\n                height: textMeasurementService.estimateSvgTextHeight(textProperties)\n            };\n        }\n        return null;\n    }\n    /** Performs layout offline for optimal perfomance */\n    calculateLayout(data, autoWidth) {\n        let dataPoints = data.dataPoints;\n        if (data.dataPoints.length === 0) {\n            return {\n                numberOfItems: 0,\n                title: null,\n                navigationArrows: []\n            };\n        }\n        this.legendFontSizeMarginValue = PixelConverter.fromPointToPixel(this.data && this.data.fontSize !== undefined ? this.data.fontSize : SVGLegend.DefaultFontSizeInPt);\n        this.legendFontSizeMarginDifference = (this.legendFontSizeMarginValue - SVGLegend.DefaultTextMargin);\n        this.normalizePosition(dataPoints);\n        if (this.legendDataStartIndex < dataPoints.length) {\n            dataPoints = dataPoints.slice(this.legendDataStartIndex);\n        }\n        const title = this.calculateTitleLayout(data.title);\n        let navArrows;\n        let numberOfItems;\n        if (this.isTopOrBottom(this.orientation)) {\n            navArrows = this.isScrollable ? this.calculateHorizontalNavigationArrowsLayout(title) : [];\n            numberOfItems = this.calculateHorizontalLayout(dataPoints, title, navArrows);\n        }\n        else {\n            navArrows = this.isScrollable ? this.calculateVerticalNavigationArrowsLayout(title) : [];\n            numberOfItems = this.calculateVerticalLayout(dataPoints, title, navArrows, autoWidth);\n        }\n        return {\n            numberOfItems,\n            title,\n            navigationArrows: navArrows\n        };\n    }\n    updateNavigationArrowLayout(navigationArrows, remainingDataLength, visibleDataLength) {\n        if (this.legendDataStartIndex === 0) {\n            navigationArrows.shift();\n        }\n        const lastWindow = this.arrowPosWindow;\n        this.arrowPosWindow = visibleDataLength;\n        if (navigationArrows && navigationArrows.length > 0 && this.arrowPosWindow === remainingDataLength) {\n            this.arrowPosWindow = lastWindow;\n            navigationArrows.length = navigationArrows.length - 1;\n        }\n    }\n    calculateHorizontalNavigationArrowsLayout(title) {\n        const height = SVGLegend.LegendArrowHeight;\n        const width = SVGLegend.LegendArrowWidth;\n        const translateY = (this.viewport.height / 2) - (height / 2);\n        const data = [];\n        const rightShift = title ? title.x + title.width : 0;\n        const arrowLeft = svgManipulation.createArrow(width, height, 180 /*angle*/);\n        const arrowRight = svgManipulation.createArrow(width, height, 0 /*angle*/);\n        data.push({\n            x: rightShift,\n            y: translateY,\n            path: arrowLeft.path,\n            rotateTransform: arrowLeft.transform,\n            dataType: 1 /* NavigationArrowType.Decrease */\n        });\n        data.push({\n            x: this.parentViewport.width - width,\n            y: translateY,\n            path: arrowRight.path,\n            rotateTransform: arrowRight.transform,\n            dataType: 0 /* NavigationArrowType.Increase */\n        });\n        return data;\n    }\n    calculateVerticalNavigationArrowsLayout(title) {\n        const height = SVGLegend.LegendArrowHeight;\n        const width = SVGLegend.LegendArrowWidth;\n        const verticalCenter = this.viewport.height / 2;\n        const data = [];\n        const rightShift = verticalCenter + height / 2;\n        const arrowTop = svgManipulation.createArrow(width, height, 270 /*angle*/);\n        const arrowBottom = svgManipulation.createArrow(width, height, 90 /*angle*/);\n        const titleHeight = title ? title.height : 0;\n        data.push({\n            x: rightShift,\n            y: width + titleHeight,\n            path: arrowTop.path,\n            rotateTransform: arrowTop.transform,\n            dataType: 1 /* NavigationArrowType.Decrease */\n        });\n        data.push({\n            x: rightShift,\n            y: this.parentViewport.height - height,\n            path: arrowBottom.path,\n            rotateTransform: arrowBottom.transform,\n            dataType: 0 /* NavigationArrowType.Increase */\n        });\n        return data;\n    }\n    /**\n     * Calculates the widths for each horizontal legend item.\n     */\n    static calculateHorizontalLegendItemsWidths(dataPoints, availableWidth, iconPadding, fontSize, fontFamily) {\n        const dataPointsLength = dataPoints.length;\n        // Set the maximum amount of space available to each item. They can use less, but can\"t go over this number.\n        let maxItemWidth = dataPointsLength > 0 ? availableWidth / dataPointsLength | 0 : 0;\n        let maxItemTextWidth = maxItemWidth - iconPadding;\n        // Makes sure the amount of space available to each item is at least SVGLegend.MaxTextLength wide.\n        // If you had many items and/or a narrow amount of available width, the availableTextWidthPerItem would be small, essentially making everything ellipsis.\n        // This prevents that from happening by giving each item at least SVGLegend.MaxTextLength of space.\n        if (maxItemTextWidth < SVGLegend.MaxTextLength) {\n            maxItemTextWidth = SVGLegend.MaxTextLength;\n            maxItemWidth = maxItemTextWidth + iconPadding;\n        }\n        // Make sure the availableWidthPerItem is less than the availableWidth. This lets the long text properly add ellipsis when we\"re displaying one item at a time.\n        if (maxItemWidth > availableWidth) {\n            maxItemWidth = availableWidth;\n            maxItemTextWidth = maxItemWidth - iconPadding;\n        }\n        let occupiedWidth = 0;\n        const legendItems = [];\n        // Add legend items until we can\"t fit any more (the last one doesn\"t fit) or we\"ve added all of them\n        for (const dataPoint of dataPoints) {\n            const textProperties = SVGLegend.getTextProperties(dataPoint.label, fontSize, fontFamily);\n            const itemTextWidth = textMeasurementService.measureSvgTextWidth(textProperties);\n            const desiredWidth = itemTextWidth + iconPadding;\n            const overMaxWidth = desiredWidth > maxItemWidth;\n            const actualWidth = overMaxWidth ? maxItemWidth : desiredWidth;\n            occupiedWidth += actualWidth;\n            if (occupiedWidth >= availableWidth) {\n                // Always add at least 1 element\n                if (legendItems.length === 0) {\n                    legendItems.push({\n                        dataPoint: dataPoint,\n                        textProperties: textProperties,\n                        desiredWidth: desiredWidth,\n                        desiredOverMaxWidth: true,\n                        width: desiredWidth\n                    });\n                    // Set the width to the amount of space we actually have\n                    occupiedWidth = availableWidth;\n                }\n                else {\n                    // Subtract the width from what was just added since it won\"t fit\n                    occupiedWidth -= actualWidth;\n                }\n                break;\n            }\n            legendItems.push({\n                dataPoint: dataPoint,\n                textProperties: textProperties,\n                desiredWidth: desiredWidth,\n                desiredOverMaxWidth: overMaxWidth,\n                width: desiredWidth\n            });\n        }\n        // If there are items at max width, evenly redistribute the extra space to them\n        const itemsOverMax = legendItems.filter((li) => li.desiredOverMaxWidth);\n        let numItemsOverMax = itemsOverMax.length;\n        if (numItemsOverMax > 0) {\n            let extraWidth = availableWidth - occupiedWidth;\n            for (const item of itemsOverMax) {\n                // Divvy up the extra space and add it to the max\n                // We need to do this calculation in every loop since the remainingWidth may not be changed by the same amount every time\n                const extraWidthPerItem = extraWidth / numItemsOverMax;\n                const newMaxItemWidth = maxItemWidth + extraWidthPerItem;\n                let usedExtraWidth;\n                if (item.desiredWidth <= newMaxItemWidth) {\n                    // If the item doesn\"t need all the extra space, it\"s not at max anymore\n                    item.desiredOverMaxWidth = false;\n                    usedExtraWidth = item.desiredWidth - maxItemWidth;\n                }\n                else {\n                    // Otherwise the item is taking up all the extra space so update the actual width to indicate that\n                    item.width = newMaxItemWidth;\n                    usedExtraWidth = newMaxItemWidth - maxItemWidth;\n                }\n                extraWidth -= usedExtraWidth;\n                numItemsOverMax--;\n            }\n        }\n        return legendItems;\n    }\n    calculateHorizontalLayout(dataPoints, title, navigationArrows) {\n        const fontSizeBiggerThanDefault = this.legendFontSizeMarginDifference > 0;\n        const fontSizeMargin = fontSizeBiggerThanDefault\n            ? SVGLegend.TextAndIconPadding + this.legendFontSizeMarginDifference\n            : SVGLegend.TextAndIconPadding;\n        let occupiedWidth = 0;\n        const firstDataPointMarkerShape = dataPoints && dataPoints[0] && dataPoints[0].markerShape;\n        const iconTotalItemPadding = this.getMarkerShapeWidth(firstDataPointMarkerShape) + fontSizeMargin * 1.5;\n        let numberOfItems = dataPoints.length;\n        // get the Y coordinate which is the middle of the container + the middle of the text height - the delta of the text\n        const defaultTextProperties = SVGLegend.getTextProperties(\"\", this.data.fontSize, this.data.fontFamily);\n        const verticalCenter = this.viewport.height / 2;\n        const textYCoordinate = verticalCenter + textMeasurementService.estimateSvgTextHeight(defaultTextProperties) / 2\n            - textMeasurementService.estimateSvgTextBaselineDelta(defaultTextProperties);\n        if (title) {\n            occupiedWidth += title.width;\n            // get the Y coordinate which is the middle of the container + the middle of the text height - the delta of the text\n            title.y = verticalCenter\n                + title.height / 2\n                - textMeasurementService.estimateSvgTextBaselineDelta(SVGLegend.getTextProperties(title.text, this.data.fontSize, this.data.fontFamily));\n        }\n        // if an arrow should be added, we add space for it\n        if (this.legendDataStartIndex > 0) {\n            occupiedWidth += SVGLegend.LegendArrowOffset;\n        }\n        // Calculate the width for each of the legend items\n        const dataPointsLength = dataPoints.length;\n        let availableWidth = this.parentViewport.width - occupiedWidth;\n        let legendItems = SVGLegend.calculateHorizontalLegendItemsWidths(dataPoints, availableWidth, iconTotalItemPadding, this.data.fontSize, this.data.fontFamily);\n        numberOfItems = legendItems.length;\n        // If we can\"t show all the legend items, subtract the \"next\" arrow space from the available space and re-run the width calculations\n        if (numberOfItems !== dataPointsLength) {\n            availableWidth -= SVGLegend.LegendArrowOffset;\n            legendItems = SVGLegend.calculateHorizontalLegendItemsWidths(dataPoints, availableWidth, iconTotalItemPadding, this.data.fontSize, this.data.fontFamily);\n            numberOfItems = legendItems.length;\n        }\n        for (const legendItem of legendItems) {\n            const { dataPoint } = legendItem;\n            const markerShapeWidth = this.getMarkerShapeWidth(dataPoint.markerShape);\n            dataPoint.glyphPosition = {\n                // the space taken so far + the radius + the margin / radiusFactor to prevent huge spaces\n                x: occupiedWidth + markerShapeWidth / 2 + (this.legendFontSizeMarginDifference / this.getLegendIconFactor(dataPoint.markerShape)),\n                // The middle of the container but a bit lower due to text not being in the middle (qP for example making middle between q and P)\n                y: this.viewport.height * SVGLegend.LegendIconYRatio,\n            };\n            const fixedTextShift = (fontSizeMargin / (this.getLegendIconFactor(dataPoint.markerShape) / 2)) + markerShapeWidth;\n            dataPoint.textPosition = {\n                x: occupiedWidth + fixedTextShift,\n                y: textYCoordinate,\n            };\n            // If we're over the max width, process it so it fits\n            if (legendItem.desiredOverMaxWidth) {\n                const textWidth = legendItem.width - iconTotalItemPadding;\n                dataPoint.label = textMeasurementService.getTailoredTextOrDefault(legendItem.textProperties, textWidth);\n            }\n            occupiedWidth += legendItem.width;\n        }\n        this.visibleLegendWidth = occupiedWidth;\n        this.updateNavigationArrowLayout(navigationArrows, dataPointsLength, numberOfItems);\n        return numberOfItems;\n    }\n    getMarkerShapeWidth(markerShape) {\n        switch (markerShape) {\n            case MarkerShape.longDash: {\n                return Markers.LegendIconLineTotalWidth;\n            }\n            default: {\n                return SVGLegend.LegendIconRadius * 2;\n            }\n        }\n    }\n    getLegendIconFactor(markerShape) {\n        switch (markerShape) {\n            case MarkerShape.circle:\n            case MarkerShape.square: {\n                return 5;\n            }\n            default: {\n                return 6;\n            }\n        }\n    }\n    getIconScale(markerShape) {\n        switch (markerShape) {\n            case MarkerShape.circle:\n            case MarkerShape.square: {\n                return SVGLegend.LegendIconRadius / Markers.defaultSize;\n            }\n            default: {\n                return 1;\n            }\n        }\n    }\n    calculateVerticalLayout(dataPoints, title, navigationArrows, autoWidth) {\n        // check if we need more space for the margin, or use the default text padding\n        const fontSizeBiggerThenDefault = this.legendFontSizeMarginDifference > 0;\n        const fontFactor = fontSizeBiggerThenDefault ? this.legendFontSizeMarginDifference : 0;\n        // calculate the size needed after font size change\n        const verticalLegendHeight = 20 + fontFactor;\n        const spaceNeededByTitle = 15 + fontFactor;\n        const extraShiftForTextAlignmentToIcon = 4 + fontFactor;\n        let totalSpaceOccupiedThusFar = verticalLegendHeight;\n        // the default space for text and icon radius + the margin after the font size change\n        const firstDataPointMarkerShape = dataPoints && dataPoints[0] && dataPoints[0].markerShape;\n        const fixedHorizontalIconShift = SVGLegend.TextAndIconPadding\n            + this.getMarkerShapeWidth(firstDataPointMarkerShape) / 2\n            + this.legendFontSizeMarginDifference;\n        const fixedHorizontalTextShift = fixedHorizontalIconShift * 2;\n        // check how much space is needed\n        const maxHorizontalSpaceAvaliable = autoWidth\n            ? this.parentViewport.width * SVGLegend.LegendMaxWidthFactor\n                - fixedHorizontalTextShift - SVGLegend.LegendEdgeMariginWidth\n            : this.lastCalculatedWidth\n                - fixedHorizontalTextShift - SVGLegend.LegendEdgeMariginWidth;\n        let numberOfItems = dataPoints.length;\n        let maxHorizontalSpaceUsed = 0;\n        const parentHeight = this.parentViewport.height;\n        if (title) {\n            totalSpaceOccupiedThusFar += spaceNeededByTitle;\n            title.x = SVGLegend.TextAndIconPadding;\n            title.y = spaceNeededByTitle;\n            maxHorizontalSpaceUsed = title.width || 0;\n        }\n        // if an arrow should be added, we add space for it\n        if (this.legendDataStartIndex > 0)\n            totalSpaceOccupiedThusFar += SVGLegend.LegendArrowOffset;\n        const dataPointsLength = dataPoints.length;\n        for (let i = 0; i < dataPointsLength; i++) {\n            const dp = dataPoints[i];\n            const textProperties = SVGLegend.getTextProperties(dp.label, this.data.fontSize, this.data.fontFamily);\n            dp.glyphPosition = {\n                x: fixedHorizontalIconShift,\n                y: (totalSpaceOccupiedThusFar + extraShiftForTextAlignmentToIcon) - textMeasurementService.estimateSvgTextBaselineDelta(textProperties)\n            };\n            dp.textPosition = {\n                x: fixedHorizontalTextShift,\n                y: totalSpaceOccupiedThusFar + extraShiftForTextAlignmentToIcon\n            };\n            // TODO: [PERF] Get rid of this extra measurement, and modify\n            // getTailoredTextToReturnWidth + Text\n            const width = textMeasurementService.measureSvgTextWidth(textProperties);\n            if (width > maxHorizontalSpaceUsed) {\n                maxHorizontalSpaceUsed = width;\n            }\n            if (width > maxHorizontalSpaceAvaliable) {\n                const text = textMeasurementService.getTailoredTextOrDefault(textProperties, maxHorizontalSpaceAvaliable);\n                dp.label = text;\n            }\n            totalSpaceOccupiedThusFar += verticalLegendHeight;\n            if (totalSpaceOccupiedThusFar > parentHeight) {\n                numberOfItems = i;\n                break;\n            }\n        }\n        if (autoWidth) {\n            if (maxHorizontalSpaceUsed < maxHorizontalSpaceAvaliable) {\n                this.lastCalculatedWidth = this.viewport.width = Math.ceil(maxHorizontalSpaceUsed + fixedHorizontalTextShift + SVGLegend.LegendEdgeMariginWidth);\n            }\n            else {\n                this.lastCalculatedWidth = this.viewport.width = Math.ceil(this.parentViewport.width * SVGLegend.LegendMaxWidthFactor);\n            }\n        }\n        else {\n            this.viewport.width = this.lastCalculatedWidth;\n        }\n        this.visibleLegendHeight = totalSpaceOccupiedThusFar;\n        navigationArrows.forEach(d => d.x = this.lastCalculatedWidth / 2);\n        this.updateNavigationArrowLayout(navigationArrows, dataPointsLength, numberOfItems);\n        return numberOfItems;\n    }\n    drawNavigationArrows(layout) {\n        let arrows = this.group.selectAll(SVGLegend.NavigationArrow.selectorName)\n            .data(layout);\n        arrows.exit().remove();\n        arrows = arrows.merge(arrows\n            .enter()\n            .append(\"g\")\n            .classed(SVGLegend.NavigationArrow.className, true))\n            .on(\"click\", (event, d) => {\n            const pos = this.legendDataStartIndex;\n            this.legendDataStartIndex = d.dataType === 0 /* NavigationArrowType.Increase */\n                ? pos + this.arrowPosWindow : pos - this.arrowPosWindow;\n            this.drawLegendInternal(this.data, this.parentViewport, false);\n        })\n            .attr(\"transform\", (d) => svgManipulation.translate(d.x, d.y));\n        let path = arrows.selectAll(\"path\")\n            .data((data) => [data]);\n        path.exit().remove();\n        path = path\n            .enter()\n            .append(\"path\")\n            .merge(path);\n        path.attr(\"d\", (d) => d.path)\n            .attr(\"transform\", (d) => d.rotateTransform);\n    }\n    isTopOrBottom(orientation) {\n        switch (orientation) {\n            case LegendPosition.Top:\n            case LegendPosition.Bottom:\n            case LegendPosition.BottomCenter:\n            case LegendPosition.TopCenter:\n                return true;\n            default:\n                return false;\n        }\n    }\n    isCentered(orientation) {\n        switch (orientation) {\n            case LegendPosition.BottomCenter:\n            case LegendPosition.LeftCenter:\n            case LegendPosition.RightCenter:\n            case LegendPosition.TopCenter:\n                return true;\n            default:\n                return false;\n        }\n    }\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    reset() { }\n    static getTextProperties(text, fontSize, fontFamily) {\n        return {\n            fontFamily,\n            fontSize: PixelConverter.fromPoint(fontSize || SVGLegend.DefaultFontSizeInPt),\n            text,\n        };\n    }\n    setTooltipToLegendItems(data) {\n        // we save the values to tooltip before cut\n        for (const dataPoint of data.dataPoints) {\n            dataPoint.tooltip = dataPoint.label;\n        }\n    }\n}\nSVGLegend.DefaultFontSizeInPt = 8;\nSVGLegend.LegendIconRadius = 5;\nSVGLegend.MaxTextLength = 60;\nSVGLegend.TextAndIconPadding = 5;\nSVGLegend.TitlePadding = 15;\nSVGLegend.LegendEdgeMariginWidth = 10;\nSVGLegend.LegendMaxWidthFactor = 0.3;\nSVGLegend.TopLegendHeight = 24;\nSVGLegend.DefaultTextMargin = PixelConverter.fromPointToPixel(SVGLegend.DefaultFontSizeInPt);\nSVGLegend.LegendIconYRatio = 0.52;\n// Navigation Arrow constants\nSVGLegend.LegendArrowOffset = 10;\nSVGLegend.LegendArrowHeight = 15;\nSVGLegend.LegendArrowWidth = 7.5;\nSVGLegend.LegendItem = createClassAndSelector(\"legendItem\");\nSVGLegend.LegendText = createClassAndSelector(\"legendText\");\nSVGLegend.LegendIcon = createClassAndSelector(\"legendIcon\");\nSVGLegend.LegendTitle = createClassAndSelector(\"legendTitle\");\nSVGLegend.NavigationArrow = createClassAndSelector(\"navArrow\");\n//# sourceMappingURL=svgLegend.js.map","// powerbi.extensibility.utils.dataview\nimport * as DataRoleHelper from \"./dataRoleHelper\";\nexport function categoryIsAlsoSeriesRole(dataView, seriesRoleName, categoryRoleName) {\n    if (dataView.categories && dataView.categories.length > 0) {\n        // Need to pivot data if our category soure is a series role\n        const category = dataView.categories[0];\n        return category.source &&\n            DataRoleHelper.hasRole(category.source, seriesRoleName) &&\n            DataRoleHelper.hasRole(category.source, categoryRoleName);\n    }\n    return false;\n}\nexport function getSeriesName(source) {\n    return (source.groupName !== undefined)\n        ? source.groupName\n        : source.queryName;\n}\nexport function isImageUrlColumn(column) {\n    const misc = getMiscellaneousTypeDescriptor(column);\n    return misc != null && misc.imageUrl === true;\n}\nexport function isWebUrlColumn(column) {\n    const misc = getMiscellaneousTypeDescriptor(column);\n    return misc != null && misc.webUrl === true;\n}\nexport function getMiscellaneousTypeDescriptor(column) {\n    return column\n        && column.type\n        && column.type.misc;\n}\nexport function hasImageUrlColumn(dataView) {\n    if (!dataView || !dataView.metadata || !dataView.metadata.columns || !dataView.metadata.columns.length) {\n        return false;\n    }\n    return dataView.metadata.columns.some((column) => isImageUrlColumn(column) === true);\n}\n//# sourceMappingURL=converterHelper.js.map","export function getMeasureIndexOfRole(grouped, roleName) {\n    if (!grouped || !grouped.length) {\n        return -1;\n    }\n    const firstGroup = grouped[0];\n    if (firstGroup.values && firstGroup.values.length > 0) {\n        for (let i = 0, len = firstGroup.values.length; i < len; ++i) {\n            const value = firstGroup.values[i];\n            if (value && value.source) {\n                if (hasRole(value.source, roleName)) {\n                    return i;\n                }\n            }\n        }\n    }\n    return -1;\n}\nexport function getCategoryIndexOfRole(categories, roleName) {\n    if (categories && categories.length) {\n        for (let i = 0, ilen = categories.length; i < ilen; i++) {\n            if (hasRole(categories[i].source, roleName)) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\nexport function hasRole(column, name) {\n    const roles = column.roles;\n    return roles && roles[name];\n}\nexport function hasRoleInDataView(dataView, name) {\n    return dataView != null\n        && dataView.metadata != null\n        && dataView.metadata.columns\n        && dataView.metadata.columns.some((c) => c.roles && c.roles[name] !== undefined); // any is an alias of some\n}\nexport function hasRoleInValueColumn(valueColumn, name) {\n    return valueColumn\n        && valueColumn.source\n        && valueColumn.source.roles\n        && (valueColumn.source.roles[name] === true);\n}\n//# sourceMappingURL=dataRoleHelper.js.map","export function getValue(object, propertyName, defaultValue) {\n    if (!object) {\n        return defaultValue;\n    }\n    const propertyValue = object[propertyName];\n    if (propertyValue === undefined) {\n        return defaultValue;\n    }\n    return propertyValue;\n}\n/** Gets the solid color from a fill property using only a propertyName */\nexport function getFillColorByPropertyName(object, propertyName, defaultColor) {\n    const value = getValue(object, propertyName);\n    if (!value || !value.solid) {\n        return defaultColor;\n    }\n    return value.solid.color;\n}\n//# sourceMappingURL=dataViewObject.js.map","import * as DataViewObject from \"./dataViewObject\";\n/** Gets the value of the given object/property pair. */\nexport function getValue(objects, propertyId, defaultValue) {\n    if (!objects) {\n        return defaultValue;\n    }\n    return DataViewObject.getValue(objects[propertyId.objectName], propertyId.propertyName, defaultValue);\n}\n/** Gets an object from objects. */\nexport function getObject(objects, objectName, defaultValue) {\n    if (objects && objects[objectName]) {\n        return objects[objectName];\n    }\n    return defaultValue;\n}\n/** Gets the solid color from a fill property. */\nexport function getFillColor(objects, propertyId, defaultColor) {\n    const value = getValue(objects, propertyId);\n    if (!value || !value.solid) {\n        return defaultColor;\n    }\n    return value.solid.color;\n}\nexport function getCommonValue(objects, propertyId, defaultValue) {\n    const value = getValue(objects, propertyId, defaultValue);\n    if (value && value.solid) {\n        return value.solid.color;\n    }\n    if (value === undefined\n        || value === null\n        || (typeof value === \"object\" && !value.solid)) {\n        return defaultValue;\n    }\n    return value;\n}\n//# sourceMappingURL=dataViewObjects.js.map","import * as DataViewObjects from \"./dataViewObjects\";\nexport class DataViewObjectsParser {\n    static getDefault() {\n        return new this();\n    }\n    static createPropertyIdentifier(objectName, propertyName) {\n        return {\n            objectName,\n            propertyName\n        };\n    }\n    static parse(dataView) {\n        const dataViewObjectParser = this.getDefault();\n        if (!dataView || !dataView.metadata || !dataView.metadata.objects) {\n            return dataViewObjectParser;\n        }\n        const properties = dataViewObjectParser.getProperties();\n        for (const objectName in properties) {\n            for (const propertyName in properties[objectName]) {\n                const defaultValue = dataViewObjectParser[objectName][propertyName];\n                dataViewObjectParser[objectName][propertyName] = DataViewObjects.getCommonValue(dataView.metadata.objects, properties[objectName][propertyName], defaultValue);\n            }\n        }\n        return dataViewObjectParser;\n    }\n    static isPropertyEnumerable(propertyName) {\n        return !DataViewObjectsParser.InnumerablePropertyPrefix.test(propertyName);\n    }\n    static enumerateObjectInstances(dataViewObjectParser, options) {\n        const dataViewProperties = dataViewObjectParser && dataViewObjectParser[options.objectName];\n        if (!dataViewProperties) {\n            return [];\n        }\n        const instance = {\n            objectName: options.objectName,\n            selector: null,\n            properties: {}\n        };\n        for (const key in dataViewProperties) {\n            if (Object.prototype.hasOwnProperty.call(dataViewProperties, key)) {\n                instance.properties[key] = dataViewProperties[key];\n            }\n        }\n        return {\n            instances: [instance]\n        };\n    }\n    getProperties() {\n        const properties = {}, objectNames = Object.keys(this);\n        objectNames.forEach((objectName) => {\n            if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {\n                const propertyNames = Object.keys(this[objectName]);\n                properties[objectName] = {};\n                propertyNames.forEach((propertyName) => {\n                    if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {\n                        properties[objectName][propertyName] =\n                            DataViewObjectsParser.createPropertyIdentifier(objectName, propertyName);\n                    }\n                });\n            }\n        });\n        return properties;\n    }\n}\nDataViewObjectsParser.InnumerablePropertyPrefix = /^_/;\n//# sourceMappingURL=dataViewObjectsParser.js.map","// TODO: refactor & focus DataViewTransform into a service with well-defined dependencies.\n// TODO: refactor this, setGrouped, and groupValues to a test helper to stop using it in the product\nexport function createValueColumns(values = [], valueIdentityFields, source) {\n    const result = values;\n    setGrouped(result);\n    if (valueIdentityFields) {\n        result.identityFields = valueIdentityFields;\n    }\n    if (source) {\n        result.source = source;\n    }\n    return result;\n}\nexport function setGrouped(values, groupedResult) {\n    values.grouped = groupedResult\n        ? () => groupedResult\n        : () => groupValues(values);\n}\n/** Group together the values with a common identity. */\nexport function groupValues(values) {\n    const groups = [];\n    let currentGroup;\n    for (let i = 0, len = values.length; i < len; i++) {\n        const value = values[i];\n        if (!currentGroup || currentGroup.identity !== value.identity) {\n            currentGroup = {\n                values: []\n            };\n            if (value.identity) {\n                currentGroup.identity = value.identity;\n                const source = value.source;\n                // allow null, which will be formatted as (Blank).\n                if (source.groupName !== undefined) {\n                    currentGroup.name = source.groupName;\n                }\n                else if (source.displayName) {\n                    currentGroup.name = source.displayName;\n                }\n            }\n            groups.push(currentGroup);\n        }\n        currentGroup.values.push(value);\n    }\n    return groups;\n}\n//# sourceMappingURL=dataViewTransform.js.map","/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\nexport function createDataViewWildcardSelector(dataViewWildcardMatchingOption) {\n    if (dataViewWildcardMatchingOption == null) {\n        dataViewWildcardMatchingOption = 0 /* DataViewWildcardMatchingOption.InstancesAndTotals */;\n    }\n    const selector = {\n        data: [\n            {\n                dataViewWildcard: {\n                    matchingOption: dataViewWildcardMatchingOption\n                }\n            }\n        ]\n    };\n    return selector;\n}\n//# sourceMappingURL=dataViewWildcard.js.map","import * as converterHelper from \"./converterHelper\";\nimport * as dataRoleHelper from \"./dataRoleHelper\";\nimport * as dataViewObject from \"./dataViewObject\";\nimport * as dataViewObjects from \"./dataViewObjects\";\nimport * as dataViewObjectsParser from \"./dataViewObjectsParser\";\nimport * as dataViewTransform from \"./dataViewTransform\";\nimport * as dataViewWildcard from \"./dataViewWildcard\";\nexport { converterHelper, dataRoleHelper, dataViewObject, dataViewObjects, dataViewObjectsParser, dataViewTransform, dataViewWildcard };\n//# sourceMappingURL=index.js.map","/**\n * Powerbi utils components classes for custom visual formatting pane objects\n *\n */\nimport * as FormattingSettingsParser from \"./utils/FormattingSettingsUtils\";\nclass NamedEntity {\n}\nexport class CardGroupEntity extends NamedEntity {\n}\nexport class Model {\n}\n/** CompositeCard is use to populate a card into the formatting pane with multiple groups */\nexport class CompositeCard extends NamedEntity {\n}\nexport class Group extends CardGroupEntity {\n    constructor(object) {\n        super();\n        Object.assign(this, object);\n    }\n}\n/** SimpleCard is use to populate a card into the formatting pane in a single group */\nexport class SimpleCard extends CardGroupEntity {\n}\nexport class SimpleSlice extends NamedEntity {\n    constructor(object) {\n        super();\n        Object.assign(this, object);\n    }\n    getFormattingSlice(objectName, localizationManager) {\n        const controlType = this.type;\n        const propertyName = this.name;\n        const sliceDisplayName = (localizationManager && this.displayNameKey) ? localizationManager.getDisplayName(this.displayNameKey) : this.displayName;\n        const sliceDescription = (localizationManager && this.descriptionKey) ? localizationManager.getDisplayName(this.descriptionKey) : this.description;\n        const componentDisplayName = {\n            displayName: sliceDisplayName,\n            description: sliceDescription,\n            uid: objectName + '-' + propertyName,\n        };\n        return Object.assign(Object.assign({}, componentDisplayName), { control: {\n                type: controlType,\n                properties: this.getFormattingComponent(objectName, localizationManager)\n            } });\n    }\n    // eslint-disable-next-line\n    getFormattingComponent(objectName, localizationManager) {\n        return {\n            descriptor: FormattingSettingsParser.getDescriptor(objectName, this),\n            value: this.value,\n        };\n    }\n    getRevertToDefaultDescriptor(objectName) {\n        return [{\n                objectName: objectName,\n                propertyName: this.name\n            }];\n    }\n    setPropertiesValues(dataViewObjects, objectName) {\n        var _a;\n        const newValue = (_a = dataViewObjects === null || dataViewObjects === void 0 ? void 0 : dataViewObjects[objectName]) === null || _a === void 0 ? void 0 : _a[this.name];\n        this.value = FormattingSettingsParser.getPropertyValue(this, newValue, this.value);\n    }\n}\nexport class AlignmentGroup extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"AlignmentGroup\" /* visuals.FormattingComponent.AlignmentGroup */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { mode: this.mode, supportsNoSelection: this.supportsNoSelection });\n    }\n}\nexport class ToggleSwitch extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"ToggleSwitch\" /* visuals.FormattingComponent.ToggleSwitch */;\n    }\n}\nexport class ColorPicker extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"ColorPicker\" /* visuals.FormattingComponent.ColorPicker */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { defaultColor: this.defaultColor, isNoFillItemSupported: this.isNoFillItemSupported });\n    }\n}\nexport class NumUpDown extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"NumUpDown\" /* visuals.FormattingComponent.NumUpDown */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { options: this.options });\n    }\n}\nexport class Slider extends NumUpDown {\n    constructor() {\n        super(...arguments);\n        this.type = \"Slider\" /* visuals.FormattingComponent.Slider */;\n    }\n}\nexport class DatePicker extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"DatePicker\" /* visuals.FormattingComponent.DatePicker */;\n    }\n    getFormattingComponent(objectName, localizationManager) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { placeholder: (localizationManager && this.placeholderKey) ? localizationManager.getDisplayName(this.placeholderKey) : this.placeholder, validators: this.validators });\n    }\n}\nexport class ItemDropdown extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"Dropdown\" /* visuals.FormattingComponent.Dropdown */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { items: this.items });\n    }\n}\nexport class AutoDropdown extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"Dropdown\" /* visuals.FormattingComponent.Dropdown */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { mergeValues: this.mergeValues, filterValues: this.filterValues });\n    }\n}\nexport class DurationPicker extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"DurationPicker\" /* visuals.FormattingComponent.DurationPicker */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { validators: this.validators });\n    }\n}\nexport class ErrorRangeControl extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"ErrorRangeControl\" /* visuals.FormattingComponent.ErrorRangeControl */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { validators: this.validators });\n    }\n}\nexport class FieldPicker extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"FieldPicker\" /* visuals.FormattingComponent.FieldPicker */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { validators: this.validators, allowMultipleValues: this.allowMultipleValues });\n    }\n}\nexport class ItemFlagsSelection extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"FlagsSelection\" /* visuals.FormattingComponent.FlagsSelection */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { items: this.items });\n    }\n}\nexport class AutoFlagsSelection extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"FlagsSelection\" /* visuals.FormattingComponent.FlagsSelection */;\n    }\n}\nexport class TextInput extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"TextInput\" /* visuals.FormattingComponent.TextInput */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { placeholder: this.placeholder });\n    }\n}\nexport class TextArea extends TextInput {\n    constructor() {\n        super(...arguments);\n        this.type = \"TextArea\" /* visuals.FormattingComponent.TextArea */;\n    }\n}\nexport class FontPicker extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"FontPicker\" /* visuals.FormattingComponent.FontPicker */;\n    }\n}\nexport class GradientBar extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"GradientBar\" /* visuals.FormattingComponent.GradientBar */;\n    }\n}\nexport class ImageUpload extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"ImageUpload\" /* visuals.FormattingComponent.ImageUpload */;\n    }\n}\nexport class ListEditor extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"ListEditor\" /* visuals.FormattingComponent.ListEditor */;\n    }\n}\nexport class ReadOnlyText extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"ReadOnlyText\" /* visuals.FormattingComponent.ReadOnlyText */;\n    }\n}\nexport class ShapeMapSelector extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"ShapeMapSelector\" /* visuals.FormattingComponent.ShapeMapSelector */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { isAzMapReferenceSelector: this.isAzMapReferenceSelector });\n    }\n}\nexport class CompositeSlice extends NamedEntity {\n    constructor(object) {\n        super();\n        Object.assign(this, object);\n    }\n    getFormattingSlice(objectName, localizationManager) {\n        const controlType = this.type;\n        const propertyName = this.name;\n        const componentDisplayName = {\n            displayName: (localizationManager && this.displayNameKey) ? localizationManager.getDisplayName(this.displayNameKey) : this.displayName,\n            description: (localizationManager && this.descriptionKey) ? localizationManager.getDisplayName(this.descriptionKey) : this.description,\n            uid: objectName + '-' + propertyName,\n        };\n        return Object.assign(Object.assign({}, componentDisplayName), { control: {\n                type: controlType,\n                properties: this.getFormattingComponent(objectName)\n            } });\n    }\n}\nexport class FontControl extends CompositeSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"FontControl\" /* visuals.FormattingComponent.FontControl */;\n    }\n    getFormattingComponent(objectName) {\n        var _a, _b, _c;\n        return {\n            fontFamily: this.fontFamily.getFormattingComponent(objectName),\n            fontSize: this.fontSize.getFormattingComponent(objectName),\n            bold: (_a = this.bold) === null || _a === void 0 ? void 0 : _a.getFormattingComponent(objectName),\n            italic: (_b = this.italic) === null || _b === void 0 ? void 0 : _b.getFormattingComponent(objectName),\n            underline: (_c = this.underline) === null || _c === void 0 ? void 0 : _c.getFormattingComponent(objectName)\n        };\n    }\n    getRevertToDefaultDescriptor(objectName) {\n        return this.fontFamily.getRevertToDefaultDescriptor(objectName)\n            .concat(this.fontSize.getRevertToDefaultDescriptor(objectName))\n            .concat(this.bold ? this.bold.getRevertToDefaultDescriptor(objectName) : [])\n            .concat(this.italic ? this.italic.getRevertToDefaultDescriptor(objectName) : [])\n            .concat(this.underline ? this.underline.getRevertToDefaultDescriptor(objectName) : []);\n    }\n    setPropertiesValues(dataViewObjects, objectName) {\n        var _a, _b, _c;\n        this.fontFamily.setPropertiesValues(dataViewObjects, objectName);\n        this.fontSize.setPropertiesValues(dataViewObjects, objectName);\n        (_a = this.bold) === null || _a === void 0 ? void 0 : _a.setPropertiesValues(dataViewObjects, objectName);\n        (_b = this.italic) === null || _b === void 0 ? void 0 : _b.setPropertiesValues(dataViewObjects, objectName);\n        (_c = this.underline) === null || _c === void 0 ? void 0 : _c.setPropertiesValues(dataViewObjects, objectName);\n    }\n}\nexport class MarginPadding extends CompositeSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"MarginPadding\" /* visuals.FormattingComponent.MarginPadding */;\n    }\n    getFormattingComponent(objectName) {\n        return {\n            left: this.left.getFormattingComponent(objectName),\n            right: this.right.getFormattingComponent(objectName),\n            top: this.top.getFormattingComponent(objectName),\n            bottom: this.bottom.getFormattingComponent(objectName)\n        };\n    }\n    getRevertToDefaultDescriptor(objectName) {\n        return this.left.getRevertToDefaultDescriptor(objectName)\n            .concat(this.right.getRevertToDefaultDescriptor(objectName))\n            .concat(this.top.getRevertToDefaultDescriptor(objectName))\n            .concat(this.bottom.getRevertToDefaultDescriptor(objectName));\n    }\n    setPropertiesValues(dataViewObjects, objectName) {\n        this.left.setPropertiesValues(dataViewObjects, objectName);\n        this.right.setPropertiesValues(dataViewObjects, objectName);\n        this.top.setPropertiesValues(dataViewObjects, objectName);\n        this.bottom.setPropertiesValues(dataViewObjects, objectName);\n    }\n}\nexport class Container extends NamedEntity {\n    constructor(object) {\n        super();\n        Object.assign(this, object);\n    }\n}\nexport class ContainerItem extends NamedEntity {\n}\n//# sourceMappingURL=FormattingSettingsComponents.js.map","import { CompositeCard, SimpleCard } from \"./FormattingSettingsComponents\";\nexport class FormattingSettingsService {\n    constructor(localizationManager) {\n        this.localizationManager = localizationManager;\n    }\n    /**\n     * Build visual formatting settings model from metadata dataView\n     *\n     * @param dataViews metadata dataView object\n     * @returns visual formatting settings model\n     */\n    populateFormattingSettingsModel(typeClass, dataView) {\n        var _a, _b;\n        const defaultSettings = new typeClass();\n        const dataViewObjects = (_a = dataView === null || dataView === void 0 ? void 0 : dataView.metadata) === null || _a === void 0 ? void 0 : _a.objects;\n        if (dataViewObjects) {\n            // loop over each formatting property and set its new value if exists\n            (_b = defaultSettings.cards) === null || _b === void 0 ? void 0 : _b.forEach((card) => {\n                var _a;\n                if (card instanceof CompositeCard)\n                    (_a = card.topLevelSlice) === null || _a === void 0 ? void 0 : _a.setPropertiesValues(dataViewObjects, card.name);\n                const cardGroupInstances = (card instanceof SimpleCard ? [card] : card.groups);\n                cardGroupInstances.forEach((cardGroupInstance) => {\n                    var _a, _b, _c, _d;\n                    // Set current top level toggle value\n                    (_a = cardGroupInstance.topLevelSlice) === null || _a === void 0 ? void 0 : _a.setPropertiesValues(dataViewObjects, card.name);\n                    (_b = cardGroupInstance === null || cardGroupInstance === void 0 ? void 0 : cardGroupInstance.slices) === null || _b === void 0 ? void 0 : _b.forEach((slice) => {\n                        slice === null || slice === void 0 ? void 0 : slice.setPropertiesValues(dataViewObjects, card.name);\n                    });\n                    (_d = (_c = cardGroupInstance === null || cardGroupInstance === void 0 ? void 0 : cardGroupInstance.container) === null || _c === void 0 ? void 0 : _c.containerItems) === null || _d === void 0 ? void 0 : _d.forEach((containerItem) => {\n                        var _a;\n                        (_a = containerItem === null || containerItem === void 0 ? void 0 : containerItem.slices) === null || _a === void 0 ? void 0 : _a.forEach((slice) => {\n                            slice === null || slice === void 0 ? void 0 : slice.setPropertiesValues(dataViewObjects, card.name);\n                        });\n                    });\n                });\n            });\n        }\n        return defaultSettings;\n    }\n    /**\n     * Build formatting model by parsing formatting settings model object\n     *\n     * @returns powerbi visual formatting model\n     */\n    buildFormattingModel(formattingSettingsModel) {\n        const formattingModel = {\n            cards: []\n        };\n        formattingSettingsModel.cards\n            .filter(({ visible = true }) => visible)\n            .forEach((card) => {\n            var _a;\n            const formattingCard = {\n                displayName: (this.localizationManager && card.displayNameKey) ? this.localizationManager.getDisplayName(card.displayNameKey) : card.displayName,\n                description: (this.localizationManager && card.descriptionKey) ? this.localizationManager.getDisplayName(card.descriptionKey) : card.description,\n                groups: [],\n                uid: card.name + \"-card\",\n                analyticsPane: card.analyticsPane,\n            };\n            const objectName = card.name;\n            if (card.topLevelSlice) {\n                const topLevelToggleSlice = card.topLevelSlice.getFormattingSlice(objectName, this.localizationManager);\n                topLevelToggleSlice.suppressDisplayName = true;\n                formattingCard.topLevelToggle = topLevelToggleSlice;\n            }\n            (_a = card.onPreProcess) === null || _a === void 0 ? void 0 : _a.call(card);\n            const isSimpleCard = card instanceof SimpleCard;\n            const cardGroupInstances = (isSimpleCard ?\n                [card].filter(({ visible = true }) => visible) :\n                card.groups.filter(({ visible = true }) => visible));\n            cardGroupInstances\n                .forEach((cardGroupInstance) => {\n                const groupUid = cardGroupInstance.name + \"-group\";\n                // Build formatting group for each group\n                const formattingGroup = {\n                    displayName: isSimpleCard ? undefined : (this.localizationManager && cardGroupInstance.displayNameKey)\n                        ? this.localizationManager.getDisplayName(cardGroupInstance.displayNameKey) : cardGroupInstance.displayName,\n                    description: isSimpleCard ? undefined : (this.localizationManager && cardGroupInstance.descriptionKey)\n                        ? this.localizationManager.getDisplayName(cardGroupInstance.descriptionKey) : cardGroupInstance.description,\n                    slices: [],\n                    uid: groupUid,\n                    collapsible: cardGroupInstance.collapsible,\n                    delaySaveSlices: cardGroupInstance.delaySaveSlices,\n                    disabled: cardGroupInstance.disabled,\n                    disabledReason: cardGroupInstance.disabledReason,\n                };\n                formattingCard.groups.push(formattingGroup);\n                // In case formatting model adds data points or top categories (Like when you modify specific visual category color).\n                // these categories use same object name and property name from capabilities and the generated uid will be the same for these formatting categories properties\n                // Solution => Save slice names to modify each slice uid to be unique by adding counter value to the new slice uid\n                const sliceNames = {};\n                // Build formatting container slice for each property\n                if (cardGroupInstance.container) {\n                    const container = cardGroupInstance.container;\n                    const containerUid = groupUid + \"-container\";\n                    const formattingContainer = {\n                        displayName: (this.localizationManager && container.displayNameKey)\n                            ? this.localizationManager.getDisplayName(container.displayNameKey) : container.displayName,\n                        description: (this.localizationManager && container.descriptionKey)\n                            ? this.localizationManager.getDisplayName(container.descriptionKey) : container.description,\n                        containerItems: [],\n                        uid: containerUid\n                    };\n                    container.containerItems.forEach((containerItem) => {\n                        // Build formatting container item object\n                        const containerIemName = containerItem.displayNameKey ? containerItem.displayNameKey : containerItem.displayName;\n                        const containerItemUid = containerUid + containerIemName;\n                        const formattingContainerItem = {\n                            displayName: (this.localizationManager && containerItem.displayNameKey)\n                                ? this.localizationManager.getDisplayName(containerItem.displayNameKey) : containerItem.displayName,\n                            slices: [],\n                            uid: containerItemUid\n                        };\n                        // Build formatting slices and add them to current formatting container item\n                        this.buildFormattingSlices({ slices: containerItem.slices, objectName, sliceNames, formattingSlices: formattingContainerItem.slices });\n                        formattingContainer.containerItems.push(formattingContainerItem);\n                    });\n                    formattingGroup.container = formattingContainer;\n                }\n                if (cardGroupInstance.slices) {\n                    if (cardGroupInstance.topLevelSlice) {\n                        const topLevelToggleSlice = cardGroupInstance.topLevelSlice.getFormattingSlice(objectName, this.localizationManager);\n                        topLevelToggleSlice.suppressDisplayName = true;\n                        (formattingGroup.displayName == undefined ? formattingCard : formattingGroup).topLevelToggle = topLevelToggleSlice;\n                    }\n                    // Build formatting slice for each property\n                    this.buildFormattingSlices({ slices: cardGroupInstance.slices, objectName, sliceNames, formattingSlices: formattingGroup.slices });\n                }\n            });\n            formattingCard.revertToDefaultDescriptors = this.getRevertToDefaultDescriptor(card);\n            formattingModel.cards.push(formattingCard);\n        });\n        return formattingModel;\n    }\n    buildFormattingSlices({ slices, objectName, sliceNames, formattingSlices }) {\n        // Filter slices based on their visibility\n        slices === null || slices === void 0 ? void 0 : slices.filter(({ visible = true }) => visible).forEach((slice) => {\n            const formattingSlice = slice === null || slice === void 0 ? void 0 : slice.getFormattingSlice(objectName, this.localizationManager);\n            if (formattingSlice) {\n                // Modify formatting slice uid if needed\n                if (sliceNames[slice.name] === undefined) {\n                    sliceNames[slice.name] = 0;\n                }\n                else {\n                    sliceNames[slice.name]++;\n                    formattingSlice.uid = `${formattingSlice.uid}-${sliceNames[slice.name]}`;\n                }\n                formattingSlices.push(formattingSlice);\n            }\n        });\n    }\n    getRevertToDefaultDescriptor(card) {\n        var _a;\n        // Proceeded slice names are saved to prevent duplicated default descriptors in case of using \n        // formatting categories & selectors, since they have the same descriptor objectName and propertyName\n        const sliceNames = {};\n        const revertToDefaultDescriptors = [];\n        let cardSlicesDefaultDescriptors;\n        let cardContainerSlicesDefaultDescriptors = [];\n        // eslint-disable-next-line\n        if (card instanceof CompositeCard && card.topLevelSlice)\n            revertToDefaultDescriptors.push(...(_a = card.topLevelSlice) === null || _a === void 0 ? void 0 : _a.getRevertToDefaultDescriptor(card.name));\n        const cardGroupInstances = (card instanceof SimpleCard ?\n            [card].filter(({ visible = true }) => visible) :\n            card.groups.filter(({ visible = true }) => visible));\n        cardGroupInstances.forEach((cardGroupInstance) => {\n            var _a, _b;\n            cardSlicesDefaultDescriptors = this.getSlicesRevertToDefaultDescriptor(card.name, cardGroupInstance.slices, sliceNames, cardGroupInstance.topLevelSlice);\n            (_b = (_a = cardGroupInstance.container) === null || _a === void 0 ? void 0 : _a.containerItems) === null || _b === void 0 ? void 0 : _b.forEach((containerItem) => {\n                cardContainerSlicesDefaultDescriptors = cardContainerSlicesDefaultDescriptors.concat(this.getSlicesRevertToDefaultDescriptor(card.name, containerItem.slices, sliceNames));\n            });\n            revertToDefaultDescriptors.push(...cardSlicesDefaultDescriptors.concat(cardContainerSlicesDefaultDescriptors));\n        });\n        return revertToDefaultDescriptors;\n    }\n    getSlicesRevertToDefaultDescriptor(cardName, slices, sliceNames, topLevelSlice) {\n        let revertToDefaultDescriptors = [];\n        if (topLevelSlice) {\n            sliceNames[topLevelSlice.name] = true;\n            revertToDefaultDescriptors = revertToDefaultDescriptors.concat(topLevelSlice.getRevertToDefaultDescriptor(cardName));\n        }\n        slices === null || slices === void 0 ? void 0 : slices.forEach((slice) => {\n            if (slice && !sliceNames[slice.name]) {\n                sliceNames[slice.name] = true;\n                revertToDefaultDescriptors = revertToDefaultDescriptors.concat(slice.getRevertToDefaultDescriptor(cardName));\n            }\n        });\n        return revertToDefaultDescriptors;\n    }\n}\nexport default FormattingSettingsService;\n//# sourceMappingURL=FormattingSettingsService.js.map","import * as formattingSettings from \"./FormattingSettingsComponents\";\nimport FormattingSettingsService from \"./FormattingSettingsService\";\nexport { formattingSettings, FormattingSettingsService };\n//# sourceMappingURL=index.js.map","/**\n * Build and return formatting descriptor for simple slice\n *\n * @param objectName Object name from capabilities\n * @param slice formatting simple slice\n * @returns simple slice formatting descriptor\n */\nexport function getDescriptor(objectName, slice) {\n    return {\n        objectName: objectName,\n        propertyName: slice.name,\n        selector: slice.selector,\n        altConstantValueSelector: slice.altConstantSelector,\n        instanceKind: slice.instanceKind\n    };\n}\n/**\n * Get property value from dataview objects if exists\n * Else return the default value from formatting settings object\n *\n * @param value dataview object value\n * @param defaultValue formatting settings default value\n * @returns formatting property value\n */\nexport function getPropertyValue(slice, value, defaultValue) {\n    if (value == null || (typeof value === \"object\" && !value.solid)) {\n        return defaultValue;\n    }\n    if (value.solid) {\n        return { value: value === null || value === void 0 ? void 0 : value.solid.color };\n    }\n    if ((slice === null || slice === void 0 ? void 0 : slice.type) === \"Dropdown\" /* visuals.FormattingComponent.Dropdown */ && slice.items) {\n        const itemsArray = slice.items;\n        return itemsArray.find(item => item.value == value);\n    }\n    return value;\n}\n//# sourceMappingURL=FormattingSettingsUtils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Globalize Cultures\n *\n * http://github.com/jquery/globalize\n *\n * Copyright Software Freedom Conservancy, Inc.\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * This file was generated by the Globalize Culture Generator\n * Translation: bugs found in this file need to be fixed in the generator\n */\nvar powerbiGlobalizeLocales_1 = require(\"./powerbiGlobalizeLocales\");\nfunction injectCultures(Globalize) {\n    Object.keys(powerbiGlobalizeLocales_1.locales).forEach(function (locale) { return Globalize.addCultureInfo.apply(Globalize, powerbiGlobalizeLocales_1.locales[locale]); });\n}\nexports.default = injectCultures;\n//# sourceMappingURL=globalize.cultures.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNegativePattern = exports.parseExact = exports.getEraYear = exports.getEra = exports.getTokenRegExp = exports.formatNumber = exports.formatDate = exports.expandFormat = exports.appendPreOrPostMatch = exports.zeroPad = exports.trim = exports.startsWith = exports.isObject = exports.isFunction = exports.isArray = exports.extend = exports.endsWith = exports.arrayIndexOf = exports.regexTrim = exports.regexParseFloat = exports.regexInfinity = exports.regexHex = exports.Globalize = void 0;\n// Global variable (Globalize) or CommonJS module (globalize)\nexports.Globalize = function (cultureSelector) {\n    return new exports.Globalize.prototype.init(cultureSelector);\n};\nexports.Globalize.cultures = {};\nexports.Globalize.prototype = {\n    constructor: exports.Globalize,\n    init: function (cultureSelector) {\n        this.cultures = exports.Globalize.cultures;\n        this.cultureSelector = cultureSelector;\n        return this;\n    }\n};\nexports.Globalize.prototype.init.prototype = exports.Globalize.prototype;\n// 1.\t When defining a culture, all fields are required except the ones stated as optional.\n// 2.\t Each culture should have a \".calendars\" object with at least one calendar named \"standard\"\n//\t\t which serves as the default calendar in use by that culture.\n// 3.\t Each culture should have a \".calendar\" object which is the current calendar being used,\n//\t\t it may be dynamically changed at any time to one of the calendars in \".calendars\".\nexports.Globalize.cultures[\"default\"] = {\n    // A unique name for the culture in the form <language code>-<country/region code>\n    name: \"en\",\n    // the name of the culture in the english language\n    englishName: \"English\",\n    // the name of the culture in its own language\n    nativeName: \"English\",\n    // whether the culture uses right-to-left text\n    isRTL: false,\n    // \"language\" is used for so-called \"specific\" cultures.\n    // For example, the culture \"es-CL\" means \"Spanish, in Chili\".\n    // It represents the Spanish-speaking culture as it is in Chili,\n    // which might have different formatting rules or even translations\n    // than Spanish in Spain. A \"neutral\" culture is one that is not\n    // specific to a region. For example, the culture \"es\" is the generic\n    // Spanish culture, which may be a more generalized version of the language\n    // that may or may not be what a specific culture expects.\n    // For a specific culture like \"es-CL\", the \"language\" field refers to the\n    // neutral, generic culture information for the language it is using.\n    // This is not always a simple matter of the string before the dash.\n    // For example, the \"zh-Hans\" culture is netural (Simplified Chinese).\n    // And the \"zh-SG\" culture is Simplified Chinese in Singapore, whose lanugage\n    // field is \"zh-CHS\", not \"zh\".\n    // This field should be used to navigate from a specific culture to it's\n    // more general, neutral culture. If a culture is already as general as it\n    // can get, the language may refer to itself.\n    language: \"en\",\n    // numberFormat defines general number formatting rules, like the digits in\n    // each grouping, the group separator, and how negative numbers are displayed.\n    numberFormat: {\n        // [negativePattern]\n        // Note, numberFormat.pattern has no \"positivePattern\" unlike percent and currency,\n        // but is still defined as an array for consistency with them.\n        //   negativePattern: one of \"(n)|-n|- n|n-|n -\"\n        pattern: [\"-n\"],\n        // number of decimal places normally shown\n        decimals: 2,\n        // string that separates number groups, as in 1,000,000\n        \",\": \",\",\n        // string that separates a number from the fractional portion, as in 1.99\n        \".\": \".\",\n        // array of numbers indicating the size of each number group.\n        // TODO: more detailed description and example\n        groupSizes: [3],\n        // symbol used for positive numbers\n        \"+\": \"+\",\n        // symbol used for negative numbers\n        \"-\": \"-\",\n        percent: {\n            // [negativePattern, positivePattern]\n            //   negativePattern: one of \"-n %|-n%|-%n|%-n|%n-|n-%|n%-|-% n|n %-|% n-|% -n|n- %\"\n            //   positivePattern: one of \"n %|n%|%n|% n\"\n            pattern: [\"-n %\", \"n %\"],\n            // number of decimal places normally shown\n            decimals: 2,\n            // array of numbers indicating the size of each number group.\n            // TODO: more detailed description and example\n            groupSizes: [3],\n            // string that separates number groups, as in 1,000,000\n            \",\": \",\",\n            // string that separates a number from the fractional portion, as in 1.99\n            \".\": \".\",\n            // symbol used to represent a percentage\n            symbol: \"%\"\n        },\n        currency: {\n            // [negativePattern, positivePattern]\n            //   negativePattern: one of \"($n)|-$n|$-n|$n-|(n$)|-n$|n-$|n$-|-n $|-$ n|n $-|$ n-|$ -n|n- $|($ n)|(n $)\"\n            //   positivePattern: one of \"$n|n$|$ n|n $\"\n            pattern: [\"($n)\", \"$n\"],\n            // number of decimal places normally shown\n            decimals: 2,\n            // array of numbers indicating the size of each number group.\n            // TODO: more detailed description and example\n            groupSizes: [3],\n            // string that separates number groups, as in 1,000,000\n            \",\": \",\",\n            // string that separates a number from the fractional portion, as in 1.99\n            \".\": \".\",\n            // symbol used to represent currency\n            symbol: \"$\"\n        }\n    },\n    // calendars defines all the possible calendars used by this culture.\n    // There should be at least one defined with name \"standard\", and is the default\n    // calendar used by the culture.\n    // A calendar contains information about how dates are formatted, information about\n    // the calendar's eras, a standard set of the date formats,\n    // translations for day and month names, and if the calendar is not based on the Gregorian\n    // calendar, conversion functions to and from the Gregorian calendar.\n    calendars: {\n        standard: {\n            // name that identifies the type of calendar this is\n            name: \"Gregorian_USEnglish\",\n            // separator of parts of a date (e.g. \"/\" in 11/05/1955)\n            \"/\": \"/\",\n            // separator of parts of a time (e.g. \":\" in 05:44 PM)\n            \":\": \":\",\n            // the first day of the week (0 = Sunday, 1 = Monday, etc)\n            firstDay: 0,\n            days: {\n                // full day names\n                names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n                // abbreviated day names\n                namesAbbr: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n                // shortest day names\n                namesShort: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\n            },\n            months: {\n                // full month names (13 months for lunar calendards -- 13th month should be \"\" if not lunar)\n                names: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"\"],\n                // abbreviated month names\n                namesAbbr: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"\"]\n            },\n            // AM and PM designators in one of these forms:\n            // The usual view, and the upper and lower case versions\n            //   [ standard, lowercase, uppercase ]\n            // The culture does not use AM or PM (likely all standard date formats use 24 hour time)\n            //   null\n            AM: [\"AM\", \"am\", \"AM\"],\n            PM: [\"PM\", \"pm\", \"PM\"],\n            eras: [\n                // eras in reverse chronological order.\n                // name: the name of the era in this culture (e.g. A.D., C.E.)\n                // start: when the era starts in ticks (gregorian, gmt), null if it is the earliest supported era.\n                // offset: offset in years from gregorian calendar\n                {\n                    \"name\": \"A.D.\",\n                    \"start\": null,\n                    \"offset\": 0\n                }\n            ],\n            // when a two digit year is given, it will never be parsed as a four digit\n            // year greater than this year (in the appropriate era for the culture)\n            // Set it as a full year (e.g. 2029) or use an offset format starting from\n            // the current year: \"+19\" would correspond to 2029 if the current year 2010.\n            twoDigitYearMax: 2029,\n            // set of predefined date and time patterns used by the culture\n            // these represent the format someone in this culture would expect\n            // to see given the portions of the date that are shown.\n            patterns: {\n                // short date pattern\n                d: \"M/d/yyyy\",\n                // long date pattern\n                D: \"dddd, MMMM dd, yyyy\",\n                // short time pattern\n                t: \"h:mm tt\",\n                // long time pattern\n                T: \"h:mm:ss tt\",\n                // long date, short time pattern\n                f: \"dddd, MMMM dd, yyyy h:mm tt\",\n                // long date, long time pattern\n                F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n                // month/day pattern\n                M: \"MMMM dd\",\n                // month/year pattern\n                Y: \"yyyy MMMM\",\n                // S is a sortable format that does not vary by culture\n                S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\"\n            }\n            // optional fields for each calendar:\n            /*\n            monthsGenitive:\n                Same as months but used when the day preceeds the month.\n                Omit if the culture has no genitive distinction in month names.\n                For an explaination of genitive months, see http://blogs.msdn.com/michkap/archive/2004/12/25/332259.aspx\n            convert:\n                Allows for the support of non-gregorian based calendars. This convert object is used to\n                to convert a date to and from a gregorian calendar date to handle parsing and formatting.\n                The two functions:\n                    fromGregorian( date )\n                        Given the date as a parameter, return an array with parts [ year, month, day ]\n                        corresponding to the non-gregorian based year, month, and day for the calendar.\n                    toGregorian( year, month, day )\n                        Given the non-gregorian year, month, and day, return a new Date() object\n                        set to the corresponding date in the gregorian calendar.\n            */\n        }\n    },\n    // For localized strings\n    messages: {}\n};\nexports.Globalize.cultures[\"default\"].calendar = exports.Globalize.cultures[\"default\"].calendars.standard;\nexports.Globalize.cultures[\"en\"] = exports.Globalize.cultures[\"default\"];\nexports.Globalize.cultureSelector = \"en\";\n//\n// private variables\n//\nexports.regexHex = /^0x[a-f0-9]+$/i;\nexports.regexInfinity = /^[+-]?infinity$/i;\nexports.regexParseFloat = /^[+-]?\\d*\\.?\\d*(e[+-]?\\d+)?$/;\nexports.regexTrim = /^\\s+|\\s+$/g;\n//\n// private JavaScript utility functions\n//\nexports.arrayIndexOf = function (array, item) {\n    if (array.indexOf) {\n        return array.indexOf(item);\n    }\n    for (var i = 0, length = array.length; i < length; i++) {\n        if (array[i] === item) {\n            return i;\n        }\n    }\n    return -1;\n};\nexports.endsWith = function (value, pattern) {\n    return value.substring(value.length - pattern.length) === pattern;\n};\nexports.extend = function (deep) {\n    var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n    // Handle a deep copy situation\n    if (typeof target === \"boolean\") {\n        deep = target;\n        target = arguments[1] || {};\n        // skip the boolean and the target\n        i = 2;\n    }\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== \"object\" && !(0, exports.isFunction)(target)) {\n        target = {};\n    }\n    for (; i < length; i++) {\n        // Only deal with non-null/undefined values\n        if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n                src = target[name];\n                copy = options[name];\n                // Prevent never-ending loop\n                if (target === copy) {\n                    continue;\n                }\n                // Recurse if we're merging plain objects or arrays\n                if (deep && copy && ((0, exports.isObject)(copy) || (copyIsArray = (0, exports.isArray)(copy)))) {\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        clone = src && (0, exports.isArray)(src) ? src : [];\n                    }\n                    else {\n                        clone = src && (0, exports.isObject)(src) ? src : {};\n                    }\n                    // Never move original objects, clone them\n                    target[name] = (0, exports.extend)(deep, clone, copy);\n                    // Don't bring in undefined values\n                }\n                else if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n    // Return the modified object\n    return target;\n};\nexports.isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n};\nexports.isFunction = function (obj) {\n    return Object.prototype.toString.call(obj) === \"[object Function]\";\n};\nexports.isObject = function (obj) {\n    return Object.prototype.toString.call(obj) === \"[object Object]\";\n};\nexports.startsWith = function (value, pattern) {\n    return value.indexOf(pattern) === 0;\n};\nexports.trim = function (value) {\n    return (value + \"\").replace(exports.regexTrim, \"\");\n};\nexports.zeroPad = function (str, count, left) {\n    var l;\n    for (l = str.length; l < count; l += 1) {\n        str = (left ? (\"0\" + str) : (str + \"0\"));\n    }\n    return str;\n};\n//\n// private Globalization utility functions\n//\nexports.appendPreOrPostMatch = function (preMatch, strings) {\n    // appends pre- and post- token match strings while removing escaped characters.\n    // Returns a single quote count which is used to determine if the token occurs\n    // in a string literal.\n    var quoteCount = 0, escaped = false;\n    for (var i = 0, il = preMatch.length; i < il; i++) {\n        var c = preMatch.charAt(i);\n        switch (c) {\n            case \"\\'\":\n                if (escaped) {\n                    strings.push(\"\\'\");\n                }\n                else {\n                    quoteCount++;\n                }\n                escaped = false;\n                break;\n            case \"\\\\\":\n                if (escaped) {\n                    strings.push(\"\\\\\");\n                }\n                escaped = !escaped;\n                break;\n            default:\n                strings.push(c);\n                escaped = false;\n                break;\n        }\n    }\n    return quoteCount;\n};\nexports.expandFormat = function (cal, format) {\n    // expands unspecified or single character date formats into the full pattern.\n    format = format || \"F\";\n    var pattern, patterns = cal.patterns, len = format.length;\n    if (len === 1) {\n        pattern = patterns[format];\n        if (!pattern) {\n            throw \"Invalid date format string \\'\" + format + \"\\'.\";\n        }\n        format = pattern;\n    }\n    else if (len === 2 && format.charAt(0) === \"%\") {\n        // %X escape format -- intended as a custom format string that is only one character, not a built-in format.\n        format = format.charAt(1);\n    }\n    return format;\n};\nexports.formatDate = function (value, format, culture) {\n    var cal = culture.calendar, convert = cal.convert;\n    if (!format || !format.length || format === \"i\") {\n        var ret;\n        if (culture && culture.name.length) {\n            if (convert) {\n                // non-gregorian calendar, so we cannot use built-in toLocaleString()\n                ret = (0, exports.formatDate)(value, cal.patterns.F, culture);\n            }\n            else {\n                var eraDate = new Date(value.getTime()), era = (0, exports.getEra)(value, cal.eras);\n                eraDate.setFullYear((0, exports.getEraYear)(value, cal, era));\n                ret = eraDate.toLocaleString();\n            }\n        }\n        else {\n            ret = value.toString();\n        }\n        return ret;\n    }\n    var eras = cal.eras, sortable = format === \"s\";\n    format = (0, exports.expandFormat)(cal, format);\n    // Start with an empty string\n    ret = [];\n    var hour, zeros = [\"0\", \"00\", \"000\"], foundDay, checkedDay, dayPartRegExp = /([^d]|^)(d|dd)([^d]|$)/g, quoteCount = 0, tokenRegExp = (0, exports.getTokenRegExp)(), converted;\n    function padZeros(num, c) {\n        var r, s = num + \"\";\n        if (c > 1 && s.length < c) {\n            r = (zeros[c - 2] + s);\n            return r.substring(r.length - c, r.length);\n        }\n        else {\n            r = s;\n        }\n        return r;\n    }\n    function hasDay() {\n        if (foundDay || checkedDay) {\n            return foundDay;\n        }\n        foundDay = dayPartRegExp.test(format);\n        checkedDay = true;\n        return foundDay;\n    }\n    function getPart(date, part) {\n        if (converted) {\n            return converted[part];\n        }\n        switch (part) {\n            case 0: return date.getFullYear();\n            case 1: return date.getMonth();\n            case 2: return date.getDate();\n        }\n    }\n    if (!sortable && convert) {\n        converted = convert.fromGregorian(value);\n    }\n    for (;;) {\n        // Save the current index\n        var index = tokenRegExp.lastIndex, \n        // Look for the next pattern\n        ar = tokenRegExp.exec(format);\n        // Append the text before the pattern (or the end of the string if not found)\n        var preMatch = format.slice(index, ar ? ar.index : format.length);\n        quoteCount += (0, exports.appendPreOrPostMatch)(preMatch, ret);\n        if (!ar) {\n            break;\n        }\n        // do not replace any matches that occur inside a string literal.\n        if (quoteCount % 2) {\n            ret.push(ar[0]);\n            continue;\n        }\n        var current = ar[0], clength = current.length;\n        switch (current) {\n            case \"ddd\":\n            //Day of the week, as a three-letter abbreviation\n            case \"dddd\":\n                // Day of the week, using the full name\n                var names = (clength === 3) ? cal.days.namesAbbr : cal.days.names;\n                ret.push(names[value.getDay()]);\n                break;\n            case \"d\":\n            // Day of month, without leading zero for single-digit days\n            case \"dd\":\n                // Day of month, with leading zero for single-digit days\n                foundDay = true;\n                ret.push(padZeros(getPart(value, 2), clength));\n                break;\n            case \"MMM\":\n            // Month, as a three-letter abbreviation\n            case \"MMMM\":\n                // Month, using the full name\n                var part = getPart(value, 1);\n                ret.push((cal.monthsGenitive && hasDay())\n                    ?\n                        cal.monthsGenitive[clength === 3 ? \"namesAbbr\" : \"names\"][part]\n                    :\n                        cal.months[clength === 3 ? \"namesAbbr\" : \"names\"][part]);\n                break;\n            case \"M\":\n            // Month, as digits, with no leading zero for single-digit months\n            case \"MM\":\n                // Month, as digits, with leading zero for single-digit months\n                ret.push(padZeros(getPart(value, 1) + 1, clength));\n                break;\n            case \"y\":\n            // Year, as two digits, but with no leading zero for years less than 10\n            case \"yy\":\n            // Year, as two digits, with leading zero for years less than 10\n            case \"yyyy\":\n                // Year represented by four full digits\n                part = converted ? converted[0] : (0, exports.getEraYear)(value, cal, (0, exports.getEra)(value, eras), sortable);\n                if (clength < 4) {\n                    part = part % 100;\n                }\n                ret.push(padZeros(part, clength));\n                break;\n            case \"h\":\n            // Hours with no leading zero for single-digit hours, using 12-hour clock\n            case \"hh\":\n                // Hours with leading zero for single-digit hours, using 12-hour clock\n                hour = value.getHours() % 12;\n                if (hour === 0)\n                    hour = 12;\n                ret.push(padZeros(hour, clength));\n                break;\n            case \"H\":\n            // Hours with no leading zero for single-digit hours, using 24-hour clock\n            case \"HH\":\n                // Hours with leading zero for single-digit hours, using 24-hour clock\n                ret.push(padZeros(value.getHours(), clength));\n                break;\n            case \"m\":\n            // Minutes with no leading zero for single-digit minutes\n            case \"mm\":\n                // Minutes with leading zero for single-digit minutes\n                ret.push(padZeros(value.getMinutes(), clength));\n                break;\n            case \"s\":\n            // Seconds with no leading zero for single-digit seconds\n            case \"ss\":\n                // Seconds with leading zero for single-digit seconds\n                ret.push(padZeros(value.getSeconds(), clength));\n                break;\n            case \"t\":\n            // One character am/pm indicator (\"a\" or \"p\")\n            case \"tt\":\n                // Multicharacter am/pm indicator\n                part = value.getHours() < 12 ? (cal.AM ? cal.AM[0] : \" \") : (cal.PM ? cal.PM[0] : \" \");\n                ret.push(clength === 1 ? part.charAt(0) : part);\n                break;\n            case \"f\":\n            // Deciseconds\n            case \"ff\":\n            // Centiseconds\n            case \"fff\":\n                // Milliseconds\n                ret.push(padZeros(value.getMilliseconds(), 3).substring(0, clength));\n                break;\n            case \"z\":\n            // Time zone offset, no leading zero\n            case \"zz\":\n                // Time zone offset with leading zero\n                hour = value.getTimezoneOffset() / 60;\n                ret.push((hour <= 0 ? \"+\" : \"-\") + padZeros(Math.floor(Math.abs(hour)), clength));\n                break;\n            case \"zzz\":\n                // Time zone offset with leading zero\n                hour = value.getTimezoneOffset() / 60;\n                ret.push((hour <= 0 ? \"+\" : \"-\") + padZeros(Math.floor(Math.abs(hour)), 2)\n                    // Hard coded \":\" separator, rather than using cal.TimeSeparator\n                    // Repeated here for consistency, plus \":\" was already assumed in date parsing.\n                    + \":\" + padZeros(Math.abs(value.getTimezoneOffset() % 60), 2));\n                break;\n            case \"g\":\n            case \"gg\":\n                if (cal.eras) {\n                    ret.push(cal.eras[(0, exports.getEra)(value, eras)].name);\n                }\n                break;\n            case \"/\":\n                ret.push(cal[\"/\"]);\n                break;\n            default:\n                throw \"Invalid date format pattern \\'\" + current + \"\\'.\";\n        }\n    }\n    return ret.join(\"\");\n};\n// formatNumber\n(function () {\n    var expandNumber;\n    expandNumber = function (number, precision, formatInfo) {\n        var groupSizes = formatInfo.groupSizes, curSize = groupSizes[0], curGroupIndex = 1, factor = Math.pow(10, precision), rounded = Math.round(number * factor) / factor;\n        if (!isFinite(rounded)) {\n            rounded = number;\n        }\n        number = rounded;\n        var numberString = number + \"\", right = \"\", split = numberString.split(/e/i), exponent = split.length > 1 ? parseInt(split[1], 10) : 0;\n        numberString = split[0];\n        split = numberString.split(\".\");\n        numberString = split[0];\n        right = split.length > 1 ? split[1] : \"\";\n        var l;\n        if (exponent > 0) {\n            right = (0, exports.zeroPad)(right, exponent, false);\n            numberString += right.slice(0, exponent);\n            right = right.substring(exponent);\n        }\n        else if (exponent < 0) {\n            exponent = -exponent;\n            numberString = (0, exports.zeroPad)(numberString, exponent + 1);\n            right = numberString.slice(-exponent, numberString.length) + right;\n            numberString = numberString.slice(0, -exponent);\n        }\n        if (precision > 0) {\n            right = formatInfo[\".\"] +\n                ((right.length > precision) ? right.slice(0, precision) : (0, exports.zeroPad)(right, precision));\n        }\n        else {\n            right = \"\";\n        }\n        var stringIndex = numberString.length - 1, sep = formatInfo[\",\"], ret = \"\";\n        while (stringIndex >= 0) {\n            if (curSize === 0 || curSize > stringIndex) {\n                return numberString.slice(0, stringIndex + 1) + (ret.length ? (sep + ret + right) : right);\n            }\n            ret = numberString.slice(stringIndex - curSize + 1, stringIndex + 1) + (ret.length ? (sep + ret) : \"\");\n            stringIndex -= curSize;\n            if (curGroupIndex < groupSizes.length) {\n                curSize = groupSizes[curGroupIndex];\n                curGroupIndex++;\n            }\n        }\n        return numberString.slice(0, stringIndex + 1) + sep + ret + right;\n    };\n    exports.formatNumber = function (value, format, culture) {\n        if (!format || format === \"i\") {\n            return culture.name.length ? value.toLocaleString() : value.toString();\n        }\n        format = format || \"D\";\n        var nf = culture.numberFormat, number = Math.abs(value), precision = -1, pattern;\n        if (format.length > 1)\n            precision = parseInt(format.slice(1), 10);\n        var current = format.charAt(0).toUpperCase(), formatInfo;\n        switch (current) {\n            case \"D\":\n                pattern = \"n\";\n                if (precision !== -1) {\n                    number = (0, exports.zeroPad)(\"\" + number, precision, true);\n                }\n                if (value < 0)\n                    number = -number;\n                break;\n            case \"N\":\n                formatInfo = nf;\n            // fall through\n            case \"C\":\n                formatInfo = formatInfo || nf.currency;\n            // fall through\n            case \"P\":\n                formatInfo = formatInfo || nf.percent;\n                pattern = value < 0 ? formatInfo.pattern[0] : (formatInfo.pattern[1] || \"n\");\n                if (precision === -1)\n                    precision = formatInfo.decimals;\n                number = expandNumber(number * (current === \"P\" ? 100 : 1), precision, formatInfo);\n                break;\n            default:\n                throw \"Bad number format specifier: \" + current;\n        }\n        var patternParts = /n|\\$|-|%/g, ret = \"\";\n        for (;;) {\n            var index = patternParts.lastIndex, ar = patternParts.exec(pattern);\n            ret += pattern.slice(index, ar ? ar.index : pattern.length);\n            if (!ar) {\n                break;\n            }\n            switch (ar[0]) {\n                case \"n\":\n                    ret += number;\n                    break;\n                case \"$\":\n                    ret += nf.currency.symbol;\n                    break;\n                case \"-\":\n                    // don't make 0 negative\n                    if (/[1-9]/.test(number.toString())) {\n                        ret += nf[\"-\"];\n                    }\n                    break;\n                case \"%\":\n                    ret += nf.percent.symbol;\n                    break;\n            }\n        }\n        return ret;\n    };\n}());\nexports.getTokenRegExp = function () {\n    // regular expression for matching date and time tokens in format strings.\n    return /\\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g;\n};\nexports.getEra = function (date, eras) {\n    if (!eras)\n        return 0;\n    var start, ticks = date.getTime();\n    for (var i = 0, l = eras.length; i < l; i++) {\n        start = eras[i].start;\n        if (start === null || ticks >= start) {\n            return i;\n        }\n    }\n    return 0;\n};\nexports.getEraYear = function (date, cal, era, sortable) {\n    var year = date.getFullYear();\n    if (!sortable && cal.eras) {\n        // convert normal gregorian year to era-shifted gregorian\n        // year by subtracting the era offset\n        year -= cal.eras[era].offset;\n    }\n    return year;\n};\n// parseExact\n(function () {\n    var expandYear, getDayIndex, getMonthIndex, getParseRegExp, outOfRange, toUpper, toUpperArray;\n    expandYear = function (cal, year) {\n        // expands 2-digit year into 4 digits.\n        var now = new Date(), era = (0, exports.getEra)(now);\n        if (year < 100) {\n            var twoDigitYearMax = cal.twoDigitYearMax;\n            twoDigitYearMax = typeof twoDigitYearMax === \"string\" ? new Date().getFullYear() % 100 + parseInt(twoDigitYearMax, 10) : twoDigitYearMax;\n            var curr = (0, exports.getEraYear)(now, cal, era);\n            year += curr - (curr % 100);\n            if (year > twoDigitYearMax) {\n                year -= 100;\n            }\n        }\n        return year;\n    };\n    getDayIndex = function (cal, value, abbr) {\n        var ret, days = cal.days, upperDays = cal._upperDays;\n        if (!upperDays) {\n            cal._upperDays = upperDays = [\n                toUpperArray(days.names),\n                toUpperArray(days.namesAbbr),\n                toUpperArray(days.namesShort)\n            ];\n        }\n        value = toUpper(value);\n        if (abbr) {\n            ret = (0, exports.arrayIndexOf)(upperDays[1], value);\n            if (ret === -1) {\n                ret = (0, exports.arrayIndexOf)(upperDays[2], value);\n            }\n        }\n        else {\n            ret = (0, exports.arrayIndexOf)(upperDays[0], value);\n        }\n        return ret;\n    };\n    getMonthIndex = function (cal, value, abbr) {\n        var months = cal.months, monthsGen = cal.monthsGenitive || cal.months, upperMonths = cal._upperMonths, upperMonthsGen = cal._upperMonthsGen;\n        if (!upperMonths) {\n            cal._upperMonths = upperMonths = [\n                toUpperArray(months.names),\n                toUpperArray(months.namesAbbr)\n            ];\n            cal._upperMonthsGen = upperMonthsGen = [\n                toUpperArray(monthsGen.names),\n                toUpperArray(monthsGen.namesAbbr)\n            ];\n        }\n        value = toUpper(value);\n        var i = (0, exports.arrayIndexOf)(abbr ? upperMonths[1] : upperMonths[0], value);\n        if (i < 0) {\n            i = (0, exports.arrayIndexOf)(abbr ? upperMonthsGen[1] : upperMonthsGen[0], value);\n        }\n        return i;\n    };\n    getParseRegExp = function (cal, format) {\n        // converts a format string into a regular expression with groups that\n        // can be used to extract date fields from a date string.\n        // check for a cached parse regex.\n        var re = cal._parseRegExp;\n        if (!re) {\n            cal._parseRegExp = re = {};\n        }\n        else {\n            var reFormat = re[format];\n            if (reFormat) {\n                return reFormat;\n            }\n        }\n        // expand single digit formats, then escape regular expression characters.\n        var expFormat = (0, exports.expandFormat)(cal, format).replace(/([\\^\\$\\.\\*\\+\\?\\|\\[\\]\\(\\)\\{\\}])/g, \"\\\\\\\\$1\"), regexp = [\"^\"], groups = [], index = 0, quoteCount = 0, tokenRegExp = (0, exports.getTokenRegExp)(), match;\n        // iterate through each date token found.\n        while ((match = tokenRegExp.exec(expFormat)) !== null) {\n            var preMatch = expFormat.slice(index, match.index);\n            index = tokenRegExp.lastIndex;\n            // don't replace any matches that occur inside a string literal.\n            quoteCount += (0, exports.appendPreOrPostMatch)(preMatch, regexp);\n            if (quoteCount % 2) {\n                regexp.push(match[0]);\n                continue;\n            }\n            // add a regex group for the token.\n            var m = match[0], len = m.length, add;\n            switch (m) {\n                case \"dddd\":\n                case \"ddd\":\n                case \"MMMM\":\n                case \"MMM\":\n                case \"gg\":\n                case \"g\":\n                    add = \"(\\\\D+)\";\n                    break;\n                case \"tt\":\n                case \"t\":\n                    add = \"(\\\\D*)\";\n                    break;\n                case \"yyyy\":\n                case \"fff\":\n                case \"ff\":\n                case \"f\":\n                    add = \"(\\\\d{\" + len + \"})\";\n                    break;\n                case \"dd\":\n                case \"d\":\n                case \"MM\":\n                case \"M\":\n                case \"yy\":\n                case \"y\":\n                case \"HH\":\n                case \"H\":\n                case \"hh\":\n                case \"h\":\n                case \"mm\":\n                case \"m\":\n                case \"ss\":\n                case \"s\":\n                    add = \"(\\\\d\\\\d?)\";\n                    break;\n                case \"zzz\":\n                    add = \"([+-]?\\\\d\\\\d?:\\\\d{2})\";\n                    break;\n                case \"zz\":\n                case \"z\":\n                    add = \"([+-]?\\\\d\\\\d?)\";\n                    break;\n                case \"/\":\n                    add = \"(\\\\\" + cal[\"/\"] + \")\";\n                    break;\n                default:\n                    throw \"Invalid date format pattern \\'\" + m + \"\\'.\";\n            }\n            if (add) {\n                regexp.push(add);\n            }\n            groups.push(match[0]);\n        }\n        (0, exports.appendPreOrPostMatch)(expFormat.slice(index), regexp);\n        regexp.push(\"$\");\n        // allow whitespace to differ when matching formats.\n        var regexpStr = regexp.join(\"\").replace(/\\s+/g, \"\\\\s+\"), parseRegExp = { \"regExp\": regexpStr, \"groups\": groups };\n        // cache the regex for this format.\n        return re[format] = parseRegExp;\n    };\n    outOfRange = function (value, low, high) {\n        return value < low || value > high;\n    };\n    toUpper = function (value) {\n        // \"he-IL\" has non-breaking space in weekday names.\n        return value.split(\"\\u00A0\").join(\" \").toUpperCase();\n    };\n    toUpperArray = function (arr) {\n        var results = [];\n        for (var i = 0, l = arr.length; i < l; i++) {\n            results[i] = toUpper(arr[i]);\n        }\n        return results;\n    };\n    exports.parseExact = function (value, format, culture) {\n        // try to parse the date string by matching against the format string\n        // while using the specified culture for date field names.\n        value = (0, exports.trim)(value);\n        var cal = culture.calendar, \n        // convert date formats into regular expressions with groupings.\n        // use the regexp to determine the input format and extract the date fields.\n        parseInfo = getParseRegExp(cal, format), match = new RegExp(parseInfo.regExp).exec(value);\n        if (match === null) {\n            return null;\n        }\n        // found a date format that matches the input.\n        var groups = parseInfo.groups, era = null, year = null, month = null, date = null, weekDay = null, hour = 0, hourOffset, min = 0, sec = 0, msec = 0, tzMinOffset = null, pmHour = false;\n        // iterate the format groups to extract and set the date fields.\n        for (var j = 0, jl = groups.length; j < jl; j++) {\n            var matchGroup = match[j + 1];\n            if (matchGroup) {\n                var current = groups[j], clength = current.length, matchInt = parseInt(matchGroup, 10);\n                switch (current) {\n                    case \"dd\":\n                    case \"d\":\n                        // Day of month.\n                        date = matchInt;\n                        // check that date is generally in valid range, also checking overflow below.\n                        if (outOfRange(date, 1, 31))\n                            return null;\n                        break;\n                    case \"MMM\":\n                    case \"MMMM\":\n                        month = getMonthIndex(cal, matchGroup, clength === 3);\n                        if (outOfRange(month, 0, 11))\n                            return null;\n                        break;\n                    case \"M\":\n                    case \"MM\":\n                        // Month.\n                        month = matchInt - 1;\n                        if (outOfRange(month, 0, 11))\n                            return null;\n                        break;\n                    case \"y\":\n                    case \"yy\":\n                    case \"yyyy\":\n                        year = clength < 4 ? expandYear(cal, matchInt) : matchInt;\n                        if (outOfRange(year, 0, 9999))\n                            return null;\n                        break;\n                    case \"h\":\n                    case \"hh\":\n                        // Hours (12-hour clock).\n                        hour = matchInt;\n                        if (hour === 12)\n                            hour = 0;\n                        if (outOfRange(hour, 0, 11))\n                            return null;\n                        break;\n                    case \"H\":\n                    case \"HH\":\n                        // Hours (24-hour clock).\n                        hour = matchInt;\n                        if (outOfRange(hour, 0, 23))\n                            return null;\n                        break;\n                    case \"m\":\n                    case \"mm\":\n                        // Minutes.\n                        min = matchInt;\n                        if (outOfRange(min, 0, 59))\n                            return null;\n                        break;\n                    case \"s\":\n                    case \"ss\":\n                        // Seconds.\n                        sec = matchInt;\n                        if (outOfRange(sec, 0, 59))\n                            return null;\n                        break;\n                    case \"tt\":\n                    case \"t\":\n                        // AM/PM designator.\n                        // see if it is standard, upper, or lower case PM. If not, ensure it is at least one of\n                        // the AM tokens. If not, fail the parse for this format.\n                        pmHour = cal.PM && (matchGroup === cal.PM[0] || matchGroup === cal.PM[1] || matchGroup === cal.PM[2]);\n                        if (!pmHour && (!cal.AM || (matchGroup !== cal.AM[0] && matchGroup !== cal.AM[1] && matchGroup !== cal.AM[2])))\n                            return null;\n                        break;\n                    case \"f\":\n                    // Deciseconds.\n                    case \"ff\":\n                    // Centiseconds.\n                    case \"fff\":\n                        // Milliseconds.\n                        msec = matchInt * Math.pow(10, 3 - clength);\n                        if (outOfRange(msec, 0, 999))\n                            return null;\n                        break;\n                    case \"ddd\":\n                    // Day of week.\n                    case \"dddd\":\n                        // Day of week.\n                        weekDay = getDayIndex(cal, matchGroup, clength === 3);\n                        if (outOfRange(weekDay, 0, 6))\n                            return null;\n                        break;\n                    case \"zzz\":\n                        // Time zone offset in +/- hours:min.\n                        var offsets = matchGroup.split(/:/);\n                        if (offsets.length !== 2)\n                            return null;\n                        hourOffset = parseInt(offsets[0], 10);\n                        if (outOfRange(hourOffset, -12, 13))\n                            return null;\n                        var minOffset = parseInt(offsets[1], 10);\n                        if (outOfRange(minOffset, 0, 59))\n                            return null;\n                        tzMinOffset = (hourOffset * 60) + ((0, exports.startsWith)(matchGroup, \"-\") ? -minOffset : minOffset);\n                        break;\n                    case \"z\":\n                    case \"zz\":\n                        // Time zone offset in +/- hours.\n                        hourOffset = matchInt;\n                        if (outOfRange(hourOffset, -12, 13))\n                            return null;\n                        tzMinOffset = hourOffset * 60;\n                        break;\n                    case \"g\":\n                    case \"gg\":\n                        var eraName = matchGroup;\n                        if (!eraName || !cal.eras)\n                            return null;\n                        eraName = (0, exports.trim)(eraName.toLowerCase());\n                        for (var i = 0, l = cal.eras.length; i < l; i++) {\n                            if (eraName === cal.eras[i].name.toLowerCase()) {\n                                era = i;\n                                break;\n                            }\n                        }\n                        // could not find an era with that name\n                        if (era === null)\n                            return null;\n                        break;\n                }\n            }\n        }\n        var result = new Date(), defaultYear, convert = cal.convert;\n        defaultYear = convert ? convert.fromGregorian(result)[0] : result.getFullYear();\n        if (year === null) {\n            year = defaultYear;\n        }\n        else if (cal.eras) {\n            // year must be shifted to normal gregorian year\n            // but not if year was not specified, its already normal gregorian\n            // per the main if clause above.\n            year += cal.eras[(era || 0)].offset;\n        }\n        // set default day and month to 1 and January, so if unspecified, these are the defaults\n        // instead of the current day/month.\n        if (month === null) {\n            month = 0;\n        }\n        if (date === null) {\n            date = 1;\n        }\n        // now have year, month, and date, but in the culture's calendar.\n        // convert to gregorian if necessary\n        if (convert) {\n            result = convert.toGregorian(year, month, date);\n            // conversion failed, must be an invalid match\n            if (result === null)\n                return null;\n        }\n        else {\n            // have to set year, month and date together to avoid overflow based on current date.\n            result.setFullYear(year, month, date);\n            // check to see if date overflowed for specified month (only checked 1-31 above).\n            if (result.getDate() !== date)\n                return null;\n            // invalid day of week.\n            if (weekDay !== null && result.getDay() !== weekDay) {\n                return null;\n            }\n        }\n        // if pm designator token was found make sure the hours fit the 24-hour clock.\n        if (pmHour && hour < 12) {\n            hour += 12;\n        }\n        result.setHours(hour, min, sec, msec);\n        if (tzMinOffset !== null) {\n            // adjust timezone to utc before applying local offset.\n            var adjustedMin = result.getMinutes() - (tzMinOffset + result.getTimezoneOffset());\n            // Safari limits hours and minutes to the range of -127 to 127.\t We need to use setHours\n            // to ensure both these fields will not exceed this range.\tadjustedMin will range\n            // somewhere between -1440 and 1500, so we only need to split this into hours.\n            result.setHours(result.getHours() + parseInt((adjustedMin / 60).toString(), 10), adjustedMin % 60);\n        }\n        return result;\n    };\n}());\nexports.parseNegativePattern = function (value, nf, negativePattern) {\n    var neg = nf[\"-\"], pos = nf[\"+\"], ret;\n    switch (negativePattern) {\n        case \"n -\":\n            neg = \" \" + neg;\n            pos = \" \" + pos;\n        // fall through\n        case \"n-\":\n            if ((0, exports.endsWith)(value, neg)) {\n                ret = [\"-\", value.substring(0, value.length - neg.length)];\n            }\n            else if ((0, exports.endsWith)(value, pos)) {\n                ret = [\"+\", value.substring(0, value.length - pos.length)];\n            }\n            break;\n        case \"- n\":\n            neg += \" \";\n            pos += \" \";\n        // fall through\n        case \"-n\":\n            if ((0, exports.startsWith)(value, neg)) {\n                ret = [\"-\", value.substring(neg.length)];\n            }\n            else if ((0, exports.startsWith)(value, pos)) {\n                ret = [\"+\", value.substring(pos.length)];\n            }\n            break;\n        case \"(n)\":\n            if ((0, exports.startsWith)(value, \"(\") && (0, exports.endsWith)(value, \")\")) {\n                ret = [\"-\", value.substring(1, value.length - 1)];\n            }\n            break;\n    }\n    return ret || [\"\", value];\n};\n//\n// public instance functions\n//\nexports.Globalize.prototype.findClosestCulture = function (cultureSelector) {\n    return exports.Globalize.findClosestCulture.call(this, cultureSelector);\n};\nexports.Globalize.prototype.format = function (value, format, cultureSelector) {\n    return exports.Globalize.format.call(this, value, format, cultureSelector);\n};\nexports.Globalize.prototype.localize = function (key, cultureSelector) {\n    return exports.Globalize.localize.call(this, key, cultureSelector);\n};\nexports.Globalize.prototype.parseInt = function (value, radix, cultureSelector) {\n    return exports.Globalize.parseInt.call(this, value, radix, cultureSelector);\n};\nexports.Globalize.prototype.parseFloat = function (value, radix, cultureSelector) {\n    return exports.Globalize.parseFloat.call(this, value, radix, cultureSelector);\n};\nexports.Globalize.prototype.culture = function (cultureSelector) {\n    return exports.Globalize.culture.call(this, cultureSelector);\n};\n//\n// public singleton functions\n//\nexports.Globalize.addCultureInfo = function (cultureName, baseCultureName, info) {\n    var base = {}, isNew = false;\n    if (typeof cultureName !== \"string\") {\n        // cultureName argument is optional string. If not specified, assume info is first\n        // and only argument. Specified info deep-extends current culture.\n        info = cultureName;\n        cultureName = this.culture().name;\n        base = this.cultures[cultureName];\n    }\n    else if (typeof baseCultureName !== \"string\") {\n        // baseCultureName argument is optional string. If not specified, assume info is second\n        // argument. Specified info deep-extends specified culture.\n        // If specified culture does not exist, create by deep-extending default\n        info = baseCultureName;\n        isNew = (this.cultures[cultureName] == null);\n        base = this.cultures[cultureName] || this.cultures[\"default\"];\n    }\n    else {\n        // cultureName and baseCultureName specified. Assume a new culture is being created\n        // by deep-extending an specified base culture\n        isNew = true;\n        base = this.cultures[baseCultureName];\n    }\n    this.cultures[cultureName] = (0, exports.extend)(true, {}, base, info);\n    // Make the standard calendar the current culture if it's a new culture\n    if (isNew) {\n        this.cultures[cultureName].calendar = this.cultures[cultureName].calendars.standard;\n    }\n};\nexports.Globalize.findClosestCulture = function (name) {\n    var match;\n    if (!name) {\n        return this.cultures[this.cultureSelector] || this.cultures[\"default\"];\n    }\n    if (typeof name === \"string\") {\n        name = name.split(\",\");\n    }\n    if ((0, exports.isArray)(name)) {\n        var lang, cultures = this.cultures, list = name, i, l = list.length, prioritized = [];\n        for (i = 0; i < l; i++) {\n            name = (0, exports.trim)(list[i]);\n            var pri, parts = name.split(\";\");\n            lang = (0, exports.trim)(parts[0]);\n            if (parts.length === 1) {\n                pri = 1;\n            }\n            else {\n                name = (0, exports.trim)(parts[1]);\n                if (name.indexOf(\"q=\") === 0) {\n                    name = name.substring(2);\n                    pri = parseFloat(name);\n                    pri = isNaN(pri) ? 0 : pri;\n                }\n                else {\n                    pri = 1;\n                }\n            }\n            prioritized.push({ lang: lang, pri: pri });\n        }\n        prioritized.sort(function (a, b) {\n            return a.pri < b.pri ? 1 : -1;\n        });\n        // exact match\n        for (i = 0; i < l; i++) {\n            lang = prioritized[i].lang;\n            match = cultures[lang];\n            if (match) {\n                return match;\n            }\n        }\n        // neutral language match\n        for (i = 0; i < l; i++) {\n            lang = prioritized[i].lang;\n            do {\n                var index = lang.lastIndexOf(\"-\");\n                if (index === -1) {\n                    break;\n                }\n                // strip off the last part. e.g. en-US => en\n                lang = lang.substring(0, index);\n                match = cultures[lang];\n                if (match) {\n                    return match;\n                }\n            } while (1);\n        }\n        // last resort: match first culture using that language\n        for (i = 0; i < l; i++) {\n            lang = prioritized[i].lang;\n            for (var cultureKey in cultures) {\n                var culture = cultures[cultureKey];\n                if (culture.language == lang) {\n                    return culture;\n                }\n            }\n        }\n    }\n    else if (typeof name === \"object\") {\n        return name;\n    }\n    return match || null;\n};\nexports.Globalize.format = function (value, format, cultureSelector) {\n    var culture = this.findClosestCulture(cultureSelector);\n    if (value instanceof Date) {\n        value = (0, exports.formatDate)(value, format, culture);\n    }\n    else if (typeof value === \"number\") {\n        value = (0, exports.formatNumber)(value, format, culture);\n    }\n    return value;\n};\nexports.Globalize.localize = function (key, cultureSelector) {\n    return (this.findClosestCulture(cultureSelector).messages[key]\n        ||\n            this.cultures[\"default\"].messages[\"key\"]);\n};\nexports.Globalize.parseDate = function (value, formats, culture) {\n    culture = this.findClosestCulture(culture);\n    var date, prop, patterns;\n    if (formats) {\n        if (typeof formats === \"string\") {\n            formats = [formats];\n        }\n        if (formats.length) {\n            for (var i = 0, l = formats.length; i < l; i++) {\n                var format = formats[i];\n                if (format) {\n                    date = (0, exports.parseExact)(value, format, culture);\n                    if (date) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        patterns = culture.calendar.patterns;\n        for (prop in patterns) {\n            date = (0, exports.parseExact)(value, patterns[prop], culture);\n            if (date) {\n                break;\n            }\n        }\n    }\n    return date || null;\n};\nexports.Globalize.parseInt = function (value, radix, cultureSelector) {\n    return Math.floor(exports.Globalize.parseFloat(value, radix, cultureSelector));\n};\nexports.Globalize.parseFloat = function (value, radix, cultureSelector) {\n    // radix argument is optional\n    if (typeof radix !== \"number\") {\n        cultureSelector = radix;\n        radix = 10;\n    }\n    var culture = this.findClosestCulture(cultureSelector);\n    var ret = NaN, nf = culture.numberFormat;\n    if (value.indexOf(culture.numberFormat.currency.symbol) > -1) {\n        // remove currency symbol\n        value = value.replace(culture.numberFormat.currency.symbol, \"\");\n        // replace decimal seperator\n        value = value.replace(culture.numberFormat.currency[\".\"], culture.numberFormat[\".\"]);\n    }\n    // trim leading and trailing whitespace\n    value = (0, exports.trim)(value);\n    // allow infinity or hexidecimal\n    if (exports.regexInfinity.test(value)) {\n        ret = parseFloat(value);\n    }\n    else if (!radix && exports.regexHex.test(value)) {\n        ret = parseInt(value, 16);\n    }\n    else {\n        var signInfo = (0, exports.parseNegativePattern)(value, nf, nf.pattern[0]), sign = signInfo[0], num = signInfo[1];\n        // determine sign and number\n        if (sign === \"\" && nf.pattern[0] !== \"-n\") {\n            signInfo = (0, exports.parseNegativePattern)(value, nf, \"-n\");\n            sign = signInfo[0];\n            num = signInfo[1];\n        }\n        sign = sign || \"+\";\n        // determine exponent and number\n        var exponent, intAndFraction, exponentPos = num.indexOf(\"e\");\n        if (exponentPos < 0)\n            exponentPos = num.indexOf(\"E\");\n        if (exponentPos < 0) {\n            intAndFraction = num;\n            exponent = null;\n        }\n        else {\n            intAndFraction = num.substring(0, exponentPos);\n            exponent = num.substring(exponentPos + 1);\n        }\n        // determine decimal position\n        var integer, fraction, decSep = nf[\".\"], decimalPos = intAndFraction.indexOf(decSep);\n        if (decimalPos < 0) {\n            integer = intAndFraction;\n            fraction = null;\n        }\n        else {\n            integer = intAndFraction.substring(0, decimalPos);\n            fraction = intAndFraction.substring(decimalPos + decSep.length);\n        }\n        // handle groups (e.g. 1,000,000)\n        var groupSep = nf[\",\"];\n        integer = integer.split(groupSep).join(\"\");\n        var altGroupSep = groupSep.replace(/\\u00A0/g, \" \");\n        if (groupSep !== altGroupSep) {\n            integer = integer.split(altGroupSep).join(\"\");\n        }\n        // build a natively parsable number string\n        var p = sign + integer;\n        if (fraction !== null) {\n            p += \".\" + fraction;\n        }\n        if (exponent !== null) {\n            // exponent itself may have a number patternd\n            var expSignInfo = (0, exports.parseNegativePattern)(exponent, nf, \"-n\");\n            p += \"e\" + (expSignInfo[0] || \"+\") + expSignInfo[1];\n        }\n        if (exports.regexParseFloat.test(p)) {\n            ret = parseFloat(p);\n        }\n    }\n    return ret;\n};\nexports.Globalize.culture = function (cultureSelector) {\n    // setter\n    if (typeof cultureSelector !== \"undefined\") {\n        this.cultureSelector = cultureSelector;\n    }\n    // getter\n    return this.findClosestCulture(cultureSelector) || this.culture[\"default\"];\n};\n//# sourceMappingURL=globalize.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DateTimeSequence = void 0;\nvar dateUtils = require(\"./dateUtils\");\n// powerbi.extensibility.utils.type\nvar powerbi_visuals_utils_typeutils_1 = require(\"powerbi-visuals-utils-typeutils\");\nvar NumericSequence = powerbi_visuals_utils_typeutils_1.numericSequence.NumericSequence;\nvar NumericSequenceRange = powerbi_visuals_utils_typeutils_1.numericSequenceRange.NumericSequenceRange;\n// powerbi.extensibility.utils.formatting\nvar iFormattingService_1 = require(\"./../formattingService/iFormattingService\");\n// Repreasents the sequence of the dates/times\nvar DateTimeSequence = /** @class */ (function () {\n    // Constructors\n    // Creates new instance of the DateTimeSequence\n    function DateTimeSequence(unit) {\n        this.unit = unit;\n        this.sequence = [];\n        this.min = new Date(\"9999-12-31T23:59:59.999\");\n        this.max = new Date(\"0001-01-01T00:00:00.000\");\n    }\n    // Methods\n    /**\n     * Add a new Date to a sequence.\n     * @param date - date to add\n     */\n    DateTimeSequence.prototype.add = function (date) {\n        if (date < this.min) {\n            this.min = date;\n        }\n        if (date > this.max) {\n            this.max = date;\n        }\n        this.sequence.push(date);\n    };\n    // Methods\n    /**\n     * Extends the sequence to cover new date range\n     * @param min - new min to be covered by sequence\n     * @param max - new max to be covered by sequence\n     */\n    DateTimeSequence.prototype.extendToCover = function (min, max) {\n        var x = this.min;\n        while (min < x) {\n            x = DateTimeSequence.ADD_INTERVAL(x, -this.interval, this.unit);\n            this.sequence.splice(0, 0, x);\n        }\n        this.min = x;\n        x = this.max;\n        while (x < max) {\n            x = DateTimeSequence.ADD_INTERVAL(x, this.interval, this.unit);\n            this.sequence.push(x);\n        }\n        this.max = x;\n    };\n    /**\n     * Move the sequence to cover new date range\n     * @param min - new min to be covered by sequence\n     * @param max - new max to be covered by sequence\n     */\n    DateTimeSequence.prototype.moveToCover = function (min, max) {\n        var delta = DateTimeSequence.getDelta(min, max, this.unit);\n        var count = Math.floor(delta / this.interval);\n        this.min = DateTimeSequence.ADD_INTERVAL(this.min, count * this.interval, this.unit);\n        this.sequence = [];\n        this.sequence.push(this.min);\n        this.max = this.min;\n        while (this.max < max) {\n            this.max = DateTimeSequence.ADD_INTERVAL(this.max, this.interval, this.unit);\n            this.sequence.push(this.max);\n        }\n    };\n    // Static\n    /**\n     * Calculate a new DateTimeSequence\n     * @param dataMin - Date representing min of the data range\n     * @param dataMax - Date representing max of the data range\n     * @param expectedCount - expected number of intervals in the sequence\n     * @param unit - of the intervals in the sequence\n     */\n    DateTimeSequence.CALCULATE = function (dataMin, dataMax, expectedCount, unit) {\n        if (!unit) {\n            unit = DateTimeSequence.GET_INTERVAL_UNIT(dataMin, dataMax, expectedCount);\n        }\n        switch (unit) {\n            case iFormattingService_1.DateTimeUnit.Year:\n                return DateTimeSequence.CALCULATE_YEARS(dataMin, dataMax, expectedCount);\n            case iFormattingService_1.DateTimeUnit.Month:\n                return DateTimeSequence.CALCULATE_MONTHS(dataMin, dataMax, expectedCount);\n            case iFormattingService_1.DateTimeUnit.Week:\n                return DateTimeSequence.CALCULATE_WEEKS(dataMin, dataMax, expectedCount);\n            case iFormattingService_1.DateTimeUnit.Day:\n                return DateTimeSequence.CALCULATE_DAYS(dataMin, dataMax, expectedCount);\n            case iFormattingService_1.DateTimeUnit.Hour:\n                return DateTimeSequence.CALCULATE_HOURS(dataMin, dataMax, expectedCount);\n            case iFormattingService_1.DateTimeUnit.Minute:\n                return DateTimeSequence.CALCULATE_MINUTES(dataMin, dataMax, expectedCount);\n            case iFormattingService_1.DateTimeUnit.Second:\n                return DateTimeSequence.CALCULATE_SECONDS(dataMin, dataMax, expectedCount);\n            case iFormattingService_1.DateTimeUnit.Millisecond:\n                return DateTimeSequence.CALCULATE_MILLISECONDS(dataMin, dataMax, expectedCount);\n        }\n    };\n    DateTimeSequence.CALCULATE_YEARS = function (dataMin, dataMax, expectedCount) {\n        // Calculate range and sequence\n        var yearsRange = NumericSequenceRange.calculateDataRange(dataMin.getFullYear(), dataMax.getFullYear(), false);\n        // Calculate year sequence\n        var sequence = NumericSequence.calculate(NumericSequenceRange.calculate(0, yearsRange.max - yearsRange.min), expectedCount, 0, null, null, [1, 2, 5]);\n        var newMinYear = Math.floor(yearsRange.min / sequence.interval) * sequence.interval;\n        var date = new Date(newMinYear, 0, 1);\n        // Convert to date sequence\n        return DateTimeSequence.fromNumericSequence(date, sequence, iFormattingService_1.DateTimeUnit.Year);\n    };\n    DateTimeSequence.CALCULATE_MONTHS = function (dataMin, dataMax, expectedCount) {\n        // Calculate range\n        var minYear = dataMin.getFullYear();\n        var maxYear = dataMax.getFullYear();\n        var minMonth = dataMin.getMonth();\n        var maxMonth = (maxYear - minYear) * 12 + dataMax.getMonth();\n        var date = new Date(minYear, 0, 1);\n        // Calculate month sequence\n        var sequence = NumericSequence.calculateUnits(minMonth, maxMonth, expectedCount, [1, 2, 3, 6, 12]);\n        // Convert to date sequence\n        return DateTimeSequence.fromNumericSequence(date, sequence, iFormattingService_1.DateTimeUnit.Month);\n    };\n    DateTimeSequence.CALCULATE_WEEKS = function (dataMin, dataMax, expectedCount) {\n        var firstDayOfWeek = 0;\n        var minDayOfWeek = dataMin.getDay();\n        var dayOffset = (minDayOfWeek - firstDayOfWeek + 7) % 7;\n        var minDay = dataMin.getDate() - dayOffset;\n        // Calculate range\n        var date = new Date(dataMin.getFullYear(), dataMin.getMonth(), minDay);\n        var min = 0;\n        var max = powerbi_visuals_utils_typeutils_1.double.ceilWithPrecision(DateTimeSequence.getDelta(date, dataMax, iFormattingService_1.DateTimeUnit.Week));\n        // Calculate week sequence\n        var sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 4, 8]);\n        // Convert to date sequence\n        return DateTimeSequence.fromNumericSequence(date, sequence, iFormattingService_1.DateTimeUnit.Week);\n    };\n    DateTimeSequence.CALCULATE_DAYS = function (dataMin, dataMax, expectedCount) {\n        // Calculate range\n        var date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate());\n        var min = 0;\n        var max = powerbi_visuals_utils_typeutils_1.double.ceilWithPrecision(DateTimeSequence.getDelta(dataMin, dataMax, iFormattingService_1.DateTimeUnit.Day));\n        // Calculate day sequence\n        var sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 7, 14]);\n        // Convert to date sequence\n        return DateTimeSequence.fromNumericSequence(date, sequence, iFormattingService_1.DateTimeUnit.Day);\n    };\n    DateTimeSequence.CALCULATE_HOURS = function (dataMin, dataMax, expectedCount) {\n        // Calculate range\n        var date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate());\n        var min = powerbi_visuals_utils_typeutils_1.double.floorWithPrecision(DateTimeSequence.getDelta(date, dataMin, iFormattingService_1.DateTimeUnit.Hour));\n        var max = powerbi_visuals_utils_typeutils_1.double.ceilWithPrecision(DateTimeSequence.getDelta(date, dataMax, iFormattingService_1.DateTimeUnit.Hour));\n        // Calculate hour sequence\n        var sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 3, 6, 12, 24]);\n        // Convert to date sequence\n        return DateTimeSequence.fromNumericSequence(date, sequence, iFormattingService_1.DateTimeUnit.Hour);\n    };\n    DateTimeSequence.CALCULATE_MINUTES = function (dataMin, dataMax, expectedCount) {\n        // Calculate range\n        var date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate(), dataMin.getHours());\n        var min = powerbi_visuals_utils_typeutils_1.double.floorWithPrecision(DateTimeSequence.getDelta(date, dataMin, iFormattingService_1.DateTimeUnit.Minute));\n        var max = powerbi_visuals_utils_typeutils_1.double.ceilWithPrecision(DateTimeSequence.getDelta(date, dataMax, iFormattingService_1.DateTimeUnit.Minute));\n        // Calculate minutes numeric sequence\n        var sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 5, 10, 15, 30, 60, 60 * 2, 60 * 3, 60 * 6, 60 * 12, 60 * 24]);\n        // Convert to date sequence\n        return DateTimeSequence.fromNumericSequence(date, sequence, iFormattingService_1.DateTimeUnit.Minute);\n    };\n    DateTimeSequence.CALCULATE_SECONDS = function (dataMin, dataMax, expectedCount) {\n        // Calculate range\n        var date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate(), dataMin.getHours(), dataMin.getMinutes());\n        var min = powerbi_visuals_utils_typeutils_1.double.floorWithPrecision(DateTimeSequence.getDelta(date, dataMin, iFormattingService_1.DateTimeUnit.Second));\n        var max = powerbi_visuals_utils_typeutils_1.double.ceilWithPrecision(DateTimeSequence.getDelta(date, dataMax, iFormattingService_1.DateTimeUnit.Second));\n        // Calculate minutes numeric sequence\n        var sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 5, 10, 15, 30, 60, 60 * 2, 60 * 5, 60 * 10, 60 * 15, 60 * 30, 60 * 60]);\n        // Convert to date sequence\n        return DateTimeSequence.fromNumericSequence(date, sequence, iFormattingService_1.DateTimeUnit.Second);\n    };\n    DateTimeSequence.CALCULATE_MILLISECONDS = function (dataMin, dataMax, expectedCount) {\n        // Calculate range\n        var date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate(), dataMin.getHours(), dataMin.getMinutes(), dataMin.getSeconds());\n        var min = DateTimeSequence.getDelta(date, dataMin, iFormattingService_1.DateTimeUnit.Millisecond);\n        var max = DateTimeSequence.getDelta(date, dataMax, iFormattingService_1.DateTimeUnit.Millisecond);\n        // Calculate milliseconds numeric sequence\n        var sequence = NumericSequence.calculate(NumericSequenceRange.calculate(min, max), expectedCount, 0);\n        // Convert to date sequence\n        return DateTimeSequence.fromNumericSequence(date, sequence, iFormattingService_1.DateTimeUnit.Millisecond);\n    };\n    DateTimeSequence.ADD_INTERVAL = function (value, interval, unit) {\n        interval = Math.round(interval);\n        switch (unit) {\n            case iFormattingService_1.DateTimeUnit.Year:\n                return dateUtils.addYears(value, interval);\n            case iFormattingService_1.DateTimeUnit.Month:\n                return dateUtils.addMonths(value, interval);\n            case iFormattingService_1.DateTimeUnit.Week:\n                return dateUtils.addWeeks(value, interval);\n            case iFormattingService_1.DateTimeUnit.Day:\n                return dateUtils.addDays(value, interval);\n            case iFormattingService_1.DateTimeUnit.Hour:\n                return dateUtils.addHours(value, interval);\n            case iFormattingService_1.DateTimeUnit.Minute:\n                return dateUtils.addMinutes(value, interval);\n            case iFormattingService_1.DateTimeUnit.Second:\n                return dateUtils.addSeconds(value, interval);\n            case iFormattingService_1.DateTimeUnit.Millisecond:\n                return dateUtils.addMilliseconds(value, interval);\n        }\n    };\n    DateTimeSequence.fromNumericSequence = function (date, sequence, unit) {\n        var result = new DateTimeSequence(unit);\n        for (var i = 0; i < sequence.sequence.length; i++) {\n            var x = sequence.sequence[i];\n            var d = DateTimeSequence.ADD_INTERVAL(date, x, unit);\n            result.add(d);\n        }\n        result.interval = sequence.interval;\n        result.intervalOffset = sequence.intervalOffset;\n        return result;\n    };\n    DateTimeSequence.getDelta = function (min, max, unit) {\n        var delta = 0;\n        switch (unit) {\n            case iFormattingService_1.DateTimeUnit.Year:\n                delta = max.getFullYear() - min.getFullYear();\n                break;\n            case iFormattingService_1.DateTimeUnit.Month:\n                delta = (max.getFullYear() - min.getFullYear()) * 12 + max.getMonth() - min.getMonth();\n                break;\n            case iFormattingService_1.DateTimeUnit.Week:\n                delta = (max.getTime() - min.getTime()) / (7 * 24 * 3600000);\n                break;\n            case iFormattingService_1.DateTimeUnit.Day:\n                delta = (max.getTime() - min.getTime()) / (24 * 3600000);\n                break;\n            case iFormattingService_1.DateTimeUnit.Hour:\n                delta = (max.getTime() - min.getTime()) / 3600000;\n                break;\n            case iFormattingService_1.DateTimeUnit.Minute:\n                delta = (max.getTime() - min.getTime()) / 60000;\n                break;\n            case iFormattingService_1.DateTimeUnit.Second:\n                delta = (max.getTime() - min.getTime()) / 1000;\n                break;\n            case iFormattingService_1.DateTimeUnit.Millisecond:\n                delta = max.getTime() - min.getTime();\n                break;\n        }\n        return delta;\n    };\n    DateTimeSequence.GET_INTERVAL_UNIT = function (min, max, maxCount) {\n        maxCount = Math.max(maxCount, 2);\n        var totalDays = DateTimeSequence.getDelta(min, max, iFormattingService_1.DateTimeUnit.Day);\n        if (totalDays > 356 && totalDays >= 30 * 6 * maxCount)\n            return iFormattingService_1.DateTimeUnit.Year;\n        if (totalDays > 60 && totalDays > 7 * maxCount)\n            return iFormattingService_1.DateTimeUnit.Month;\n        if (totalDays > 14 && totalDays > 2 * maxCount)\n            return iFormattingService_1.DateTimeUnit.Week;\n        var totalHours = DateTimeSequence.getDelta(min, max, iFormattingService_1.DateTimeUnit.Hour);\n        if (totalDays > 2 && totalHours > 12 * maxCount)\n            return iFormattingService_1.DateTimeUnit.Day;\n        if (totalHours >= 24 && totalHours >= maxCount)\n            return iFormattingService_1.DateTimeUnit.Hour;\n        var totalMinutes = DateTimeSequence.getDelta(min, max, iFormattingService_1.DateTimeUnit.Minute);\n        if (totalMinutes > 2 && totalMinutes >= maxCount)\n            return iFormattingService_1.DateTimeUnit.Minute;\n        var totalSeconds = DateTimeSequence.getDelta(min, max, iFormattingService_1.DateTimeUnit.Second);\n        if (totalSeconds > 2 && totalSeconds >= 0.8 * maxCount)\n            return iFormattingService_1.DateTimeUnit.Second;\n        var totalMilliseconds = DateTimeSequence.getDelta(min, max, iFormattingService_1.DateTimeUnit.Millisecond);\n        if (totalMilliseconds > 0)\n            return iFormattingService_1.DateTimeUnit.Millisecond;\n        // If the size of the range is 0 we need to guess the unit based on the date's non-zero values starting with milliseconds\n        var date = min;\n        if (date.getMilliseconds() !== 0)\n            return iFormattingService_1.DateTimeUnit.Millisecond;\n        if (date.getSeconds() !== 0)\n            return iFormattingService_1.DateTimeUnit.Second;\n        if (date.getMinutes() !== 0)\n            return iFormattingService_1.DateTimeUnit.Minute;\n        if (date.getHours() !== 0)\n            return iFormattingService_1.DateTimeUnit.Hour;\n        if (date.getDate() !== 1)\n            return iFormattingService_1.DateTimeUnit.Day;\n        if (date.getMonth() !== 0)\n            return iFormattingService_1.DateTimeUnit.Month;\n        return iFormattingService_1.DateTimeUnit.Year;\n    };\n    // Constants\n    DateTimeSequence.MIN_COUNT = 1;\n    DateTimeSequence.MAX_COUNT = 1000;\n    return DateTimeSequence;\n}());\nexports.DateTimeSequence = DateTimeSequence;\n//# sourceMappingURL=dateTimeSequence.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addMilliseconds = exports.addSeconds = exports.addMinutes = exports.addHours = exports.addDays = exports.addWeeks = exports.addMonths = exports.addYears = void 0;\n// dateUtils module provides DateTimeSequence with set of additional date manipulation routines\nvar MonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar MonthDaysLeap = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n/**\n * Returns bool indicating weither the provided year is a leap year.\n * @param year - year value\n */\nfunction isLeap(year) {\n    return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n/**\n * Returns number of days in the provided year/month.\n * @param year - year value\n * @param month - month value\n */\nfunction getMonthDays(year, month) {\n    return isLeap(year) ? MonthDaysLeap[month] : MonthDays[month];\n}\n/**\n * Adds a specified number of years to the provided date.\n * @param date - date value\n * @param yearDelta - number of years to add\n */\nfunction addYears(date, yearDelta) {\n    var year = date.getFullYear();\n    var month = date.getMonth();\n    var day = date.getDate();\n    var isLeapDay = month === 2 && day === 29;\n    var result = new Date(date.getTime());\n    year = year + yearDelta;\n    if (isLeapDay && !isLeap(year)) {\n        day = 28;\n    }\n    result.setFullYear(year, month, day);\n    return result;\n}\nexports.addYears = addYears;\n/**\n * Adds a specified number of months to the provided date.\n * @param date - date value\n * @param monthDelta - number of months to add\n */\nfunction addMonths(date, monthDelta) {\n    var year = date.getFullYear();\n    var month = date.getMonth();\n    var day = date.getDate();\n    var result = new Date(date.getTime());\n    year += (monthDelta - (monthDelta % 12)) / 12;\n    month += monthDelta % 12;\n    // VSTS 1325771: Certain column charts don't display any data\n    // Wrap arround the month if is after december (value 11)\n    if (month > 11) {\n        month = month % 12;\n        year++;\n    }\n    day = Math.min(day, getMonthDays(year, month));\n    result.setFullYear(year, month, day);\n    return result;\n}\nexports.addMonths = addMonths;\n/**\n * Adds a specified number of weeks to the provided date.\n * @param date - date value\n * @param weeks - number of weeks to add\n */\nfunction addWeeks(date, weeks) {\n    return addDays(date, weeks * 7);\n}\nexports.addWeeks = addWeeks;\n/**\n * Adds a specified number of days to the provided date.\n * @param date - date value\n * @param days - number of days to add\n */\nfunction addDays(date, days) {\n    var year = date.getFullYear();\n    var month = date.getMonth();\n    var day = date.getDate();\n    var result = new Date(date.getTime());\n    result.setFullYear(year, month, day + days);\n    return result;\n}\nexports.addDays = addDays;\n/**\n * Adds a specified number of hours to the provided date.\n * @param date - date value\n * @param hours - number of hours to add\n */\nfunction addHours(date, hours) {\n    return new Date(date.getTime() + hours * 3600000);\n}\nexports.addHours = addHours;\n/**\n * Adds a specified number of minutes to the provided date.\n * @param date - date value\n * @param minutes - number of minutes to add\n */\nfunction addMinutes(date, minutes) {\n    return new Date(date.getTime() + minutes * 60000);\n}\nexports.addMinutes = addMinutes;\n/**\n * Adds a specified number of seconds to the provided date.\n * @param date - date value\n * @param seconds - number of seconds to add\n */\nfunction addSeconds(date, seconds) {\n    return new Date(date.getTime() + seconds * 1000);\n}\nexports.addSeconds = addSeconds;\n/**\n * Adds a specified number of milliseconds to the provided date.\n * @param date - date value\n * @param milliseconds - number of milliseconds to add\n */\nfunction addMilliseconds(date, milliseconds) {\n    return new Date(date.getTime() + milliseconds);\n}\nexports.addMilliseconds = addMilliseconds;\n//# sourceMappingURL=dateUtils.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataLabelsDisplayUnitSystem = exports.WholeUnitsDisplayUnitSystem = exports.DefaultDisplayUnitSystem = exports.NoDisplayUnitSystem = exports.DisplayUnitSystem = exports.DisplayUnit = void 0;\n/* eslint-disable no-useless-escape */\nvar formattingService_1 = require(\"./../formattingService/formattingService\");\nvar powerbi_visuals_utils_typeutils_1 = require(\"powerbi-visuals-utils-typeutils\");\n// Constants\nvar maxExponent = 24;\nvar defaultScientificBigNumbersBoundary = 1E15;\nvar scientificSmallNumbersBoundary = 1E-4;\nvar PERCENTAGE_FORMAT = \"%\";\nvar SCIENTIFIC_FORMAT = \"E+0\";\nvar DEFAULT_SCIENTIFIC_FORMAT = \"0.##\" + SCIENTIFIC_FORMAT;\n// Regular expressions\n/**\n * This regex looks for strings that match one of the following conditions:\n *   - Optionally contain \"0\", \"#\", followed by a period, followed by at least one \"0\" or \"#\" (Ex. ###,000.###)\n *   - Contains at least one of \"0\", \"#\", or \",\" (Ex. ###,000)\n *   - Contain a \"g\" (indicates to use the general .NET numeric format string)\n * The entire string (start to end) must match, and the match is not case-sensitive.\n */\nvar SUPPORTED_SCIENTIFIC_FORMATS = /^([0\\#,]*\\.[0\\#]+|[0\\#,]+|g)$/i;\nvar DisplayUnit = /** @class */ (function () {\n    function DisplayUnit() {\n    }\n    // Methods\n    DisplayUnit.prototype.project = function (value) {\n        if (this.value) {\n            return powerbi_visuals_utils_typeutils_1.double.removeDecimalNoise(value / this.value);\n        }\n        else {\n            return value;\n        }\n    };\n    DisplayUnit.prototype.reverseProject = function (value) {\n        if (this.value) {\n            return value * this.value;\n        }\n        else {\n            return value;\n        }\n    };\n    DisplayUnit.prototype.isApplicableTo = function (value) {\n        value = Math.abs(value);\n        var precision = powerbi_visuals_utils_typeutils_1.double.getPrecision(value, 3);\n        return powerbi_visuals_utils_typeutils_1.double.greaterOrEqualWithPrecision(value, this.applicableRangeMin, precision) && powerbi_visuals_utils_typeutils_1.double.lessWithPrecision(value, this.applicableRangeMax, precision);\n    };\n    DisplayUnit.prototype.isScaling = function () {\n        return this.value > 1;\n    };\n    return DisplayUnit;\n}());\nexports.DisplayUnit = DisplayUnit;\nvar DisplayUnitSystem = /** @class */ (function () {\n    // Constructor\n    function DisplayUnitSystem(units) {\n        this.units = units ? units : [];\n    }\n    Object.defineProperty(DisplayUnitSystem.prototype, \"title\", {\n        // Properties\n        get: function () {\n            return this.displayUnit ? this.displayUnit.title : undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Methods\n    DisplayUnitSystem.prototype.update = function (value) {\n        if (value === undefined)\n            return;\n        this.unitBaseValue = value;\n        this.displayUnit = this.findApplicableDisplayUnit(value);\n    };\n    DisplayUnitSystem.prototype.findApplicableDisplayUnit = function (value) {\n        for (var _i = 0, _a = this.units; _i < _a.length; _i++) {\n            var unit = _a[_i];\n            if (unit.isApplicableTo(value))\n                return unit;\n        }\n        return undefined;\n    };\n    DisplayUnitSystem.prototype.format = function (value, format, decimals, trailingZeros, cultureSelector) {\n        decimals = this.getNumberOfDecimalsForFormatting(format, decimals);\n        var nonScientificFormat = \"\";\n        if (this.isFormatSupported(format)\n            && !this.hasScientitifcFormat(format)\n            && this.isScalingUnit()\n            && this.shouldRespectScalingUnit(format)) {\n            value = this.displayUnit.project(value);\n            nonScientificFormat = this.displayUnit.labelFormat;\n        }\n        return this.formatHelper({\n            value: value,\n            nonScientificFormat: nonScientificFormat,\n            format: format,\n            decimals: decimals,\n            trailingZeros: trailingZeros,\n            cultureSelector: cultureSelector\n        });\n    };\n    DisplayUnitSystem.prototype.isFormatSupported = function (format) {\n        return !DisplayUnitSystem.UNSUPPORTED_FORMATS.test(format);\n    };\n    DisplayUnitSystem.prototype.isPercentageFormat = function (format) {\n        return format && format.indexOf(PERCENTAGE_FORMAT) >= 0;\n    };\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    DisplayUnitSystem.prototype.shouldRespectScalingUnit = function (format) {\n        return true;\n    };\n    DisplayUnitSystem.prototype.getNumberOfDecimalsForFormatting = function (format, decimals) {\n        return decimals;\n    };\n    DisplayUnitSystem.prototype.isScalingUnit = function () {\n        return this.displayUnit && this.displayUnit.isScaling();\n    };\n    DisplayUnitSystem.prototype.formatHelper = function (options) {\n        var value = options.value, cultureSelector = options.cultureSelector, decimals = options.decimals, trailingZeros = options.trailingZeros;\n        var nonScientificFormat = options.nonScientificFormat, format = options.format;\n        // If the format is \"general\" and we want to override the number of decimal places then use the default numeric format string.\n        if ((format === \"g\" || format === \"G\") && decimals != null) {\n            format = \"#,0.00\";\n        }\n        format = formattingService_1.numberFormat.addDecimalsToFormat(format, decimals, trailingZeros);\n        if (format && !formattingService_1.formattingService.isStandardNumberFormat(format)) {\n            return formattingService_1.formattingService.formatNumberWithCustomOverride(value, format, nonScientificFormat, cultureSelector);\n        }\n        if (!format) {\n            format = \"G\";\n        }\n        if (!nonScientificFormat) {\n            nonScientificFormat = \"{0}\";\n        }\n        var text = formattingService_1.formattingService.formatValue(value, format, cultureSelector);\n        return formattingService_1.formattingService.format(nonScientificFormat, [text]);\n    };\n    //  Formats a single value by choosing an appropriate base for the DisplayUnitSystem before formatting.\n    DisplayUnitSystem.prototype.formatSingleValue = function (value, format, decimals, trailingZeros, cultureSelector) {\n        // Change unit base to a value appropriate for this value\n        this.update(this.shouldUseValuePrecision(value) ? powerbi_visuals_utils_typeutils_1.double.getPrecision(value, 8) : value);\n        return this.format(value, format, decimals, trailingZeros, cultureSelector);\n    };\n    DisplayUnitSystem.prototype.shouldUseValuePrecision = function (value) {\n        if (this.units.length === 0)\n            return true;\n        // Check if the value is big enough to have a valid unit by checking against the smallest unit (that it's value bigger than 1).\n        var applicableRangeMin = 0;\n        for (var i = 0; i < this.units.length; i++) {\n            if (this.units[i].isScaling()) {\n                applicableRangeMin = this.units[i].applicableRangeMin;\n                break;\n            }\n        }\n        return Math.abs(value) < applicableRangeMin;\n    };\n    DisplayUnitSystem.prototype.isScientific = function (value) {\n        return value < -defaultScientificBigNumbersBoundary || value > defaultScientificBigNumbersBoundary ||\n            (-scientificSmallNumbersBoundary < value && value < scientificSmallNumbersBoundary && value !== 0);\n    };\n    DisplayUnitSystem.prototype.hasScientitifcFormat = function (format) {\n        return format && format.toUpperCase().indexOf(\"E\") !== -1;\n    };\n    DisplayUnitSystem.prototype.supportsScientificFormat = function (format) {\n        if (format)\n            return SUPPORTED_SCIENTIFIC_FORMATS.test(format);\n        return true;\n    };\n    DisplayUnitSystem.prototype.shouldFallbackToScientific = function (value, format) {\n        return !this.hasScientitifcFormat(format)\n            && this.supportsScientificFormat(format)\n            && this.isScientific(value);\n    };\n    DisplayUnitSystem.prototype.getScientificFormat = function (data, format, decimals, trailingZeros) {\n        // Use scientific format outside of the range\n        if (this.isFormatSupported(format) && this.shouldFallbackToScientific(data, format)) {\n            var numericFormat = formattingService_1.numberFormat.getNumericFormat(data, format);\n            if (decimals)\n                numericFormat = formattingService_1.numberFormat.addDecimalsToFormat(numericFormat ? numericFormat : \"0\", Math.abs(decimals), trailingZeros);\n            if (numericFormat)\n                return numericFormat + SCIENTIFIC_FORMAT;\n            else\n                return DEFAULT_SCIENTIFIC_FORMAT;\n        }\n        return format;\n    };\n    DisplayUnitSystem.UNSUPPORTED_FORMATS = /^(p\\d*)|(e\\d*)$/i;\n    return DisplayUnitSystem;\n}());\nexports.DisplayUnitSystem = DisplayUnitSystem;\n// Provides a unit system that is defined by formatting in the model, and is suitable for visualizations shown in single number visuals in explore mode.\nvar NoDisplayUnitSystem = /** @class */ (function (_super) {\n    __extends(NoDisplayUnitSystem, _super);\n    // Constructor\n    function NoDisplayUnitSystem() {\n        return _super.call(this, []) || this;\n    }\n    return NoDisplayUnitSystem;\n}(DisplayUnitSystem));\nexports.NoDisplayUnitSystem = NoDisplayUnitSystem;\n/** Provides a unit system that creates a more concise format for displaying values. This is suitable for most of the cases where\n    we are showing values (chart axes) and as such it is the default unit system. */\nvar DefaultDisplayUnitSystem = /** @class */ (function (_super) {\n    __extends(DefaultDisplayUnitSystem, _super);\n    // Constructor\n    function DefaultDisplayUnitSystem(unitLookup) {\n        return _super.call(this, DefaultDisplayUnitSystem.getUnits(unitLookup)) || this;\n    }\n    // Methods\n    DefaultDisplayUnitSystem.prototype.format = function (data, format, decimals, trailingZeros, cultureSelector) {\n        format = this.getScientificFormat(data, format, decimals, trailingZeros);\n        return _super.prototype.format.call(this, data, format, decimals, trailingZeros, cultureSelector);\n    };\n    DefaultDisplayUnitSystem.RESET = function () {\n        DefaultDisplayUnitSystem.units = null;\n    };\n    DefaultDisplayUnitSystem.getUnits = function (unitLookup) {\n        if (!DefaultDisplayUnitSystem.units) {\n            DefaultDisplayUnitSystem.units = createDisplayUnits(unitLookup, function (value, previousUnitValue, min) {\n                // When dealing with millions/billions/trillions we need to switch to millions earlier: for example instead of showing 100K 200K 300K we should show 0.1M 0.2M 0.3M etc\n                if (value - previousUnitValue >= 1000) {\n                    return value / 10;\n                }\n                return min;\n            });\n            // Ensure last unit has max of infinity\n            DefaultDisplayUnitSystem.units[DefaultDisplayUnitSystem.units.length - 1].applicableRangeMax = Infinity;\n        }\n        return DefaultDisplayUnitSystem.units;\n    };\n    return DefaultDisplayUnitSystem;\n}(DisplayUnitSystem));\nexports.DefaultDisplayUnitSystem = DefaultDisplayUnitSystem;\n/** Provides a unit system that creates a more concise format for displaying values, but only allows showing a unit if we have at least\n    one of those units (e.g. 0.9M is not allowed since it's less than 1 million). This is suitable for cases such as dashboard tiles\n    where we have restricted space but do not want to show partial units. */\nvar WholeUnitsDisplayUnitSystem = /** @class */ (function (_super) {\n    __extends(WholeUnitsDisplayUnitSystem, _super);\n    // Constructor\n    function WholeUnitsDisplayUnitSystem(unitLookup) {\n        return _super.call(this, WholeUnitsDisplayUnitSystem.getUnits(unitLookup)) || this;\n    }\n    WholeUnitsDisplayUnitSystem.RESET = function () {\n        WholeUnitsDisplayUnitSystem.units = null;\n    };\n    WholeUnitsDisplayUnitSystem.getUnits = function (unitLookup) {\n        if (!WholeUnitsDisplayUnitSystem.units) {\n            WholeUnitsDisplayUnitSystem.units = createDisplayUnits(unitLookup);\n            // Ensure last unit has max of infinity\n            WholeUnitsDisplayUnitSystem.units[WholeUnitsDisplayUnitSystem.units.length - 1].applicableRangeMax = Infinity;\n        }\n        return WholeUnitsDisplayUnitSystem.units;\n    };\n    WholeUnitsDisplayUnitSystem.prototype.format = function (data, format, decimals, trailingZeros, cultureSelector) {\n        format = this.getScientificFormat(data, format, decimals, trailingZeros);\n        return _super.prototype.format.call(this, data, format, decimals, trailingZeros, cultureSelector);\n    };\n    return WholeUnitsDisplayUnitSystem;\n}(DisplayUnitSystem));\nexports.WholeUnitsDisplayUnitSystem = WholeUnitsDisplayUnitSystem;\nvar DataLabelsDisplayUnitSystem = /** @class */ (function (_super) {\n    __extends(DataLabelsDisplayUnitSystem, _super);\n    function DataLabelsDisplayUnitSystem(unitLookup) {\n        return _super.call(this, DataLabelsDisplayUnitSystem.getUnits(unitLookup)) || this;\n    }\n    DataLabelsDisplayUnitSystem.prototype.isFormatSupported = function (format) {\n        return !DataLabelsDisplayUnitSystem.UNSUPPORTED_FORMATS.test(format);\n    };\n    DataLabelsDisplayUnitSystem.getUnits = function (unitLookup) {\n        if (!DataLabelsDisplayUnitSystem.units) {\n            var units = [];\n            var adjustMinBasedOnPreviousUnit = function (value, previousUnitValue, min) {\n                // Never returns true, we are always ignoring\n                // We do not early switch (e.g. 100K instead of 0.1M)\n                // Intended? If so, remove this function, otherwise, remove if statement\n                if (value === -1)\n                    if (value - previousUnitValue >= 1000) {\n                        return value / 10;\n                    }\n                return min;\n            };\n            // Add Auto & None\n            var names = unitLookup(-1);\n            addUnitIfNonEmpty(units, DataLabelsDisplayUnitSystem.AUTO_DISPLAYUNIT_VALUE, names.title, names.format, adjustMinBasedOnPreviousUnit);\n            names = unitLookup(0);\n            addUnitIfNonEmpty(units, DataLabelsDisplayUnitSystem.NONE_DISPLAYUNIT_VALUE, names.title, names.format, adjustMinBasedOnPreviousUnit);\n            // Add normal units\n            DataLabelsDisplayUnitSystem.units = units.concat(createDisplayUnits(unitLookup, adjustMinBasedOnPreviousUnit));\n            // Ensure last unit has max of infinity\n            DataLabelsDisplayUnitSystem.units[DataLabelsDisplayUnitSystem.units.length - 1].applicableRangeMax = Infinity;\n        }\n        return DataLabelsDisplayUnitSystem.units;\n    };\n    DataLabelsDisplayUnitSystem.prototype.format = function (data, format, decimals, trailingZeros, cultureSelector) {\n        format = this.getScientificFormat(data, format, decimals, trailingZeros);\n        return _super.prototype.format.call(this, data, format, decimals, trailingZeros, cultureSelector);\n    };\n    // Constants\n    DataLabelsDisplayUnitSystem.AUTO_DISPLAYUNIT_VALUE = 0;\n    DataLabelsDisplayUnitSystem.NONE_DISPLAYUNIT_VALUE = 1;\n    DataLabelsDisplayUnitSystem.UNSUPPORTED_FORMATS = /^(e\\d*)$/i;\n    return DataLabelsDisplayUnitSystem;\n}(DisplayUnitSystem));\nexports.DataLabelsDisplayUnitSystem = DataLabelsDisplayUnitSystem;\nfunction createDisplayUnits(unitLookup, adjustMinBasedOnPreviousUnit) {\n    var units = [];\n    for (var i = 3; i < maxExponent; i++) {\n        var names = unitLookup(i);\n        if (names)\n            addUnitIfNonEmpty(units, powerbi_visuals_utils_typeutils_1.double.pow10(i), names.title, names.format, adjustMinBasedOnPreviousUnit);\n    }\n    return units;\n}\nfunction addUnitIfNonEmpty(units, value, title, labelFormat, adjustMinBasedOnPreviousUnit) {\n    if (title || labelFormat) {\n        var min = value;\n        if (units.length > 0) {\n            var previousUnit = units[units.length - 1];\n            if (adjustMinBasedOnPreviousUnit)\n                min = adjustMinBasedOnPreviousUnit(value, previousUnit.value, min);\n            previousUnit.applicableRangeMax = min;\n        }\n        var unit = new DisplayUnit();\n        unit.value = value;\n        unit.applicableRangeMin = min;\n        unit.applicableRangeMax = min * 1000;\n        unit.title = title;\n        unit.labelFormat = labelFormat;\n        units.push(unit);\n    }\n}\n//# sourceMappingURL=displayUnitSystem.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DisplayUnitSystemType = void 0;\n// The system used to determine display units used during formatting\nvar DisplayUnitSystemType;\n(function (DisplayUnitSystemType) {\n    // Default display unit system, which saves space by using units such as K, M, bn with PowerView rules for when to pick a unit. Suitable for chart axes.\n    DisplayUnitSystemType[DisplayUnitSystemType[\"Default\"] = 0] = \"Default\";\n    // A verbose display unit system that will only respect the formatting defined in the model. Suitable for explore mode single-value cards.\n    DisplayUnitSystemType[DisplayUnitSystemType[\"Verbose\"] = 1] = \"Verbose\";\n    /**\n     * A display unit system that uses units such as K, M, bn if we have at least one of those units (e.g. 0.9M is not valid as it's less than 1 million).\n     * Suitable for dashboard tile cards\n     */\n    DisplayUnitSystemType[DisplayUnitSystemType[\"WholeUnits\"] = 2] = \"WholeUnits\";\n    // A display unit system that also contains Auto and None units for data labels\n    DisplayUnitSystemType[DisplayUnitSystemType[\"DataLabels\"] = 3] = \"DataLabels\";\n})(DisplayUnitSystemType = exports.DisplayUnitSystemType || (exports.DisplayUnitSystemType = {}));\n//# sourceMappingURL=displayUnitSystemType.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Family = exports.fallbackFonts = void 0;\nvar familyInfo_1 = require(\"./familyInfo\");\nexports.fallbackFonts = [\"helvetica\", \"arial\", \"sans-serif\"];\nexports.Family = {\n    light: new familyInfo_1.FamilyInfo(exports.fallbackFonts),\n    semilight: new familyInfo_1.FamilyInfo(exports.fallbackFonts),\n    regular: new familyInfo_1.FamilyInfo(exports.fallbackFonts),\n    semibold: new familyInfo_1.FamilyInfo(exports.fallbackFonts),\n    bold: new familyInfo_1.FamilyInfo(exports.fallbackFonts),\n    lightSecondary: new familyInfo_1.FamilyInfo(exports.fallbackFonts),\n    regularSecondary: new familyInfo_1.FamilyInfo(exports.fallbackFonts),\n    boldSecondary: new familyInfo_1.FamilyInfo(exports.fallbackFonts)\n};\n//# sourceMappingURL=family.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FamilyInfo = void 0;\nvar FamilyInfo = /** @class */ (function () {\n    function FamilyInfo(families) {\n        this.families = families;\n    }\n    Object.defineProperty(FamilyInfo.prototype, \"family\", {\n        /**\n         * Gets the first font \"wf_\" font family since it will always be loaded.\n         */\n        get: function () {\n            return this.getFamily();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n    * Gets the first font family that matches regex (if provided).\n    * Default regex looks for \"wf_\" fonts which are always loaded.\n    */\n    FamilyInfo.prototype.getFamily = function (regex) {\n        if (regex === void 0) { regex = /^wf_/; }\n        if (!this.families) {\n            return null;\n        }\n        if (regex) {\n            for (var _i = 0, _a = this.families; _i < _a.length; _i++) {\n                var fontFamily = _a[_i];\n                if (regex.test(fontFamily)) {\n                    return fontFamily;\n                }\n            }\n        }\n        return this.families[0];\n    };\n    Object.defineProperty(FamilyInfo.prototype, \"css\", {\n        /**\n         * Gets the CSS string for the \"font-family\" CSS attribute.\n         */\n        get: function () {\n            return this.getCSS();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the CSS string for the \"font-family\" CSS attribute.\n     */\n    FamilyInfo.prototype.getCSS = function () {\n        return this.families ? this.families.map((function (font) { return font.indexOf(\" \") > 0 ? \"'\" + font + \"'\" : font; })).join(\", \") : null;\n    };\n    return FamilyInfo;\n}());\nexports.FamilyInfo = FamilyInfo;\n//# sourceMappingURL=familyInfo.js.map","\"use strict\";\n/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\n/* eslint-disable no-useless-escape */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixDateTimeFormat = exports.findDateFormat = void 0;\nvar regexCache;\n/**\n * Translate .NET format into something supported by Globalize.\n */\nfunction findDateFormat(value, format, cultureName) {\n    switch (format) {\n        case \"m\":\n            // Month + day\n            format = \"M\";\n            break;\n        case \"O\":\n        case \"o\":\n            // Roundtrip\n            format = \"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'0000'\";\n            break;\n        case \"R\":\n        case \"r\":\n            // RFC1123 pattern - - time must be converted to UTC before formatting\n            value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\n            format = \"ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\";\n            break;\n        case \"s\":\n            // Sortable - should use invariant culture\n            format = \"S\";\n            break;\n        case \"u\":\n            // Universal sortable - should convert to UTC before applying the \"yyyy'-'MM'-'dd HH':'mm':'ss'Z' format.\n            value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\n            format = \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\";\n            break;\n        case \"U\":\n            // Universal full - the pattern is same as F but the time must be converted to UTC before formatting\n            value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\n            format = \"F\";\n            break;\n        case \"y\":\n        case \"Y\":\n            // Year and month\n            switch (cultureName) {\n                case \"default\":\n                case \"en\":\n                case \"en-US\":\n                    format = \"MMMM, yyyy\"; // Fix the default year-month pattern for english\n                    break;\n                default:\n                    format = \"Y\"; // For other cultures - use the localized pattern\n            }\n            break;\n    }\n    return { value: value, format: format };\n}\nexports.findDateFormat = findDateFormat;\n/**\n * Translates unsupported .NET custom format expressions to the custom expressions supported by Globalize.\n */\nfunction fixDateTimeFormat(format) {\n    // Fix for the \"K\" format (timezone):\n    // T he js dates don't have a kind property so we'll support only local kind which is equavalent to zzz format.\n    format = format.replace(/%K/g, \"zzz\");\n    format = format.replace(/K/g, \"zzz\");\n    format = format.replace(/fffffff/g, \"fff0000\");\n    format = format.replace(/ffffff/g, \"fff000\");\n    format = format.replace(/fffff/g, \"fff00\");\n    format = format.replace(/ffff/g, \"fff0\");\n    // Fix for the 5 digit year: \"yyyyy\" format.\n    // The Globalize doesn't support dates greater than 9999 so we replace the \"yyyyy\" with \"0yyyy\".\n    format = format.replace(/yyyyy/g, \"0yyyy\");\n    // Fix for the 3 digit year: \"yyy\" format.\n    // The Globalize doesn't support this formatting so we need to replace it with the 4 digit year \"yyyy\" format.\n    format = format.replace(/(^y|^)yyy(^y|$)/g, \"yyyy\");\n    if (!regexCache) {\n        // Creating Regexes for cases \"Using single format specifier\"\n        // - http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx#UsingSingleSpecifiers\n        // This is not supported from The Globalize.\n        // The case covers all single \"%\" lead specifier (like \"%d\" but not %dd)\n        // The cases as single \"%d\" are filtered in if the bellow.\n        // (?!S) where S is the specifier make sure that we only one symbol for specifier.\n        regexCache = [\"d\", \"f\", \"F\", \"g\", \"h\", \"H\", \"K\", \"m\", \"M\", \"s\", \"t\", \"y\", \"z\", \":\", \"/\"].map(function (s) {\n            return { r: new RegExp(\"\\%\" + s + \"(?!\" + s + \")\", \"g\"), s: s };\n        });\n    }\n    if (format.indexOf(\"%\") !== -1 && format.length > 2) {\n        for (var i = 0; i < regexCache.length; i++) {\n            format = format.replace(regexCache[i].r, regexCache[i].s);\n        }\n    }\n    return format;\n}\nexports.fixDateTimeFormat = fixDateTimeFormat;\n//# sourceMappingURL=formatting.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.format = exports.canFormat = void 0;\nvar formatting_1 = require(\"./../formatting\");\nvar formattingEncoder = require(\"./formattingEncoder\");\nvar stringExtensions = require(\"./../stringExtensions\");\nvar globalize_1 = require(\"./../../globalize/globalize\");\nvar _currentCachedFormat;\nvar _currentCachedProcessedFormat;\n// Evaluates if the value can be formatted using the NumberFormat\nfunction canFormat(value) {\n    return value instanceof Date;\n}\nexports.canFormat = canFormat;\n// Formats the date using provided format and culture\nfunction format(value, format, culture) {\n    format = format || \"G\";\n    var isStandard = format.length === 1;\n    try {\n        if (isStandard) {\n            return formatDateStandard(value, format, culture);\n        }\n        else {\n            return formatDateCustom(value, format, culture);\n        }\n    }\n    catch (e) {\n        return formatDateStandard(value, \"G\", culture);\n    }\n}\nexports.format = format;\n// Formats the date using standard format expression\nfunction formatDateStandard(value, format, culture) {\n    // In order to provide parity with .NET we have to support additional set of DateTime patterns.\n    var patterns = culture.calendar.patterns;\n    // Extend supported set of patterns\n    ensurePatterns(culture.calendar);\n    // Handle extended set of formats\n    var output = (0, formatting_1.findDateFormat)(value, format, culture.name);\n    if (output.format.length === 1)\n        format = patterns[output.format];\n    else\n        format = output.format;\n    // need to revisit when globalization is enabled\n    if (!culture) {\n        culture = this.getCurrentCulture();\n    }\n    return globalize_1.Globalize.format(output.value, format, culture);\n}\n// Formats the date using custom format expression\nfunction formatDateCustom(value, format, culture) {\n    var result;\n    var literals = [];\n    format = formattingEncoder.preserveLiterals(format, literals);\n    if (format.indexOf(\"F\") > -1) {\n        // F is not supported so we need to replace the F with f based on the milliseconds\n        // Replace all sequences of F longer than 3 with \"FFF\"\n        format = stringExtensions.replaceAll(format, \"FFFF\", \"FFF\");\n        // Based on milliseconds update the format to use fff\n        var milliseconds = value.getMilliseconds();\n        if (milliseconds % 10 >= 1) {\n            format = stringExtensions.replaceAll(format, \"FFF\", \"fff\");\n        }\n        format = stringExtensions.replaceAll(format, \"FFF\", \"FF\");\n        if ((milliseconds % 100) / 10 >= 1) {\n            format = stringExtensions.replaceAll(format, \"FF\", \"ff\");\n        }\n        format = stringExtensions.replaceAll(format, \"FF\", \"F\");\n        if ((milliseconds % 1000) / 100 >= 1) {\n            format = stringExtensions.replaceAll(format, \"F\", \"f\");\n        }\n        format = stringExtensions.replaceAll(format, \"F\", \"\");\n        if (format === \"\" || format === \"%\")\n            return \"\";\n    }\n    format = processCustomDateTimeFormat(format);\n    result = globalize_1.Globalize.format(value, format, culture);\n    result = localize(result, culture.calendar);\n    result = formattingEncoder.restoreLiterals(result, literals, false);\n    return result;\n}\n// Translates unsupported .NET custom format expressions to the custom expressions supported by JQuery.Globalize\nfunction processCustomDateTimeFormat(format) {\n    if (format === _currentCachedFormat) {\n        return _currentCachedProcessedFormat;\n    }\n    _currentCachedFormat = format;\n    format = (0, formatting_1.fixDateTimeFormat)(format);\n    _currentCachedProcessedFormat = format;\n    return format;\n}\n// Localizes the time separator symbol\nfunction localize(value, dictionary) {\n    var timeSeparator = dictionary[\":\"];\n    if (timeSeparator === \":\") {\n        return value;\n    }\n    var result = \"\";\n    var count = value.length;\n    for (var i = 0; i < count; i++) {\n        var char = value.charAt(i);\n        switch (char) {\n            case \":\":\n                result += timeSeparator;\n                break;\n            default:\n                result += char;\n                break;\n        }\n    }\n    return result;\n}\nfunction ensurePatterns(calendar) {\n    var patterns = calendar.patterns;\n    if (patterns[\"g\"] === undefined) {\n        patterns[\"g\"] = patterns[\"f\"].replace(patterns[\"D\"], patterns[\"d\"]); // Generic: Short date, short time\n        patterns[\"G\"] = patterns[\"F\"].replace(patterns[\"D\"], patterns[\"d\"]); // Generic: Short date, long time\n    }\n}\n//# sourceMappingURL=dateTimeFormat.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.restoreLiterals = exports.preserveLiterals = exports.removeLiterals = void 0;\n// quoted and escaped literal patterns\n// NOTE: the final three cases match .NET behavior\nvar literalPatterns = [\n    \"'[^']*'\",\n    \"\\\"[^\\\"]*\\\"\",\n    \"\\\\\\\\.\",\n    \"'[^']*$\",\n    \"\\\"[^\\\"]*$\",\n    \"\\\\\\\\$\", // backslash at end of string\n];\nvar literalMatcher = new RegExp(literalPatterns.join(\"|\"), \"g\");\n// Unicode U+E000 - U+F8FF is a private area and so we can use the chars from the range to encode the escaped sequences\nfunction removeLiterals(format) {\n    literalMatcher.lastIndex = 0;\n    // just in case consecutive non-literals have some meaning\n    return format.replace(literalMatcher, \"\\uE100\");\n}\nexports.removeLiterals = removeLiterals;\nfunction preserveLiterals(format, literals) {\n    literalMatcher.lastIndex = 0;\n    for (;;) {\n        var match = literalMatcher.exec(format);\n        if (!match)\n            break;\n        var literal = match[0];\n        var literalOffset = literalMatcher.lastIndex - literal.length;\n        var token = String.fromCharCode(0xE100 + literals.length);\n        literals.push(literal);\n        format = format.substring(0, literalOffset) + token + format.substring(literalMatcher.lastIndex);\n        // back to avoid skipping due to removed literal substring\n        literalMatcher.lastIndex = literalOffset + 1;\n    }\n    return format;\n}\nexports.preserveLiterals = preserveLiterals;\nfunction restoreLiterals(format, literals, quoted) {\n    if (quoted === void 0) { quoted = true; }\n    var count = literals.length;\n    for (var i = 0; i < count; i++) {\n        var token = String.fromCharCode(0xE100 + i);\n        var literal = literals[i];\n        if (!quoted) {\n            // caller wants literals to be re-inserted without escaping\n            var firstChar = literal[0];\n            if (firstChar === \"\\\\\" || literal.length === 1 || literal[literal.length - 1] !== firstChar) {\n                // either escaped literal OR quoted literal that's missing the trailing quote\n                // in either case we only remove the leading character\n                literal = literal.substring(1);\n            }\n            else {\n                // so must be a quoted literal with both starting and ending quote\n                literal = literal.substring(1, literal.length - 1);\n            }\n        }\n        format = format.replace(token, literal);\n    }\n    return format;\n}\nexports.restoreLiterals = restoreLiterals;\n//# sourceMappingURL=formattingEncoder.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n/* eslint-disable no-useless-escape */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formattingEncoder = exports.dateTimeFormat = exports.numberFormat = exports.formattingService = exports.FormattingService = void 0;\nvar globalize_1 = require(\"./../../globalize/globalize\");\nvar globalize_cultures_1 = require(\"./../../globalize/globalize.cultures\");\n(0, globalize_cultures_1.default)(globalize_1.Globalize);\nvar dateTimeFormat = require(\"./dateTimeFormat\");\nexports.dateTimeFormat = dateTimeFormat;\nvar numberFormat = require(\"./numberFormat\");\nexports.numberFormat = numberFormat;\nvar formattingEncoder = require(\"./formattingEncoder\");\nexports.formattingEncoder = formattingEncoder;\nvar iFormattingService_1 = require(\"./iFormattingService\");\nvar IndexedTokensRegex = /({{)|(}})|{(\\d+[^}]*)}/g;\n// Formatting Service\nvar FormattingService = /** @class */ (function () {\n    function FormattingService() {\n    }\n    FormattingService.prototype.formatValue = function (value, formatValue, cultureSelector) {\n        // Handle special cases\n        if (value === undefined || value === null) {\n            return \"\";\n        }\n        var gculture = this.getCulture(cultureSelector);\n        if (dateTimeFormat.canFormat(value)) {\n            // Dates\n            return dateTimeFormat.format(value, formatValue, gculture);\n        }\n        else if (numberFormat.canFormat(value)) {\n            // Numbers\n            return numberFormat.format(value, formatValue, gculture);\n        }\n        // Other data types - return as string\n        return value.toString();\n    };\n    FormattingService.prototype.format = function (formatWithIndexedTokens, args, culture) {\n        var _this = this;\n        if (!formatWithIndexedTokens) {\n            return \"\";\n        }\n        return formatWithIndexedTokens.replace(IndexedTokensRegex, function (match, left, right, argToken) {\n            if (left) {\n                return \"{\";\n            }\n            else if (right) {\n                return \"}\";\n            }\n            else {\n                var parts = argToken.split(\":\");\n                var argIndex = parseInt(parts[0], 10);\n                var argFormat = parts[1];\n                return _this.formatValue(args[argIndex], argFormat, culture);\n            }\n        });\n    };\n    FormattingService.prototype.isStandardNumberFormat = function (format) {\n        return numberFormat.isStandardFormat(format);\n    };\n    FormattingService.prototype.formatNumberWithCustomOverride = function (value, format, nonScientificOverrideFormat, culture) {\n        var gculture = this.getCulture(culture);\n        return numberFormat.formatWithCustomOverride(value, format, nonScientificOverrideFormat, gculture);\n    };\n    FormattingService.prototype.dateFormatString = function (unit) {\n        if (!this._dateTimeScaleFormatInfo)\n            this.initialize();\n        return this._dateTimeScaleFormatInfo.getFormatString(unit);\n    };\n    /**\n     * Sets the current localization culture\n     * @param cultureSelector - name of a culture: \"en\", \"en-UK\", \"fr-FR\" etc. (See National Language Support (NLS) for full lists. Use \"default\" for invariant culture).\n     */\n    FormattingService.prototype.setCurrentCulture = function (cultureSelector) {\n        if (this._currentCultureSelector !== cultureSelector) {\n            this._currentCulture = this.getCulture(cultureSelector);\n            this._currentCultureSelector = cultureSelector;\n            this._dateTimeScaleFormatInfo = new DateTimeScaleFormatInfo(this._currentCulture);\n        }\n    };\n    /**\n     * Gets the culture assotiated with the specified cultureSelector (\"en\", \"en-US\", \"fr-FR\" etc).\n     * @param cultureSelector - name of a culture: \"en\", \"en-UK\", \"fr-FR\" etc. (See National Language Support (NLS) for full lists. Use \"default\" for invariant culture).\n     * Exposing this function for testability of unsupported cultures\n     */\n    FormattingService.prototype.getCulture = function (cultureSelector) {\n        if (cultureSelector == null) {\n            if (this._currentCulture == null) {\n                this.initialize();\n            }\n            return this._currentCulture;\n        }\n        else {\n            var culture = globalize_1.Globalize.findClosestCulture(cultureSelector);\n            if (!culture)\n                culture = globalize_1.Globalize.culture(\"en-US\");\n            return culture;\n        }\n    };\n    // By default the Globalization module initializes to the culture/calendar provided in the language/culture URL params\n    FormattingService.prototype.initialize = function () {\n        var cultureName = this.getCurrentCulture();\n        this.setCurrentCulture(cultureName);\n        var calendarName = this.getUrlParam(\"calendar\");\n        if (calendarName) {\n            var culture = this._currentCulture;\n            var c = culture.calendars[calendarName];\n            if (c) {\n                culture.calendar = c;\n            }\n        }\n    };\n    /**\n     *  Exposing this function for testability\n     */\n    FormattingService.prototype.getCurrentCulture = function () {\n        if (window === null || window === void 0 ? void 0 : window.navigator) {\n            return window.navigator.userLanguage || window.navigator[\"language\"];\n        }\n        return \"en-US\";\n    };\n    /**\n     *  Exposing this function for testability\n     *  @param name: queryString name\n     */\n    FormattingService.prototype.getUrlParam = function (name) {\n        var param = window.location.search.match(RegExp(\"[?&]\" + name + \"=([^&]*)\"));\n        return param ? param[1] : undefined;\n    };\n    return FormattingService;\n}());\nexports.FormattingService = FormattingService;\n// DateTimeScaleFormatInfo is used to calculate and keep the Date formats used for different units supported by the DateTimeScaleModel\nvar DateTimeScaleFormatInfo = /** @class */ (function () {\n    // Constructor\n    /**\n     * Creates new instance of the DateTimeScaleFormatInfo class.\n     * @param culture - culture which calendar info is going to be used to derive the formats.\n     */\n    function DateTimeScaleFormatInfo(culture) {\n        var calendar = culture.calendar;\n        var patterns = calendar.patterns;\n        var monthAbbreviations = calendar[\"months\"][\"namesAbbr\"];\n        var cultureHasMonthAbbr = monthAbbreviations && monthAbbreviations[0];\n        var yearMonthPattern = patterns[\"Y\"];\n        var monthDayPattern = patterns[\"M\"];\n        var fullPattern = patterns[\"f\"];\n        var longTimePattern = patterns[\"T\"];\n        var shortTimePattern = patterns[\"t\"];\n        var separator = fullPattern.indexOf(\",\") > -1 ? \", \" : \" \";\n        var hasYearSymbol = yearMonthPattern.indexOf(\"yyyy'\") === 0 && yearMonthPattern.length > 6 && yearMonthPattern[6] === \"\\'\";\n        this.YearPattern = hasYearSymbol ? yearMonthPattern.substring(0, 7) : \"yyyy\";\n        var yearPos = fullPattern.indexOf(\"yy\");\n        var monthPos = fullPattern.indexOf(\"MMMM\");\n        this.MonthPattern = cultureHasMonthAbbr && monthPos > -1 ? (yearPos > monthPos ? \"MMM yyyy\" : \"yyyy MMM\") : yearMonthPattern;\n        this.DayPattern = cultureHasMonthAbbr ? monthDayPattern.replace(\"MMMM\", \"MMM\") : monthDayPattern;\n        var minutePos = fullPattern.indexOf(\"mm\");\n        var pmPos = fullPattern.indexOf(\"tt\");\n        var shortHourPattern = pmPos > -1 ? shortTimePattern.replace(\":mm \", \"\") : shortTimePattern;\n        this.HourPattern = yearPos < minutePos ? this.DayPattern + separator + shortHourPattern : shortHourPattern + separator + this.DayPattern;\n        this.MinutePattern = shortTimePattern;\n        this.SecondPattern = longTimePattern;\n        this.MillisecondPattern = longTimePattern.replace(\"ss\", \"ss.fff\");\n        // Special cases\n        switch (culture.name) {\n            case \"fi-FI\":\n                this.DayPattern = this.DayPattern.replace(\"'ta'\", \"\"); // Fix for finish 'ta' suffix for month names.\n                this.HourPattern = this.HourPattern.replace(\"'ta'\", \"\");\n                break;\n        }\n    }\n    // Methods\n    /**\n     * Returns the format string of the provided DateTimeUnit.\n     * @param unit - date or time unit\n     */\n    DateTimeScaleFormatInfo.prototype.getFormatString = function (unit) {\n        switch (unit) {\n            case iFormattingService_1.DateTimeUnit.Year:\n                return this.YearPattern;\n            case iFormattingService_1.DateTimeUnit.Month:\n                return this.MonthPattern;\n            case iFormattingService_1.DateTimeUnit.Week:\n            case iFormattingService_1.DateTimeUnit.Day:\n                return this.DayPattern;\n            case iFormattingService_1.DateTimeUnit.Hour:\n                return this.HourPattern;\n            case iFormattingService_1.DateTimeUnit.Minute:\n                return this.MinutePattern;\n            case iFormattingService_1.DateTimeUnit.Second:\n                return this.SecondPattern;\n            case iFormattingService_1.DateTimeUnit.Millisecond:\n                return this.MillisecondPattern;\n        }\n    };\n    return DateTimeScaleFormatInfo;\n}());\nvar formattingService = new FormattingService();\nexports.formattingService = formattingService;\n//# sourceMappingURL=formattingService.js.map","\"use strict\";\n/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DateTimeUnit = void 0;\n// Enumeration of DateTimeUnits\nvar DateTimeUnit;\n(function (DateTimeUnit) {\n    DateTimeUnit[DateTimeUnit[\"Year\"] = 0] = \"Year\";\n    DateTimeUnit[DateTimeUnit[\"Month\"] = 1] = \"Month\";\n    DateTimeUnit[DateTimeUnit[\"Week\"] = 2] = \"Week\";\n    DateTimeUnit[DateTimeUnit[\"Day\"] = 3] = \"Day\";\n    DateTimeUnit[DateTimeUnit[\"Hour\"] = 4] = \"Hour\";\n    DateTimeUnit[DateTimeUnit[\"Minute\"] = 5] = \"Minute\";\n    DateTimeUnit[DateTimeUnit[\"Second\"] = 6] = \"Second\";\n    DateTimeUnit[DateTimeUnit[\"Millisecond\"] = 7] = \"Millisecond\";\n})(DateTimeUnit = exports.DateTimeUnit || (exports.DateTimeUnit = {}));\n//# sourceMappingURL=iFormattingService.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCustomFormatMetadata = exports.formatWithCustomOverride = exports.format = exports.isStandardFormat = exports.canFormat = exports.getComponents = exports.hasFormatComponents = exports.addDecimalsToFormat = exports.getNumericFormat = exports.NumberFormatComponentsDelimeter = void 0;\n/**\n * NumberFormat module contains the static methods for formatting the numbers.\n * It extends the Globalize functionality to support complete set of .NET\n * formatting expressions for numeric types including custom formats.\n */\n/* eslint-disable no-useless-escape */\nvar globalize_1 = require(\"./../../globalize/globalize\");\n// powerbi.extensibility.utils.type\nvar powerbi_visuals_utils_typeutils_1 = require(\"powerbi-visuals-utils-typeutils\");\n// powerbi.extensibility.utils.formatting\nvar stringExtensions = require(\"./../stringExtensions\");\nvar formattingEncoder = require(\"./formattingEncoder\");\nvar formattingService_1 = require(\"./formattingService\");\nvar NumericalPlaceHolderRegex = /\\{.+\\}/;\nvar ScientificFormatRegex = /e[+-]*[0#]+/i;\nvar StandardFormatRegex = /^[a-z]\\d{0,2}$/i; // a letter + up to 2 digits for precision specifier\nvar TrailingZerosRegex = /0+$/;\nvar DecimalFormatRegex = /\\.([0#]*)/g;\nvar NumericFormatRegex = /[0#,\\.]+[0,#]*/g;\n// (?=...) is a positive lookahead assertion. The RE is asking for the last digit placeholder, [0#],\n// which is followed by non-digit placeholders and the end of string, [^0#]*$. But it only matches\n// the last digit placeholder, not anything that follows because the positive lookahead isn\"t included\n// in the match - it is only a condition.\nvar LastNumericPlaceholderRegex = /([0#])(?=[^0#]*$)/;\nvar DecimalFormatCharacter = \".\";\nvar ZeroPlaceholder = \"0\";\nvar DigitPlaceholder = \"#\";\nvar ExponentialFormatChar = \"E\";\nvar NumericPlaceholders = [ZeroPlaceholder, DigitPlaceholder];\nvar NumericPlaceholderRegex = new RegExp(NumericPlaceholders.join(\"|\"), \"g\");\nexports.NumberFormatComponentsDelimeter = \";\";\nfunction getNonScientificFormatWithPrecision(baseFormat, numericFormat) {\n    if (!numericFormat || baseFormat === undefined)\n        return baseFormat;\n    var newFormat = \"{0:\" + numericFormat + \"}\";\n    return baseFormat.replace(\"{0}\", newFormat);\n}\nfunction getNumericFormat(value, baseFormat) {\n    if (baseFormat == null)\n        return baseFormat;\n    if (hasFormatComponents(baseFormat)) {\n        var _a = getComponents(baseFormat), positive = _a.positive, negative = _a.negative, zero = _a.zero;\n        if (value > 0)\n            return getNumericFormatFromComponent(value, positive);\n        else if (value === 0)\n            return getNumericFormatFromComponent(value, zero);\n        return getNumericFormatFromComponent(value, negative);\n    }\n    return getNumericFormatFromComponent(value, baseFormat);\n}\nexports.getNumericFormat = getNumericFormat;\nfunction getNumericFormatFromComponent(value, format) {\n    var match = powerbi_visuals_utils_typeutils_1.regExpExtensions.run(NumericFormatRegex, format);\n    if (match)\n        return match[0];\n    return format;\n}\nfunction addDecimalsToFormat(baseFormat, decimals, trailingZeros) {\n    if (decimals == null)\n        return baseFormat;\n    // Default format string\n    if (baseFormat == null)\n        baseFormat = ZeroPlaceholder;\n    if (hasFormatComponents(baseFormat)) {\n        var _a = getComponents(baseFormat), positive = _a.positive, negative = _a.negative, zero = _a.zero;\n        var formats = [positive, negative, zero];\n        for (var i = 0; i < formats.length; i++) {\n            // Update format in formats array\n            formats[i] = addDecimalsToFormatComponent(formats[i], decimals, trailingZeros);\n        }\n        return formats.join(exports.NumberFormatComponentsDelimeter);\n    }\n    return addDecimalsToFormatComponent(baseFormat, decimals, trailingZeros);\n}\nexports.addDecimalsToFormat = addDecimalsToFormat;\nfunction addDecimalsToFormatComponent(format, decimals, trailingZeros) {\n    decimals = Math.abs(decimals);\n    if (decimals >= 0) {\n        var literals = [];\n        format = formattingEncoder.preserveLiterals(format, literals);\n        var placeholder = trailingZeros ? ZeroPlaceholder : DigitPlaceholder;\n        var decimalPlaceholders = stringExtensions.repeat(placeholder, Math.abs(decimals));\n        var match = powerbi_visuals_utils_typeutils_1.regExpExtensions.run(DecimalFormatRegex, format);\n        if (match) {\n            var beforeDecimal = format.substring(0, match.index);\n            var formatDecimal = format.substring(match.index + 1, match[1].length + match.index + 1);\n            var afterDecimal = format.substring(match.index + match[0].length);\n            if (trailingZeros)\n                // Use explicit decimals argument as placeholders\n                formatDecimal = decimalPlaceholders;\n            else {\n                var decimalChange = decimalPlaceholders.length - formatDecimal.length;\n                if (decimalChange > 0)\n                    // Append decimalPlaceholders to existing decimal portion of format string\n                    formatDecimal = formatDecimal + decimalPlaceholders.slice(-decimalChange);\n                else if (decimalChange < 0)\n                    // Remove decimals from formatDecimal\n                    formatDecimal = formatDecimal.slice(0, decimalChange);\n            }\n            if (formatDecimal.length > 0)\n                formatDecimal = DecimalFormatCharacter + formatDecimal;\n            format = beforeDecimal + formatDecimal + afterDecimal;\n        }\n        else if (decimalPlaceholders.length > 0) {\n            // Replace last numeric placeholder with decimal portion\n            format = format.replace(LastNumericPlaceholderRegex, \"$1\" + DecimalFormatCharacter + decimalPlaceholders);\n        }\n        if (literals.length !== 0)\n            format = formattingEncoder.restoreLiterals(format, literals);\n    }\n    return format;\n}\nfunction hasFormatComponents(format) {\n    return formattingEncoder.removeLiterals(format).indexOf(exports.NumberFormatComponentsDelimeter) !== -1;\n}\nexports.hasFormatComponents = hasFormatComponents;\nfunction getComponents(format) {\n    var signFormat = {\n        hasNegative: false,\n        positive: format,\n        negative: format,\n        zero: format,\n    };\n    // escape literals so semi-colon in a literal isn't interpreted as a delimiter\n    // NOTE: OK to use the literals extracted here for all three components before since the literals are indexed.\n    // For example, \"'pos-lit';'neg-lit'\" will get preserved as \"\\uE000;\\uE001\" and the literal array will be\n    // ['pos-lit', 'neg-lit']. When the negative components is restored, its \\uE001 will select the second\n    // literal.\n    var literals = [];\n    format = formattingEncoder.preserveLiterals(format, literals);\n    var signSpecificFormats = format.split(exports.NumberFormatComponentsDelimeter);\n    var formatCount = signSpecificFormats.length;\n    if (formatCount > 1) {\n        if (literals.length !== 0)\n            signSpecificFormats = signSpecificFormats.map(function (signSpecificFormat) { return formattingEncoder.restoreLiterals(signSpecificFormat, literals); });\n        signFormat.hasNegative = true;\n        signFormat.positive = signFormat.zero = signSpecificFormats[0];\n        signFormat.negative = signSpecificFormats[1];\n        if (formatCount > 2)\n            signFormat.zero = signSpecificFormats[2];\n    }\n    return signFormat;\n}\nexports.getComponents = getComponents;\nvar _lastCustomFormatMeta;\n// Evaluates if the value can be formatted using the NumberFormat\nfunction canFormat(value) {\n    return typeof (value) === \"number\";\n}\nexports.canFormat = canFormat;\nfunction isStandardFormat(format) {\n    return StandardFormatRegex.test(format);\n}\nexports.isStandardFormat = isStandardFormat;\n// Formats the number using specified format expression and culture\nfunction format(value, format, culture) {\n    format = format || \"G\";\n    try {\n        if (isStandardFormat(format))\n            return formatNumberStandard(value, format, culture);\n        return formatNumberCustom(value, format, culture);\n    }\n    catch (e) {\n        return globalize_1.Globalize.format(value, undefined, culture);\n    }\n}\nexports.format = format;\n// Performs a custom format with a value override.  Typically used for custom formats showing scaled values.\nfunction formatWithCustomOverride(value, format, nonScientificOverrideFormat, culture) {\n    return formatNumberCustom(value, format, culture, nonScientificOverrideFormat);\n}\nexports.formatWithCustomOverride = formatWithCustomOverride;\n// Formats the number using standard format expression\nfunction formatNumberStandard(value, format, culture) {\n    var result;\n    var precision = (format.length > 1 ? parseInt(format.substring(1, format.length), 10) : undefined);\n    var numberFormatInfo = culture.numberFormat;\n    var formatChar = format.charAt(0);\n    var abs = Math.abs(value);\n    switch (formatChar) {\n        case \"e\":\n        case \"E\":\n            if (precision === undefined) {\n                precision = 6;\n            }\n            format = \"0.\" + stringExtensions.repeat(\"0\", precision) + formatChar + \"+000\";\n            result = formatNumberCustom(value, format, culture);\n            break;\n        case \"f\":\n        case \"F\":\n            result = precision !== undefined ? value.toFixed(precision) : value.toFixed(numberFormatInfo.decimals);\n            result = localize(result, numberFormatInfo);\n            break;\n        case \"g\":\n        case \"G\":\n            if (abs === 0 || (1E-4 <= abs && abs < 1E15)) {\n                // For the range of 0.0001 to 1,000,000,000,000,000 - use the normal form\n                result = precision !== undefined ? value.toPrecision(precision) : value.toString();\n            }\n            else {\n                // Otherwise use exponential\n                // Assert that value is a number and fall back on returning value if it is not\n                if (typeof (value) !== \"number\")\n                    return String(value);\n                result = precision !== undefined ? value.toExponential(precision) : value.toExponential();\n                result = result.replace(\"e\", \"E\");\n            }\n            result = localize(result, numberFormatInfo);\n            break;\n        case \"r\":\n        case \"R\":\n            result = value.toString();\n            result = localize(result, numberFormatInfo);\n            break;\n        case \"x\":\n        case \"X\":\n            result = value.toString(16);\n            if (formatChar === \"X\") {\n                result = result.toUpperCase();\n            }\n            if (precision !== undefined) {\n                var actualPrecision = result.length;\n                var isNegative = value < 0;\n                if (isNegative) {\n                    actualPrecision--;\n                }\n                var paddingZerosCount = precision - actualPrecision;\n                var paddingZeros = undefined;\n                if (paddingZerosCount > 0) {\n                    paddingZeros = stringExtensions.repeat(\"0\", paddingZerosCount);\n                }\n                if (isNegative) {\n                    result = \"-\" + paddingZeros + result.substring(1);\n                }\n                else {\n                    result = paddingZeros + result;\n                }\n            }\n            result = localize(result, numberFormatInfo);\n            break;\n        default:\n            result = globalize_1.Globalize.format(value, format, culture);\n    }\n    return result;\n}\n// Formats the number using custom format expression\nfunction formatNumberCustom(value, format, culture, nonScientificOverrideFormat) {\n    var result;\n    var numberFormatInfo = culture.numberFormat;\n    if (isFinite(value)) {\n        // Split format by positive[;negative;zero] pattern\n        var formatComponents = getComponents(format);\n        // Pick a format based on the sign of value\n        if (value > 0) {\n            format = formatComponents.positive;\n        }\n        else if (value === 0) {\n            format = formatComponents.zero;\n        }\n        else {\n            format = formatComponents.negative;\n        }\n        // Normalize value if we have an explicit negative format\n        if (formatComponents.hasNegative)\n            value = Math.abs(value);\n        // Get format metadata\n        var formatMeta = getCustomFormatMetadata(format, true /*calculatePrecision*/);\n        // Preserve literals and escaped chars\n        var literals = [];\n        if (formatMeta.hasLiterals) {\n            format = formattingEncoder.preserveLiterals(format, literals);\n        }\n        // Scientific format\n        if (formatMeta.hasE && !nonScientificOverrideFormat) {\n            var scientificMatch = powerbi_visuals_utils_typeutils_1.regExpExtensions.run(ScientificFormatRegex, format);\n            if (scientificMatch) {\n                // Case 2.1. Scientific custom format\n                var formatM = format.substring(0, scientificMatch.index);\n                var formatE = format.substring(scientificMatch.index + 2); // E(+|-)\n                var precision = getCustomFormatPrecision(formatM, formatMeta);\n                var scale = getCustomFormatScale(formatM, formatMeta);\n                if (scale !== 1) {\n                    value = value * scale;\n                }\n                // Assert that value is a number and fall back on returning value if it is not\n                if (typeof (value) !== \"number\")\n                    return String(value);\n                var s = value.toExponential(precision);\n                var indexOfE = s.indexOf(\"e\");\n                var mantissa = s.substring(0, indexOfE);\n                var exp = s.substring(indexOfE + 1);\n                var resultM = fuseNumberWithCustomFormat(mantissa, formatM, numberFormatInfo);\n                var resultE = fuseNumberWithCustomFormat(exp, formatE, numberFormatInfo);\n                if (resultE.charAt(0) === \"+\" && scientificMatch[0].charAt(1) !== \"+\") {\n                    resultE = resultE.substring(1);\n                }\n                var e = scientificMatch[0].charAt(0);\n                result = resultM + e + resultE;\n            }\n        }\n        // Non scientific format\n        if (result === undefined) {\n            var valueFormatted = void 0;\n            var isValueGlobalized = false;\n            var precision = getCustomFormatPrecision(format, formatMeta);\n            var scale = getCustomFormatScale(format, formatMeta);\n            if (scale !== 1)\n                value = value * scale;\n            // Rounding\n            value = parseFloat(toNonScientific(value, precision));\n            if (!isFinite(value)) {\n                // very large and small finite values can become infinite by parseFloat(toNonScientific())\n                return globalize_1.Globalize.format(value, undefined);\n            }\n            if (nonScientificOverrideFormat) {\n                // Get numeric format from format string\n                var numericFormat = getNumericFormat(value, format);\n                // Add separators and decimalFormat to nonScientificFormat\n                nonScientificOverrideFormat = getNonScientificFormatWithPrecision(nonScientificOverrideFormat, numericFormat);\n                // Format the value\n                valueFormatted = formattingService_1.formattingService.format(nonScientificOverrideFormat, [value], culture.name);\n                isValueGlobalized = true;\n            }\n            else\n                valueFormatted = toNonScientific(value, precision);\n            result = fuseNumberWithCustomFormat(valueFormatted, format, numberFormatInfo, nonScientificOverrideFormat, isValueGlobalized);\n        }\n        if (formatMeta.hasLiterals) {\n            result = formattingEncoder.restoreLiterals(result, literals, false);\n        }\n        _lastCustomFormatMeta = formatMeta;\n    }\n    else {\n        return globalize_1.Globalize.format(value, undefined);\n    }\n    return result;\n}\n// Returns string with the fixed point respresentation of the number\nfunction toNonScientific(value, precision) {\n    var result = \"\";\n    var precisionZeros = 0;\n    // Double precision numbers support actual 15-16 decimal digits of precision.\n    if (precision > 16) {\n        precisionZeros = precision - 16;\n        precision = 16;\n    }\n    var digitsBeforeDecimalPoint = powerbi_visuals_utils_typeutils_1.double.log10(Math.abs(value));\n    if (digitsBeforeDecimalPoint < 16) {\n        if (digitsBeforeDecimalPoint > 0) {\n            var maxPrecision = 16 - digitsBeforeDecimalPoint;\n            if (precision > maxPrecision) {\n                precisionZeros += precision - maxPrecision;\n                precision = maxPrecision;\n            }\n        }\n        result = value.toFixed(precision);\n    }\n    else if (digitsBeforeDecimalPoint === 16) {\n        result = value.toFixed(0);\n        precisionZeros += precision;\n        if (precisionZeros > 0) {\n            result += \".\";\n        }\n    }\n    else { // digitsBeforeDecimalPoint > 16\n        // Different browsers have different implementations of the toFixed().\n        // In IE it returns fixed format no matter what's the number. In FF and Chrome the method returns exponential format for numbers greater than 1E21.\n        // So we need to check for range and convert the to exponential with the max precision.\n        // Then we convert exponential string to fixed by removing the dot and padding with \"power\" zeros.\n        // Assert that value is a number and fall back on returning value if it is not\n        if (typeof (value) !== \"number\")\n            return String(value);\n        result = value.toExponential(15);\n        var indexOfE = result.indexOf(\"e\");\n        if (indexOfE > 0) {\n            var indexOfDot = result.indexOf(\".\");\n            var mantissa = result.substring(0, indexOfE);\n            var exp = result.substring(indexOfE + 1);\n            var powerZeros = parseInt(exp, 10) - (mantissa.length - indexOfDot - 1);\n            result = mantissa.replace(\".\", \"\") + stringExtensions.repeat(\"0\", powerZeros);\n            if (precision > 0) {\n                result = result + \".\" + stringExtensions.repeat(\"0\", precision);\n            }\n        }\n    }\n    if (precisionZeros > 0) {\n        result = result + stringExtensions.repeat(\"0\", precisionZeros);\n    }\n    return result;\n}\n/**\n * Returns the formatMetadata of the format\n * When calculating precision and scale, if format string of\n * positive[;negative;zero] => positive format will be used\n * @param (required) format - format string\n * @param (optional) calculatePrecision - calculate precision of positive format\n * @param (optional) calculateScale - calculate scale of positive format\n */\nfunction getCustomFormatMetadata(format, calculatePrecision, calculateScale, calculatePartsPerScale) {\n    if (_lastCustomFormatMeta !== undefined && format === _lastCustomFormatMeta.format) {\n        return _lastCustomFormatMeta;\n    }\n    var literals = [];\n    var escaped = formattingEncoder.preserveLiterals(format, literals);\n    var result = {\n        format: format,\n        hasLiterals: literals.length !== 0,\n        hasE: false,\n        hasCommas: false,\n        hasDots: false,\n        hasPercent: false,\n        hasPermile: false,\n        precision: undefined,\n        scale: undefined,\n        partsPerScale: undefined,\n    };\n    for (var i = 0, length_1 = escaped.length; i < length_1; i++) {\n        var c = escaped.charAt(i);\n        switch (c) {\n            case \"e\":\n            case \"E\":\n                result.hasE = true;\n                break;\n            case \",\":\n                result.hasCommas = true;\n                break;\n            case \".\":\n                result.hasDots = true;\n                break;\n            case \"%\":\n                result.hasPercent = true;\n                break;\n            case \"\\u2030\": // ‰\n                result.hasPermile = true;\n                break;\n        }\n    }\n    // Use positive format for calculating these values\n    var formatComponents = getComponents(format);\n    if (calculatePrecision)\n        result.precision = getCustomFormatPrecision(formatComponents.positive, result);\n    if (calculatePartsPerScale)\n        result.partsPerScale = getCustomFormatPartsPerScale(formatComponents.positive, result);\n    if (calculateScale)\n        result.scale = getCustomFormatScale(formatComponents.positive, result);\n    return result;\n}\nexports.getCustomFormatMetadata = getCustomFormatMetadata;\n/** Returns the decimal precision of format based on the number of # and 0 chars after the decimal point\n     * Important: The input format string needs to be split to the appropriate pos/neg/zero portion to work correctly */\nfunction getCustomFormatPrecision(format, formatMeta) {\n    if (formatMeta.precision > -1) {\n        return formatMeta.precision;\n    }\n    var result = 0;\n    if (formatMeta.hasDots) {\n        if (formatMeta.hasLiterals) {\n            format = formattingEncoder.removeLiterals(format);\n        }\n        var dotIndex = format.indexOf(\".\");\n        if (dotIndex > -1) {\n            var count = format.length;\n            for (var i = dotIndex; i < count; i++) {\n                var char = format.charAt(i);\n                if (char.match(NumericPlaceholderRegex))\n                    result++;\n                // 0.00E+0 :: Break before counting 0 in\n                // exponential portion of format string\n                if (char === ExponentialFormatChar)\n                    break;\n            }\n            result = Math.min(19, result);\n        }\n    }\n    formatMeta.precision = result;\n    return result;\n}\nfunction getCustomFormatPartsPerScale(format, formatMeta) {\n    if (formatMeta.partsPerScale != null)\n        return formatMeta.partsPerScale;\n    var result = 1;\n    if (formatMeta.hasPercent && format.indexOf(\"%\") > -1) {\n        result = result * 100;\n    }\n    if (formatMeta.hasPermile && format.indexOf(/* ‰ */ \"\\u2030\") > -1) {\n        result = result * 1000;\n    }\n    formatMeta.partsPerScale = result;\n    return result;\n}\n// Returns the scale factor of the format based on the \"%\" and scaling \",\" chars in the format\nfunction getCustomFormatScale(format, formatMeta) {\n    if (formatMeta.scale > -1) {\n        return formatMeta.scale;\n    }\n    var result = getCustomFormatPartsPerScale(format, formatMeta);\n    if (formatMeta.hasCommas) {\n        var dotIndex = format.indexOf(\".\");\n        if (dotIndex === -1) {\n            dotIndex = format.length;\n        }\n        for (var i = dotIndex - 1; i > -1; i--) {\n            var char = format.charAt(i);\n            if (char === \",\") {\n                result = result / 1000;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    formatMeta.scale = result;\n    return result;\n}\nfunction fuseNumberWithCustomFormat(value, format, numberFormatInfo, nonScientificOverrideFormat, isValueGlobalized) {\n    var suppressModifyValue = !!nonScientificOverrideFormat;\n    var formatParts = format.split(\".\", 2);\n    if (formatParts.length === 2) {\n        var wholeFormat = formatParts[0];\n        var fractionFormat = formatParts[1];\n        var displayUnit = \"\";\n        // Remove display unit from value before splitting on \".\" as localized display units sometimes end with \".\"\n        if (nonScientificOverrideFormat) {\n            displayUnit = nonScientificOverrideFormat.replace(NumericalPlaceHolderRegex, \"\");\n            value = value.replace(displayUnit, \"\");\n        }\n        var globalizedDecimalSeparator = numberFormatInfo[\".\"];\n        var decimalSeparator = isValueGlobalized ? globalizedDecimalSeparator : \".\";\n        var valueParts = value.split(decimalSeparator, 2);\n        var wholeValue = valueParts.length === 1 ? valueParts[0] + displayUnit : valueParts[0];\n        var fractionValue = valueParts.length === 2 ? valueParts[1] + displayUnit : \"\";\n        fractionValue = fractionValue.replace(TrailingZerosRegex, \"\");\n        var wholeFormattedValue = fuseNumberWithCustomFormatLeft(wholeValue, wholeFormat, numberFormatInfo, suppressModifyValue);\n        var fractionFormattedValue = fuseNumberWithCustomFormatRight(fractionValue, fractionFormat, suppressModifyValue);\n        if (fractionFormattedValue.fmtOnly || fractionFormattedValue.value === \"\")\n            return wholeFormattedValue + fractionFormattedValue.value;\n        return wholeFormattedValue + globalizedDecimalSeparator + fractionFormattedValue.value;\n    }\n    return fuseNumberWithCustomFormatLeft(value, format, numberFormatInfo, suppressModifyValue);\n}\nfunction fuseNumberWithCustomFormatLeft(value, format, numberFormatInfo, suppressModifyValue) {\n    var groupSymbolIndex = format.indexOf(\",\");\n    var enableGroups = groupSymbolIndex > -1 && groupSymbolIndex < Math.max(format.lastIndexOf(\"0\"), format.lastIndexOf(\"#\")) && numberFormatInfo[\",\"];\n    var groupDigitCount = 0;\n    var groupIndex = 0;\n    var groupSizes = numberFormatInfo.groupSizes || [3];\n    var groupSize = groupSizes[0];\n    var groupSeparator = numberFormatInfo[\",\"];\n    var sign = \"\";\n    var firstChar = value.charAt(0);\n    if (firstChar === \"+\" || firstChar === \"-\") {\n        sign = numberFormatInfo[firstChar];\n        value = value.substring(1);\n    }\n    var isZero = value === \"0\";\n    var result = \"\";\n    var leftBuffer = \"\";\n    var vi = value.length - 1;\n    var fmtOnly = true;\n    // Iterate through format chars and replace 0 and # with the digits from the value string\n    for (var fi = format.length - 1; fi > -1; fi--) {\n        var formatChar = format.charAt(fi);\n        switch (formatChar) {\n            case ZeroPlaceholder:\n            case DigitPlaceholder:\n                fmtOnly = false;\n                if (leftBuffer !== \"\") {\n                    result = leftBuffer + result;\n                    leftBuffer = \"\";\n                }\n                if (!suppressModifyValue) {\n                    if (vi > -1 || formatChar === ZeroPlaceholder) {\n                        if (enableGroups) {\n                            // If the groups are enabled we'll need to keep track of the current group index and periodically insert group separator,\n                            if (groupDigitCount === groupSize) {\n                                result = groupSeparator + result;\n                                groupIndex++;\n                                if (groupIndex < groupSizes.length) {\n                                    groupSize = groupSizes[groupIndex];\n                                }\n                                groupDigitCount = 1;\n                            }\n                            else {\n                                groupDigitCount++;\n                            }\n                        }\n                    }\n                    if (vi > -1) {\n                        if (isZero && formatChar === DigitPlaceholder) {\n                            // Special case - if we need to format a zero value and the # symbol is used - we don't copy it into the result)\n                        }\n                        else {\n                            result = value.charAt(vi) + result;\n                        }\n                        vi--;\n                    }\n                    else if (formatChar !== DigitPlaceholder) {\n                        result = formatChar + result;\n                    }\n                }\n                break;\n            case \",\":\n                // We should skip all the , chars\n                break;\n            default:\n                leftBuffer = formatChar + leftBuffer;\n                break;\n        }\n    }\n    // If the value didn't fit into the number of zeros provided in the format then we should insert the missing part of the value into the result\n    if (!suppressModifyValue) {\n        if (vi > -1 && result !== \"\") {\n            if (enableGroups) {\n                while (vi > -1) {\n                    if (groupDigitCount === groupSize) {\n                        result = groupSeparator + result;\n                        groupIndex++;\n                        if (groupIndex < groupSizes.length) {\n                            groupSize = groupSizes[groupIndex];\n                        }\n                        groupDigitCount = 1;\n                    }\n                    else {\n                        groupDigitCount++;\n                    }\n                    result = value.charAt(vi) + result;\n                    vi--;\n                }\n            }\n            else {\n                result = value.substring(0, vi + 1) + result;\n            }\n        }\n        // Insert sign in front of the leftBuffer and result\n        return sign + leftBuffer + result;\n    }\n    if (fmtOnly)\n        // If the format doesn't specify any digits to be displayed, then just return the format we've parsed up until now.\n        return sign + leftBuffer + result;\n    return sign + leftBuffer + value + result;\n}\nfunction fuseNumberWithCustomFormatRight(value, format, suppressModifyValue) {\n    var formatLength = format.length;\n    var valueLength = value.length;\n    if (suppressModifyValue) {\n        var lastChar = format.charAt(formatLength - 1);\n        if (!lastChar.match(NumericPlaceholderRegex))\n            return {\n                value: value + lastChar,\n                fmtOnly: value === \"\",\n            };\n        return {\n            value: value,\n            fmtOnly: value === \"\",\n        };\n    }\n    var result = \"\", fmtOnly = true, vi = 0;\n    for (var fi = 0; fi < formatLength; fi++) {\n        var formatChar = format.charAt(fi);\n        if (vi < valueLength) {\n            switch (formatChar) {\n                case ZeroPlaceholder:\n                case DigitPlaceholder:\n                    result += value[vi++];\n                    fmtOnly = false;\n                    break;\n                default:\n                    result += formatChar;\n            }\n        }\n        else {\n            if (formatChar !== DigitPlaceholder) {\n                result += formatChar;\n                fmtOnly = fmtOnly && (formatChar !== ZeroPlaceholder);\n            }\n        }\n    }\n    return {\n        value: result,\n        fmtOnly: fmtOnly,\n    };\n}\nfunction localize(value, dictionary) {\n    var plus = dictionary[\"+\"];\n    var minus = dictionary[\"-\"];\n    var dot = dictionary[\".\"];\n    var comma = dictionary[\",\"];\n    if (plus === \"+\" && minus === \"-\" && dot === \".\" && comma === \",\") {\n        return value;\n    }\n    var count = value.length;\n    var result = \"\";\n    for (var i = 0; i < count; i++) {\n        var char = value.charAt(i);\n        switch (char) {\n            case \"+\":\n                result = result + plus;\n                break;\n            case \"-\":\n                result = result + minus;\n                break;\n            case \".\":\n                result = result + dot;\n                break;\n            case \",\":\n                result = result + comma;\n                break;\n            default:\n                result = result + char;\n                break;\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=numberFormat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.familyInfo = exports.font = exports.formattingService = exports.displayUnitSystemType = exports.dateTimeSequence = exports.displayUnitSystem = exports.dateUtils = exports.wordBreaker = exports.textUtil = exports.textMeasurementService = exports.stringExtensions = exports.valueFormatter = exports.formatting = exports.interfaces = void 0;\nvar formatting = require(\"./formatting\");\nexports.formatting = formatting;\nvar valueFormatter = require(\"./valueFormatter\");\nexports.valueFormatter = valueFormatter;\nvar stringExtensions = require(\"./stringExtensions\");\nexports.stringExtensions = stringExtensions;\nvar textMeasurementService = require(\"./textMeasurementService\");\nexports.textMeasurementService = textMeasurementService;\nvar interfaces = require(\"./interfaces\");\nexports.interfaces = interfaces;\nvar font = require(\"./font/family\");\nexports.font = font;\nvar familyInfo = require(\"./font/familyInfo\");\nexports.familyInfo = familyInfo;\nvar textUtil = require(\"./textUtil\");\nexports.textUtil = textUtil;\nvar dateUtils = require(\"./date/dateUtils\");\nexports.dateUtils = dateUtils;\nvar dateTimeSequence = require(\"./date/dateTimeSequence\");\nexports.dateTimeSequence = dateTimeSequence;\nvar displayUnitSystem = require(\"./displayUnitSystem/displayUnitSystem\");\nexports.displayUnitSystem = displayUnitSystem;\nvar displayUnitSystemType = require(\"./displayUnitSystem/displayUnitSystemType\");\nexports.displayUnitSystemType = displayUnitSystemType;\nvar formattingService = require(\"./formattingService/formattingService\");\nexports.formattingService = formattingService;\nvar wordBreaker = require(\"./wordBreaker\");\nexports.wordBreaker = wordBreaker;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interfaces.js.map","\"use strict\";\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ephemeralStorageService = exports.EphemeralStorageService = void 0;\nvar EphemeralStorageService = /** @class */ (function () {\n    function EphemeralStorageService(clearCacheInterval) {\n        this.cache = {};\n        this.clearCacheInterval = (clearCacheInterval != null)\n            ? clearCacheInterval\n            : EphemeralStorageService.defaultClearCacheInterval;\n        this.clearCache();\n    }\n    EphemeralStorageService.prototype.getData = function (key) {\n        return this.cache[key];\n    };\n    EphemeralStorageService.prototype.setData = function (key, data) {\n        var _this = this;\n        this.cache[key] = data;\n        if (this.clearCacheTimerId == null) {\n            this.clearCacheTimerId = setTimeout(function () { return _this.clearCache(); }, this.clearCacheInterval);\n        }\n    };\n    EphemeralStorageService.prototype.clearCache = function () {\n        this.cache = {};\n        this.clearCacheTimerId = undefined;\n    };\n    EphemeralStorageService.defaultClearCacheInterval = (1000 * 60 * 60 * 24); // 1 day\n    return EphemeralStorageService;\n}());\nexports.EphemeralStorageService = EphemeralStorageService;\nexports.ephemeralStorageService = new EphemeralStorageService();\n//# sourceMappingURL=ephemeralStorageService.js.map","\"use strict\";\n/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stripTagDelimiters = exports.deriveClsCompliantName = exports.stringifyAsPrettyJSON = exports.normalizeFileName = exports.escapeStringForRegex = exports.constructNameFromList = exports.findUniqueName = exports.ensureUniqueNames = exports.replaceAll = exports.repeat = exports.getLengthDifference = exports.trimWhitespace = exports.trimTrailingWhitespace = exports.isWhitespace = exports.containsWhitespace = exports.isNullOrUndefinedOrWhiteSpaceString = exports.isNullOrEmpty = exports.stringToArrayBuffer = exports.normalizeCase = exports.containsIgnoreCase = exports.contains = exports.startsWith = exports.startsWithIgnoreCase = exports.equalIgnoreCase = exports.format = exports.endsWith = void 0;\n/* eslint-disable no-useless-escape */\nvar HtmlTagRegex = new RegExp(\"[<>]\", \"g\");\n/**\n * Checks if a string ends with a sub-string.\n */\nfunction endsWith(str, suffix) {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\nexports.endsWith = endsWith;\nfunction format() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var s = args[0];\n    if (isNullOrUndefinedOrWhiteSpaceString(s))\n        return s;\n    for (var i = 0; i < args.length - 1; i++) {\n        var reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\n        s = s.replace(reg, args[i + 1]);\n    }\n    return s;\n}\nexports.format = format;\n/**\n * Compares two strings for equality, ignoring case.\n */\nfunction equalIgnoreCase(a, b) {\n    return normalizeCase(a) === normalizeCase(b);\n}\nexports.equalIgnoreCase = equalIgnoreCase;\nfunction startsWithIgnoreCase(a, b) {\n    var normalizedSearchString = normalizeCase(b);\n    return normalizeCase(a).indexOf(normalizedSearchString) === 0;\n}\nexports.startsWithIgnoreCase = startsWithIgnoreCase;\nfunction startsWith(a, b) {\n    return a.indexOf(b) === 0;\n}\nexports.startsWith = startsWith;\n// Determines whether a string contains a specified substring (by case-sensitive comparison).\nfunction contains(source, substring) {\n    if (source == null)\n        return false;\n    return source.indexOf(substring) !== -1;\n}\nexports.contains = contains;\n// Determines whether a string contains a specified substring (while ignoring case).\nfunction containsIgnoreCase(source, substring) {\n    if (source == null)\n        return false;\n    return contains(normalizeCase(source), normalizeCase(substring));\n}\nexports.containsIgnoreCase = containsIgnoreCase;\n/**\n * Normalizes case for a string.\n * Used by equalIgnoreCase method.\n */\nfunction normalizeCase(value) {\n    return value.toUpperCase();\n}\nexports.normalizeCase = normalizeCase;\n/**\n * Receives a string and returns an ArrayBuffer of its characters.\n * @return An ArrayBuffer of the string's characters.\n * If the string is empty or null or undefined - returns null.\n */\nfunction stringToArrayBuffer(str) {\n    if (isNullOrEmpty(str)) {\n        return null;\n    }\n    var buffer = new ArrayBuffer(str.length);\n    var bufferView = new Uint8Array(buffer);\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n        bufferView[i] = str.charCodeAt(i);\n    }\n    return bufferView;\n}\nexports.stringToArrayBuffer = stringToArrayBuffer;\n/**\n * Is string null or empty or undefined?\n * @return True if the value is null or undefined or empty string,\n * otherwise false.\n */\nfunction isNullOrEmpty(value) {\n    return (value == null) || (value.length === 0);\n}\nexports.isNullOrEmpty = isNullOrEmpty;\n/**\n * Returns true if the string is null, undefined, empty, or only includes white spaces.\n * @return True if the str is null, undefined, empty, or only includes white spaces,\n * otherwise false.\n */\nfunction isNullOrUndefinedOrWhiteSpaceString(str) {\n    return isNullOrEmpty(str) || isNullOrEmpty(str.trim());\n}\nexports.isNullOrUndefinedOrWhiteSpaceString = isNullOrUndefinedOrWhiteSpaceString;\n/**\n * Returns a value indicating whether the str contains any whitespace.\n */\nfunction containsWhitespace(str) {\n    var expr = /\\s/;\n    return expr.test(str);\n}\nexports.containsWhitespace = containsWhitespace;\n/**\n * Returns a value indicating whether the str is a whitespace string.\n */\nfunction isWhitespace(str) {\n    return str.trim() === \"\";\n}\nexports.isWhitespace = isWhitespace;\n/**\n * Returns the string with any trailing whitespace from str removed.\n */\nfunction trimTrailingWhitespace(str) {\n    return str.replace(/\\s+$/, \"\");\n}\nexports.trimTrailingWhitespace = trimTrailingWhitespace;\n/**\n * Returns the string with any leading and trailing whitespace from str removed.\n */\nfunction trimWhitespace(str) {\n    return str.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n}\nexports.trimWhitespace = trimWhitespace;\n/**\n * Returns length difference between the two provided strings.\n */\nfunction getLengthDifference(left, right) {\n    return Math.abs(left.length - right.length);\n}\nexports.getLengthDifference = getLengthDifference;\n/**\n * Repeat char or string several times.\n * @param char The string to repeat.\n * @param count How many times to repeat the string.\n */\nfunction repeat(char, count) {\n    var result = \"\";\n    for (var i = 0; i < count; i++) {\n        result += char;\n    }\n    return result;\n}\nexports.repeat = repeat;\n/**\n * Replace all the occurrences of the textToFind in the text with the textToReplace.\n * @param text The original string.\n * @param textToFind Text to find in the original string.\n * @param textToReplace New text replacing the textToFind.\n */\nfunction replaceAll(text, textToFind, textToReplace) {\n    if (!textToFind)\n        return text;\n    var pattern = escapeStringForRegex(textToFind);\n    return text.replace(new RegExp(pattern, \"gi\"), textToReplace);\n}\nexports.replaceAll = replaceAll;\nfunction ensureUniqueNames(names) {\n    var usedNames = {};\n    // Make sure we are giving fair chance for all columns to stay with their original name\n    // First we fill the used names map to contain all the original unique names from the list.\n    for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {\n        var name_1 = names_1[_i];\n        usedNames[name_1] = false;\n    }\n    var uniqueNames = [];\n    // Now we go over all names and find a unique name for each\n    for (var _a = 0, names_2 = names; _a < names_2.length; _a++) {\n        var name_2 = names_2[_a];\n        var uniqueName = name_2;\n        // If the (original) column name is already taken lets try to find another name\n        if (usedNames[uniqueName]) {\n            var counter = 0;\n            // Find a name that is not already in the map\n            while (usedNames[uniqueName] !== undefined) {\n                uniqueName = name_2 + \".\" + (++counter);\n            }\n        }\n        uniqueNames.push(uniqueName);\n        usedNames[uniqueName] = true;\n    }\n    return uniqueNames;\n}\nexports.ensureUniqueNames = ensureUniqueNames;\n/**\n * Returns a name that is not specified in the values.\n */\nfunction findUniqueName(usedNames, baseName) {\n    // Find a unique name\n    var i = 0, uniqueName = baseName;\n    while (usedNames[uniqueName]) {\n        uniqueName = baseName + (++i);\n    }\n    return uniqueName;\n}\nexports.findUniqueName = findUniqueName;\nfunction constructNameFromList(list, separator, maxCharacter) {\n    var labels = [];\n    var exceeded;\n    var length = 0;\n    for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n        var item = list_1[_i];\n        if (length + item.length > maxCharacter && labels.length > 0) {\n            exceeded = true;\n            break;\n        }\n        labels.push(item);\n        length += item.length;\n    }\n    var separatorWithSpace = \" \" + separator + \" \";\n    var name = labels.join(separatorWithSpace);\n    if (exceeded)\n        name += separatorWithSpace + \"...\";\n    return name;\n}\nexports.constructNameFromList = constructNameFromList;\nfunction escapeStringForRegex(s) {\n    return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, \"\\\\$1\");\n}\nexports.escapeStringForRegex = escapeStringForRegex;\n/**\n * Remove file name reserved characters <>:\"/\\|?* from input string.\n */\nfunction normalizeFileName(fileName) {\n    return fileName.replace(/[\\<\\>\\:\"\\/\\\\\\|\\?*]/g, \"\");\n}\nexports.normalizeFileName = normalizeFileName;\n/**\n * Similar to JSON.stringify, but strips away escape sequences so that the resulting\n * string is human-readable (and parsable by JSON formatting/validating tools).\n */\nfunction stringifyAsPrettyJSON(object) {\n    // let specialCharacterRemover = (key: string, value: string) => value.replace(/[^\\w\\s]/gi, \"\");\n    return JSON.stringify(object /*, specialCharacterRemover*/);\n}\nexports.stringifyAsPrettyJSON = stringifyAsPrettyJSON;\n/**\n * Derive a CLS-compliant name from a specified string.  If no allowed characters are present, return a fallback string instead.\n * (6708134): this should have a fully Unicode-aware implementation\n */\nfunction deriveClsCompliantName(input, fallback) {\n    var result = input.replace(/^[^A-Za-z]*/g, \"\").replace(/[ :\\.\\/\\\\\\-\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000]/g, \"_\").replace(/[\\W]/g, \"\");\n    return result.length > 0 ? result : fallback;\n}\nexports.deriveClsCompliantName = deriveClsCompliantName;\n// Performs cheap sanitization by stripping away HTML tag (<>) characters.\nfunction stripTagDelimiters(s) {\n    return s.replace(HtmlTagRegex, \"\");\n}\nexports.stripTagDelimiters = stripTagDelimiters;\n//# sourceMappingURL=stringExtensions.js.map","\"use strict\";\n/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordBreakOverflowingText = exports.wordBreak = exports.svgEllipsis = exports.getTailoredTextOrDefault = exports.getDivElementWidth = exports.getSvgMeasurementProperties = exports.getMeasurementProperties = exports.measureSvgTextElementWidth = exports.estimateSvgTextHeight = exports.estimateSvgTextBaselineDelta = exports.measureSvgTextHeight = exports.measureSvgTextRect = exports.measureSvgTextWidth = exports.removeSpanElement = void 0;\n// powerbi.extensibility.utils.type\nvar powerbi_visuals_utils_typeutils_1 = require(\"powerbi-visuals-utils-typeutils\");\n// powerbi.extensibility.utils.formatting\nvar wordBreaker = require(\"./wordBreaker\");\nvar ephemeralStorageService_1 = require(\"./storageService/ephemeralStorageService\");\nvar ellipsis = \"...\";\nvar spanElement;\nvar svgTextElement;\nvar canvasCtx;\nvar fallbackFontFamily;\n/**\n * Idempotent function for adding the elements to the DOM.\n */\nfunction ensureDOM() {\n    if (spanElement) {\n        return;\n    }\n    spanElement = document.createElement(\"span\");\n    document.body.appendChild(spanElement);\n    // The style hides the svg element from the canvas, preventing canvas from scrolling down to show svg black square.\n    /* eslint-disable-next-line powerbi-visuals/no-http-string */\n    var svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    svgElement.setAttribute(\"height\", \"0\");\n    svgElement.setAttribute(\"width\", \"0\");\n    svgElement.setAttribute(\"position\", \"absolute\");\n    svgElement.style.top = \"0px\";\n    svgElement.style.left = \"0px\";\n    svgElement.style.position = \"absolute\";\n    svgElement.style.height = \"0px\";\n    svgElement.style.width = \"0px\";\n    /* eslint-disable-next-line powerbi-visuals/no-http-string */\n    svgTextElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    svgElement.appendChild(svgTextElement);\n    document.body.appendChild(svgElement);\n    var canvasElement = document.createElement(\"canvas\");\n    canvasCtx = canvasElement.getContext(\"2d\");\n    var style = window.getComputedStyle(svgTextElement);\n    if (style) {\n        fallbackFontFamily = style.fontFamily;\n    }\n    else {\n        fallbackFontFamily = \"\";\n    }\n}\n/**\n * Removes spanElement from DOM.\n */\nfunction removeSpanElement() {\n    if (spanElement && spanElement.remove) {\n        spanElement.remove();\n    }\n    spanElement = null;\n}\nexports.removeSpanElement = removeSpanElement;\n/**\n * Measures the width of the text with the given SVG text properties.\n * @param textProperties The text properties to use for text measurement.\n * @param text The text to measure.\n */\nfunction measureSvgTextWidth(textProperties, text) {\n    ensureDOM();\n    canvasCtx.font =\n        (textProperties.fontStyle || \"\") + \" \" +\n            (textProperties.fontVariant || \"\") + \" \" +\n            (textProperties.fontWeight || \"\") + \" \" +\n            textProperties.fontSize + \" \" +\n            (textProperties.fontFamily || fallbackFontFamily);\n    return canvasCtx.measureText(text || textProperties.text).width;\n}\nexports.measureSvgTextWidth = measureSvgTextWidth;\n/**\n * Return the rect with the given SVG text properties.\n * @param textProperties The text properties to use for text measurement.\n * @param text The text to measure.\n */\nfunction measureSvgTextRect(textProperties, text) {\n    ensureDOM();\n    // Removes DOM elements faster than innerHTML\n    while (svgTextElement.firstChild) {\n        svgTextElement.removeChild(svgTextElement.firstChild);\n    }\n    svgTextElement.setAttribute(\"style\", null);\n    svgTextElement.style.visibility = \"hidden\";\n    svgTextElement.style.fontFamily = textProperties.fontFamily || fallbackFontFamily;\n    svgTextElement.style.fontVariant = textProperties.fontVariant;\n    svgTextElement.style.fontSize = textProperties.fontSize;\n    svgTextElement.style.fontWeight = textProperties.fontWeight;\n    svgTextElement.style.fontStyle = textProperties.fontStyle;\n    svgTextElement.style.whiteSpace = textProperties.whiteSpace || \"nowrap\";\n    svgTextElement.appendChild(document.createTextNode(text || textProperties.text));\n    // We're expecting the browser to give a synchronous measurement here\n    // We're using SVGTextElement because it works across all browsers\n    return svgTextElement.getBBox();\n}\nexports.measureSvgTextRect = measureSvgTextRect;\n/**\n * Measures the height of the text with the given SVG text properties.\n * @param textProperties The text properties to use for text measurement.\n * @param text The text to measure.\n */\nfunction measureSvgTextHeight(textProperties, text) {\n    return measureSvgTextRect(textProperties, text).height;\n}\nexports.measureSvgTextHeight = measureSvgTextHeight;\n/**\n * Returns the text Rect with the given SVG text properties.\n * Does NOT return text width; obliterates text value\n * @param {TextProperties} textProperties - The text properties to use for text measurement\n */\nfunction estimateSvgTextRect(textProperties) {\n    var propertiesKey = textProperties.fontFamily + textProperties.fontSize;\n    var rect = ephemeralStorageService_1.ephemeralStorageService.getData(propertiesKey);\n    if (rect == null) {\n        // To estimate we check the height of a particular character, once it is cached, subsequent\n        // calls should always get the height from the cache (regardless of the text).\n        var estimatedTextProperties = {\n            fontFamily: textProperties.fontFamily,\n            fontSize: textProperties.fontSize,\n            text: \"M\",\n        };\n        rect = exports.measureSvgTextRect(estimatedTextProperties);\n        // NOTE: In some cases (disconnected/hidden DOM) we may provide incorrect measurement results (zero sized bounding-box), so\n        // we only store values in the cache if we are confident they are correct.\n        if (rect.height > 0)\n            ephemeralStorageService_1.ephemeralStorageService.setData(propertiesKey, rect);\n    }\n    return rect;\n}\n/**\n * Returns the text Rect with the given SVG text properties.\n * @param {TextProperties} textProperties - The text properties to use for text measurement\n */\nfunction estimateSvgTextBaselineDelta(textProperties) {\n    var rect = estimateSvgTextRect(textProperties);\n    return rect.y + rect.height;\n}\nexports.estimateSvgTextBaselineDelta = estimateSvgTextBaselineDelta;\n/**\n * Estimates the height of the text with the given SVG text properties.\n * @param {TextProperties} textProperties - The text properties to use for text measurement\n */\nfunction estimateSvgTextHeight(textProperties, tightFightForNumeric) {\n    if (tightFightForNumeric === void 0) { tightFightForNumeric = false; }\n    var height = estimateSvgTextRect(textProperties).height;\n    // replace it with new baseline calculation\n    if (tightFightForNumeric)\n        height *= 0.7;\n    return height;\n}\nexports.estimateSvgTextHeight = estimateSvgTextHeight;\n/**\n * Measures the width of the svgElement.\n * @param svgElement The SVGTextElement to be measured.\n */\nfunction measureSvgTextElementWidth(svgElement) {\n    return measureSvgTextWidth(getSvgMeasurementProperties(svgElement));\n}\nexports.measureSvgTextElementWidth = measureSvgTextElementWidth;\n/**\n * Fetches the text measurement properties of the given DOM element.\n * @param element The selector for the DOM Element.\n */\nfunction getMeasurementProperties(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        text: element.value || element.textContent,\n        fontFamily: style.fontFamily,\n        fontSize: style.fontSize,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle,\n        fontVariant: style.fontVariant,\n        whiteSpace: style.whiteSpace\n    };\n}\nexports.getMeasurementProperties = getMeasurementProperties;\n/**\n * Fetches the text measurement properties of the given SVG text element.\n * @param element The SVGTextElement to be measured.\n */\nfunction getSvgMeasurementProperties(element) {\n    var style = window.getComputedStyle(element);\n    if (style) {\n        return {\n            text: element.textContent,\n            fontFamily: style.fontFamily,\n            fontSize: style.fontSize,\n            fontWeight: style.fontWeight,\n            fontStyle: style.fontStyle,\n            fontVariant: style.fontVariant,\n            whiteSpace: style.whiteSpace\n        };\n    }\n    else {\n        return {\n            text: element.textContent,\n            fontFamily: \"\",\n            fontSize: \"0\",\n        };\n    }\n}\nexports.getSvgMeasurementProperties = getSvgMeasurementProperties;\n/**\n * Returns the width of a div element.\n * @param element The div element.\n */\nfunction getDivElementWidth(element) {\n    var style = window.getComputedStyle(element);\n    if (style)\n        return style.width;\n    else\n        return \"0\";\n}\nexports.getDivElementWidth = getDivElementWidth;\n/**\n * Compares labels text size to the available size and renders ellipses when the available size is smaller.\n * @param textProperties The text properties (including text content) to use for text measurement.\n * @param maxWidth The maximum width available for rendering the text.\n */\nfunction getTailoredTextOrDefault(textProperties, maxWidth) {\n    ensureDOM();\n    var strLength = textProperties.text.length;\n    if (strLength === 0) {\n        return textProperties.text;\n    }\n    var width = measureSvgTextWidth(textProperties);\n    if (width < maxWidth) {\n        return textProperties.text;\n    }\n    var ellipsesWidth = measureSvgTextWidth(textProperties, ellipsis);\n    if (ellipsesWidth >= width) {\n        return textProperties.text;\n    }\n    // Create a copy of the textProperties so we don't modify the one that's passed in.\n    var copiedTextProperties = powerbi_visuals_utils_typeutils_1.prototype.inherit(textProperties);\n    // Take the properties and apply them to svgTextElement\n    // Then, do the binary search to figure out the substring we want\n    // Set the substring on textElement argument\n    var text = copiedTextProperties.text = ellipsis + copiedTextProperties.text;\n    var min = 1;\n    var max = text.length;\n    var i = ellipsis.length;\n    while (min <= max) {\n        // num | 0 preferred to Math.floor(num) for performance benefits\n        i = (min + max) / 2 | 0;\n        copiedTextProperties.text = text.substring(0, i);\n        width = measureSvgTextWidth(copiedTextProperties);\n        if (maxWidth > width) {\n            min = i + 1;\n        }\n        else if (maxWidth < width) {\n            max = i - 1;\n        }\n        else {\n            break;\n        }\n    }\n    // Since the search algorithm almost never finds an exact match,\n    // it will pick one of the closest two, which could result in a\n    // value bigger with than 'maxWidth' thus we need to go back by\n    // one to guarantee a smaller width than 'maxWidth'.\n    copiedTextProperties.text = text.substring(0, i);\n    width = measureSvgTextWidth(copiedTextProperties);\n    if (width > maxWidth) {\n        i--;\n    }\n    return textProperties.text.substring(0, i - ellipsis.length) + ellipsis;\n}\nexports.getTailoredTextOrDefault = getTailoredTextOrDefault;\n/**\n * Compares labels text size to the available size and renders ellipses when the available size is smaller.\n * @param textElement The SVGTextElement containing the text to render.\n * @param maxWidth The maximum width available for rendering the text.\n */\nfunction svgEllipsis(textElement, maxWidth) {\n    var properties = getSvgMeasurementProperties(textElement);\n    var originalText = properties.text;\n    var tailoredText = getTailoredTextOrDefault(properties, maxWidth);\n    if (originalText !== tailoredText) {\n        textElement.textContent = tailoredText;\n    }\n}\nexports.svgEllipsis = svgEllipsis;\n/**\n * Word break textContent of <text> SVG element into <tspan>s\n * Each tspan will be the height of a single line of text\n * @param textElement - the SVGTextElement containing the text to wrap\n * @param maxWidth - the maximum width available\n * @param maxHeight - the maximum height available (defaults to single line)\n * @param linePadding - (optional) padding to add to line height\n */\nfunction wordBreak(textElement, maxWidth, maxHeight, linePadding) {\n    if (linePadding === void 0) { linePadding = 0; }\n    var properties = getSvgMeasurementProperties(textElement);\n    var height = estimateSvgTextHeight(properties) + linePadding;\n    var maxNumLines = Math.max(1, Math.floor(maxHeight / height));\n    // Save y of parent textElement to apply as first tspan dy\n    var firstDY = textElement ? textElement.getAttribute(\"y\") : null;\n    // Store and clear text content\n    var labelText = textElement ? textElement.textContent : null;\n    textElement.textContent = null;\n    // Append a tspan for each word broken section\n    var words = wordBreaker.splitByWidth(labelText, properties, measureSvgTextWidth, maxWidth, maxNumLines);\n    var fragment = document.createDocumentFragment();\n    for (var i = 0, ilen = words.length; i < ilen; i++) {\n        var dy = i === 0 ? firstDY : height;\n        properties.text = words[i];\n        /* eslint-disable-next-line powerbi-visuals/no-http-string */\n        var textElement_1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n        textElement_1.setAttribute(\"x\", \"0\");\n        textElement_1.setAttribute(\"dy\", dy ? dy.toString() : null);\n        textElement_1.appendChild(document.createTextNode(getTailoredTextOrDefault(properties, maxWidth)));\n        fragment.appendChild(textElement_1);\n    }\n    textElement.appendChild(fragment);\n}\nexports.wordBreak = wordBreak;\n/**\n * Word break textContent of span element into <span>s\n * Each span will be the height of a single line of text\n * @param textElement - the element containing the text to wrap\n * @param maxWidth - the maximum width available\n * @param maxHeight - the maximum height available (defaults to single line)\n * @param linePadding - (optional) padding to add to line height\n */\nfunction wordBreakOverflowingText(textElement, maxWidth, maxHeight, linePadding) {\n    if (linePadding === void 0) { linePadding = 0; }\n    var properties = getSvgMeasurementProperties(textElement);\n    var height = estimateSvgTextHeight(properties) + linePadding;\n    var maxNumLines = Math.max(1, Math.floor(maxHeight / height));\n    // Store and clear text content\n    var labelText = textElement.textContent;\n    textElement.textContent = null;\n    // Append a span for each word broken section\n    var words = wordBreaker.splitByWidth(labelText, properties, measureSvgTextWidth, maxWidth, maxNumLines);\n    var fragment = document.createDocumentFragment();\n    for (var i = 0; i < words.length; i++) {\n        var span = document.createElement(\"span\");\n        span.style.overflow = \"hidden\";\n        span.style.whiteSpace = \"nowrap\";\n        span.style.textOverflow = \"ellipsis\";\n        span.style.display = \"block\";\n        span.style.width = powerbi_visuals_utils_typeutils_1.pixelConverter.toString(maxWidth);\n        span.appendChild(document.createTextNode(words[i]));\n        span.appendChild(document.createTextNode(getTailoredTextOrDefault(properties, maxWidth)));\n        fragment.appendChild(span);\n    }\n    textElement.appendChild(fragment);\n}\nexports.wordBreakOverflowingText = wordBreakOverflowingText;\n//# sourceMappingURL=textMeasurementService.js.map","\"use strict\";\n/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceSpaceWithNBSP = exports.removeEllipses = exports.removeBreakingSpaces = void 0;\n/**\n * Contains functions/constants to aid in text manupilation.\n */\n/**\n * Remove breaking spaces from given string and replace by none breaking space (&nbsp).\n */\nfunction removeBreakingSpaces(str) {\n    return str.toString().replace(new RegExp(\" \", \"g\"), \"&nbsp\");\n}\nexports.removeBreakingSpaces = removeBreakingSpaces;\n/**\n * Remove ellipses from a given string\n */\nfunction removeEllipses(str) {\n    return str.replace(/(…)|(\\.\\.\\.)/g, \"\");\n}\nexports.removeEllipses = removeEllipses;\n/**\n* Replace every whitespace (0x20) with Non-Breaking Space (0xA0)\n    * @param {string} txt String to replace White spaces\n    * @returns Text after replcing white spaces\n    */\nfunction replaceSpaceWithNBSP(txt) {\n    if (txt != null) {\n        return txt.replace(/ /g, \"\\xA0\");\n    }\n}\nexports.replaceSpaceWithNBSP = replaceSpaceWithNBSP;\n//# sourceMappingURL=textUtil.js.map","\"use strict\";\n/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateExactDigitsPrecision = exports.getDisplayUnits = exports.formatListOr = exports.formatListAnd = exports.getFormatStringByColumn = exports.getFormatString = exports.createDisplayUnitSystem = exports.formatVariantMeasureValue = exports.format = exports.create = exports.checkValueInBounds = exports.createDefaultFormatter = exports.setLocaleOptions = exports.getFormatMetadata = exports.getLocalizedString = exports.DefaultDateFormat = exports.DefaultNumericFormat = exports.DefaultIntegerFormat = void 0;\nvar displayUnitSystem_1 = require(\"./displayUnitSystem/displayUnitSystem\");\nvar displayUnitSystemType_1 = require(\"./displayUnitSystem/displayUnitSystemType\");\nvar stringExtensions = require(\"./stringExtensions\");\nvar formattingService_1 = require(\"./formattingService/formattingService\");\nvar dateTimeSequence_1 = require(\"./date/dateTimeSequence\");\nvar powerbi_visuals_utils_typeutils_1 = require(\"powerbi-visuals-utils-typeutils\");\nvar powerbi_visuals_utils_dataviewutils_1 = require(\"powerbi-visuals-utils-dataviewutils\");\n// powerbi.extensibility.utils.type\nvar ValueType = powerbi_visuals_utils_typeutils_1.valueType.ValueType;\nvar PrimitiveType = powerbi_visuals_utils_typeutils_1.valueType.PrimitiveType;\nvar StringExtensions = stringExtensions;\nvar BeautifiedFormat = {\n    \"0.00 %;-0.00 %;0.00 %\": \"Percentage\",\n    \"0.0 %;-0.0 %;0.0 %\": \"Percentage1\",\n};\nexports.DefaultIntegerFormat = \"g\";\nexports.DefaultNumericFormat = \"#,0.00\";\nexports.DefaultDateFormat = \"d\";\nvar defaultLocalizedStrings = {\n    \"NullValue\": \"(Blank)\",\n    \"BooleanTrue\": \"True\",\n    \"BooleanFalse\": \"False\",\n    \"NaNValue\": \"NaN\",\n    \"InfinityValue\": \"+Infinity\",\n    \"NegativeInfinityValue\": \"-Infinity\",\n    \"RestatementComma\": \"{0}, {1}\",\n    \"RestatementCompoundAnd\": \"{0} and {1}\",\n    \"RestatementCompoundOr\": \"{0} or {1}\",\n    \"DisplayUnitSystem_EAuto_Title\": \"Auto\",\n    \"DisplayUnitSystem_E0_Title\": \"None\",\n    \"DisplayUnitSystem_E3_LabelFormat\": \"{0}K\",\n    \"DisplayUnitSystem_E3_Title\": \"Thousands\",\n    \"DisplayUnitSystem_E6_LabelFormat\": \"{0}M\",\n    \"DisplayUnitSystem_E6_Title\": \"Millions\",\n    \"DisplayUnitSystem_E9_LabelFormat\": \"{0}bn\",\n    \"DisplayUnitSystem_E9_Title\": \"Billions\",\n    \"DisplayUnitSystem_E12_LabelFormat\": \"{0}T\",\n    \"DisplayUnitSystem_E12_Title\": \"Trillions\",\n    \"Percentage\": \"#,0.##%\",\n    \"Percentage1\": \"#,0.#%\",\n    \"TableTotalLabel\": \"Total\",\n    \"Tooltip_HighlightedValueDisplayName\": \"Highlighted\",\n    \"Funnel_PercentOfFirst\": \"Percent of first\",\n    \"Funnel_PercentOfPrevious\": \"Percent of previous\",\n    \"Funnel_PercentOfFirst_Highlight\": \"Percent of first (highlighted)\",\n    \"Funnel_PercentOfPrevious_Highlight\": \"Percent of previous (highlighted)\",\n    // Geotagging strings\n    \"GeotaggingString_Continent\": \"continent\",\n    \"GeotaggingString_Continents\": \"continents\",\n    \"GeotaggingString_Country\": \"country\",\n    \"GeotaggingString_Countries\": \"countries\",\n    \"GeotaggingString_State\": \"state\",\n    \"GeotaggingString_States\": \"states\",\n    \"GeotaggingString_City\": \"city\",\n    \"GeotaggingString_Cities\": \"cities\",\n    \"GeotaggingString_Town\": \"town\",\n    \"GeotaggingString_Towns\": \"towns\",\n    \"GeotaggingString_Province\": \"province\",\n    \"GeotaggingString_Provinces\": \"provinces\",\n    \"GeotaggingString_County\": \"county\",\n    \"GeotaggingString_Counties\": \"counties\",\n    \"GeotaggingString_Village\": \"village\",\n    \"GeotaggingString_Villages\": \"villages\",\n    \"GeotaggingString_Post\": \"post\",\n    \"GeotaggingString_Zip\": \"zip\",\n    \"GeotaggingString_Code\": \"code\",\n    \"GeotaggingString_Place\": \"place\",\n    \"GeotaggingString_Places\": \"places\",\n    \"GeotaggingString_Address\": \"address\",\n    \"GeotaggingString_Addresses\": \"addresses\",\n    \"GeotaggingString_Street\": \"street\",\n    \"GeotaggingString_Streets\": \"streets\",\n    \"GeotaggingString_Longitude\": \"longitude\",\n    \"GeotaggingString_Longitude_Short\": \"lon\",\n    \"GeotaggingString_Longitude_Short2\": \"long\",\n    \"GeotaggingString_Latitude\": \"latitude\",\n    \"GeotaggingString_Latitude_Short\": \"lat\",\n    \"GeotaggingString_PostalCode\": \"postal code\",\n    \"GeotaggingString_PostalCodes\": \"postal codes\",\n    \"GeotaggingString_ZipCode\": \"zip code\",\n    \"GeotaggingString_ZipCodes\": \"zip codes\",\n    \"GeotaggingString_Territory\": \"territory\",\n    \"GeotaggingString_Territories\": \"territories\",\n};\nfunction beautify(format) {\n    var key = BeautifiedFormat[format];\n    if (key)\n        return defaultLocalizedStrings[key] || format;\n    return format;\n}\nfunction describeUnit(exponent) {\n    var exponentLookup = (exponent === -1) ? \"Auto\" : exponent.toString();\n    var title = defaultLocalizedStrings[\"DisplayUnitSystem_E\" + exponentLookup + \"_Title\"];\n    var format = (exponent <= 0) ? \"{0}\" : defaultLocalizedStrings[\"DisplayUnitSystem_E\" + exponentLookup + \"_LabelFormat\"];\n    if (title || format)\n        return { title: title, format: format };\n}\nfunction getLocalizedString(stringId) {\n    return defaultLocalizedStrings[stringId];\n}\nexports.getLocalizedString = getLocalizedString;\n// NOTE: Define default locale options, but these can be overriden by setLocaleOptions.\nvar localizationOptions = {\n    nullValue: defaultLocalizedStrings[\"NullValue\"],\n    trueValue: defaultLocalizedStrings[\"BooleanTrue\"],\n    falseValue: defaultLocalizedStrings[\"BooleanFalse\"],\n    NaN: defaultLocalizedStrings[\"NaNValue\"],\n    infinity: defaultLocalizedStrings[\"InfinityValue\"],\n    negativeInfinity: defaultLocalizedStrings[\"NegativeInfinityValue\"],\n    beautify: function (format) { return beautify(format); },\n    describe: function (exponent) { return describeUnit(exponent); },\n    restatementComma: defaultLocalizedStrings[\"RestatementComma\"],\n    restatementCompoundAnd: defaultLocalizedStrings[\"RestatementCompoundAnd\"],\n    restatementCompoundOr: defaultLocalizedStrings[\"RestatementCompoundOr\"],\n};\nvar MaxScaledDecimalPlaces = 2;\nvar MaxValueForDisplayUnitRounding = 1000;\nvar MinIntegerValueForDisplayUnits = 10000;\nvar MinPrecisionForDisplayUnits = 2;\nvar DateTimeMetadataColumn = {\n    displayName: \"\",\n    type: ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.DateTime),\n};\nfunction getFormatMetadata(format) {\n    return formattingService_1.numberFormat.getCustomFormatMetadata(format);\n}\nexports.getFormatMetadata = getFormatMetadata;\nfunction setLocaleOptions(options) {\n    localizationOptions = options;\n    displayUnitSystem_1.DefaultDisplayUnitSystem.RESET();\n    displayUnitSystem_1.WholeUnitsDisplayUnitSystem.RESET();\n}\nexports.setLocaleOptions = setLocaleOptions;\nfunction createDefaultFormatter(formatString, allowFormatBeautification, cultureSelector) {\n    var formatBeautified = allowFormatBeautification\n        ? localizationOptions.beautify(formatString)\n        : formatString;\n    return {\n        format: function (value) {\n            if (value == null) {\n                return localizationOptions.nullValue;\n            }\n            return formatCore({\n                value: value,\n                cultureSelector: cultureSelector,\n                format: formatBeautified\n            });\n        }\n    };\n}\nexports.createDefaultFormatter = createDefaultFormatter;\n/**\n * Check that provided value is in provided bounds. If not -- replace it by minimal or maximal replacement value\n * @param targetNum checking value\n * @param min minimal bound of value\n * @param max maximal bound of value\n * @param lessMinReplacement value that will be returned if checking value is lesser than minimal\n * @param greaterMaxReplacement value that will be returned if checking value is greater than maximal\n */\nfunction checkValueInBounds(targetNum, min, max, lessMinReplacement, greaterMaxReplacement) {\n    if (lessMinReplacement === void 0) { lessMinReplacement = min; }\n    if (greaterMaxReplacement === void 0) { greaterMaxReplacement = max; }\n    if (max !== undefined && max !== null) {\n        targetNum = targetNum <= max ? targetNum : greaterMaxReplacement;\n    }\n    if (min !== undefined && min !== null) {\n        targetNum = targetNum > min ? targetNum : lessMinReplacement;\n    }\n    return targetNum;\n}\nexports.checkValueInBounds = checkValueInBounds;\n// Creates an IValueFormatter to be used for a range of values.\nfunction create(options) {\n    var format = options.allowFormatBeautification\n        ? localizationOptions.beautify(options.format)\n        : options.format;\n    var cultureSelector = options.cultureSelector;\n    if (shouldUseNumericDisplayUnits(options)) {\n        var displayUnitSystem_2 = createDisplayUnitSystem(options.displayUnitSystemType);\n        var singleValueFormattingMode_1 = !!options.formatSingleValues;\n        displayUnitSystem_2.update(Math.max(Math.abs(options.value || 0), Math.abs(options.value2 || 0)));\n        var forcePrecision_1 = options.precision != null;\n        var decimals_1;\n        if (forcePrecision_1)\n            decimals_1 = -options.precision;\n        else if (displayUnitSystem_2.displayUnit && displayUnitSystem_2.displayUnit.value > 1)\n            decimals_1 = -MaxScaledDecimalPlaces;\n        return {\n            format: function (value) {\n                var formattedValue = getStringFormat(value, true /*nullsAreBlank*/);\n                if (!StringExtensions.isNullOrUndefinedOrWhiteSpaceString(formattedValue)) {\n                    return formattedValue;\n                }\n                // Round to Double.DEFAULT_PRECISION\n                if (value\n                    && !displayUnitSystem_2.isScalingUnit()\n                    && Math.abs(value) < MaxValueForDisplayUnitRounding\n                    && !forcePrecision_1) {\n                    value = powerbi_visuals_utils_typeutils_1.double.roundToPrecision(value);\n                }\n                if (singleValueFormattingMode_1) {\n                    return displayUnitSystem_2.formatSingleValue(value, format, decimals_1, forcePrecision_1, cultureSelector);\n                }\n                else {\n                    return displayUnitSystem_2.format(value, format, decimals_1, forcePrecision_1, cultureSelector);\n                }\n            },\n            displayUnit: displayUnitSystem_2.displayUnit,\n            options: options\n        };\n    }\n    if (shouldUseDateUnits(options.value, options.value2, options.tickCount)) {\n        var unit_1 = dateTimeSequence_1.DateTimeSequence.GET_INTERVAL_UNIT(options.value /* minDate */, options.value2 /* maxDate */, options.tickCount);\n        return {\n            format: function (value) {\n                if (value == null) {\n                    return localizationOptions.nullValue;\n                }\n                var formatString = formattingService_1.formattingService.dateFormatString(unit_1);\n                return formatCore({\n                    value: value,\n                    cultureSelector: cultureSelector,\n                    format: formatString,\n                });\n            },\n            options: options\n        };\n    }\n    return createDefaultFormatter(format, false, cultureSelector);\n}\nexports.create = create;\nfunction format(value, format, allowFormatBeautification, cultureSelector) {\n    if (value == null) {\n        return localizationOptions.nullValue;\n    }\n    var formatString = allowFormatBeautification\n        ? localizationOptions.beautify(format)\n        : format;\n    return formatCore({\n        value: value,\n        cultureSelector: cultureSelector,\n        format: formatString\n    });\n}\nexports.format = format;\n/**\n * Value formatting function to handle variant measures.\n * For a Date/Time value within a non-date/time field, it's formatted with the default date/time formatString instead of as a number\n * @param {any} value Value to be formatted\n * @param {DataViewMetadataColumn} column Field which the value belongs to\n * @param {DataViewObjectPropertyIdentifier} formatStringProp formatString Property ID\n * @param {boolean} nullsAreBlank? Whether to show \"(Blank)\" instead of empty string for null values\n * @returns Formatted value\n */\nfunction formatVariantMeasureValue(value, column, formatStringProp, nullsAreBlank, cultureSelector) {\n    // If column type is not datetime, but the value is of time datetime,\n    // then use the default date format string\n    if (!(column && column.type && column.type.dateTime) && value instanceof Date) {\n        var valueFormat = getFormatString(DateTimeMetadataColumn, null, false);\n        return formatCore({\n            value: value,\n            nullsAreBlank: nullsAreBlank,\n            cultureSelector: cultureSelector,\n            format: valueFormat\n        });\n    }\n    else {\n        var valueFormat = getFormatString(column, formatStringProp);\n        return formatCore({\n            value: value,\n            nullsAreBlank: nullsAreBlank,\n            cultureSelector: cultureSelector,\n            format: valueFormat\n        });\n    }\n}\nexports.formatVariantMeasureValue = formatVariantMeasureValue;\nfunction createDisplayUnitSystem(displayUnitSystemType) {\n    if (displayUnitSystemType == null)\n        return new displayUnitSystem_1.DefaultDisplayUnitSystem(localizationOptions.describe);\n    switch (displayUnitSystemType) {\n        case displayUnitSystemType_1.DisplayUnitSystemType.Default:\n            return new displayUnitSystem_1.DefaultDisplayUnitSystem(localizationOptions.describe);\n        case displayUnitSystemType_1.DisplayUnitSystemType.WholeUnits:\n            return new displayUnitSystem_1.WholeUnitsDisplayUnitSystem(localizationOptions.describe);\n        case displayUnitSystemType_1.DisplayUnitSystemType.Verbose:\n            return new displayUnitSystem_1.NoDisplayUnitSystem();\n        case displayUnitSystemType_1.DisplayUnitSystemType.DataLabels:\n            return new displayUnitSystem_1.DataLabelsDisplayUnitSystem(localizationOptions.describe);\n        default:\n            return new displayUnitSystem_1.DefaultDisplayUnitSystem(localizationOptions.describe);\n    }\n}\nexports.createDisplayUnitSystem = createDisplayUnitSystem;\nfunction shouldUseNumericDisplayUnits(options) {\n    var value = options.value;\n    var value2 = options.value2;\n    var format = options.format;\n    // For singleValue visuals like card, gauge we don't want to roundoff data to the nearest thousands so format the whole number / integers below 10K to not use display units\n    if (options.formatSingleValues && format) {\n        if (Math.abs(value) < MinIntegerValueForDisplayUnits) {\n            var isCustomFormat = !formattingService_1.numberFormat.isStandardFormat(format);\n            if (isCustomFormat) {\n                var precision = formattingService_1.numberFormat.getCustomFormatMetadata(format, true /*calculatePrecision*/).precision;\n                if (precision < MinPrecisionForDisplayUnits)\n                    return false;\n            }\n            else if (powerbi_visuals_utils_typeutils_1.double.isInteger(value))\n                return false;\n        }\n    }\n    if ((typeof value === \"number\") || (typeof value2 === \"number\")) {\n        return true;\n    }\n}\nfunction shouldUseDateUnits(value, value2, tickCount) {\n    // must check both value and value2 because we'll need to get an interval for date units\n    return (value instanceof Date) && (value2 instanceof Date) && (tickCount !== undefined && tickCount !== null);\n}\n/*\n    * Get the column format. Order of precendence is:\n    *  1. Column format\n    *  2. Default PowerView policy for column type\n    */\nfunction getFormatString(column, formatStringProperty, suppressTypeFallback) {\n    if (column) {\n        if (formatStringProperty) {\n            var propertyValue = powerbi_visuals_utils_dataviewutils_1.dataViewObjects.getValue(column.objects, formatStringProperty);\n            if (propertyValue)\n                return propertyValue;\n        }\n        if (!suppressTypeFallback) {\n            var columnType = column.type;\n            if (columnType) {\n                if (columnType.dateTime)\n                    return exports.DefaultDateFormat;\n                if (columnType.integer) {\n                    if (columnType.temporal && columnType.temporal.year)\n                        return \"0\";\n                    return exports.DefaultIntegerFormat;\n                }\n                if (columnType.numeric)\n                    return exports.DefaultNumericFormat;\n            }\n        }\n    }\n}\nexports.getFormatString = getFormatString;\nfunction getFormatStringByColumn(column, suppressTypeFallback) {\n    if (column) {\n        if (column.format) {\n            return column.format;\n        }\n        if (!suppressTypeFallback) {\n            var columnType = column.type;\n            if (columnType) {\n                if (columnType.dateTime) {\n                    return exports.DefaultDateFormat;\n                }\n                if (columnType.integer) {\n                    if (columnType.temporal && columnType.temporal.year) {\n                        return \"0\";\n                    }\n                    return exports.DefaultIntegerFormat;\n                }\n                if (columnType.numeric) {\n                    return exports.DefaultNumericFormat;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexports.getFormatStringByColumn = getFormatStringByColumn;\nfunction formatListCompound(strings, conjunction) {\n    var result;\n    if (!strings) {\n        return null;\n    }\n    var length = strings.length;\n    if (length > 0) {\n        result = strings[0];\n        var lastIndex = length - 1;\n        for (var i = 1, len = lastIndex; i < len; i++) {\n            var value = strings[i];\n            result = StringExtensions.format(localizationOptions.restatementComma, result, value);\n        }\n        if (length > 1) {\n            var value = strings[lastIndex];\n            result = StringExtensions.format(conjunction, result, value);\n        }\n    }\n    else {\n        result = null;\n    }\n    return result;\n}\n// The returned string will look like 'A, B, ..., and C'\nfunction formatListAnd(strings) {\n    return formatListCompound(strings, localizationOptions.restatementCompoundAnd);\n}\nexports.formatListAnd = formatListAnd;\n// The returned string will look like 'A, B, ..., or C'\nfunction formatListOr(strings) {\n    return formatListCompound(strings, localizationOptions.restatementCompoundOr);\n}\nexports.formatListOr = formatListOr;\nfunction formatCore(options) {\n    var value = options.value, format = options.format, nullsAreBlank = options.nullsAreBlank, cultureSelector = options.cultureSelector;\n    var formattedValue = getStringFormat(value, nullsAreBlank ? nullsAreBlank : false);\n    if (!StringExtensions.isNullOrUndefinedOrWhiteSpaceString(formattedValue)) {\n        return formattedValue;\n    }\n    return formattingService_1.formattingService.formatValue(value, format, cultureSelector);\n}\nfunction getStringFormat(value, nullsAreBlank) {\n    if (value == null && nullsAreBlank) {\n        return localizationOptions.nullValue;\n    }\n    if (value === true) {\n        return localizationOptions.trueValue;\n    }\n    if (value === false) {\n        return localizationOptions.falseValue;\n    }\n    if (typeof value === \"number\" && isNaN(value)) {\n        return localizationOptions.NaN;\n    }\n    if (value === Number.NEGATIVE_INFINITY) {\n        return localizationOptions.negativeInfinity;\n    }\n    if (value === Number.POSITIVE_INFINITY) {\n        return localizationOptions.infinity;\n    }\n    return \"\";\n}\nfunction getDisplayUnits(displayUnitSystemType) {\n    var displayUnitSystem = createDisplayUnitSystem(displayUnitSystemType);\n    return displayUnitSystem.units;\n}\nexports.getDisplayUnits = getDisplayUnits;\n/**\n * Precision calculating function to build values showing minimum 3 digits as 3.56 or 25.7 or 754 or 2345\n * @param {number} inputValue Value to be basement for precision calculation\n * @param {string} format Format that will be used for value formatting (to detect percentage values)\n * @param {number} displayUnits Dispaly units that will be used for value formatting (to correctly calculate precision)\n * @param {number} digitsNum Number of visible digits, including digits before separator\n * @returns calculated precision\n */\nfunction calculateExactDigitsPrecision(inputValue, format, displayUnits, digitsNum) {\n    if (!inputValue && inputValue !== 0) {\n        return 0;\n    }\n    var precision = 0;\n    var inPercent = format && format.indexOf(\"%\") !== -1;\n    var value = inPercent ? inputValue * 100 : inputValue;\n    value = displayUnits > 0 ? value / displayUnits : value;\n    var leftPartLength = parseInt(value).toString().length;\n    if ((inPercent || displayUnits > 0) && leftPartLength >= digitsNum) {\n        return 0;\n    }\n    // Auto units, calculate final value \n    if (displayUnits === 0) {\n        var unitsDegree = Math.floor(leftPartLength / 3);\n        unitsDegree = leftPartLength % 3 === 0 ? unitsDegree - 1 : unitsDegree;\n        var divider = Math.pow(1000, unitsDegree);\n        if (divider > 0) {\n            value = value / divider;\n        }\n    }\n    leftPartLength = parseInt(value).toString().length;\n    var restOfDiv = leftPartLength % digitsNum;\n    if (restOfDiv === 0) {\n        precision = 0;\n    }\n    else {\n        precision = digitsNum - restOfDiv;\n    }\n    return precision;\n}\nexports.calculateExactDigitsPrecision = calculateExactDigitsPrecision;\n//# sourceMappingURL=valueFormatter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitByWidth = exports.getMaxWordWidth = exports.wordCount = exports.hasBreakers = exports.find = void 0;\nvar SPACE = \" \";\nvar BREAKERS_REGEX = /[\\s\\n]+/g;\nfunction search(index, content, backward) {\n    if (backward) {\n        for (var i = index - 1; i > -1; i--) {\n            if (hasBreakers(content[i]))\n                return i + 1;\n        }\n    }\n    else {\n        for (var i = index, ilen = content.length; i < ilen; i++) {\n            if (hasBreakers(content[i]))\n                return i;\n        }\n    }\n    return backward ? 0 : content.length;\n}\n/**\n * Find the word nearest the cursor specified within content\n * @param index - point within content to search forward/backward from\n * @param content - string to search\n*/\nfunction find(index, content) {\n    var result = { start: 0, end: 0 };\n    if (content.length === 0) {\n        return result;\n    }\n    result.start = search(index, content, true);\n    result.end = search(index, content, false);\n    return result;\n}\nexports.find = find;\n/**\n * Test for presence of breakers within content\n * @param content - string to test\n*/\nfunction hasBreakers(content) {\n    BREAKERS_REGEX.lastIndex = 0;\n    return BREAKERS_REGEX.test(content);\n}\nexports.hasBreakers = hasBreakers;\n/**\n * Count the number of pieces when broken by BREAKERS_REGEX\n * ~2.7x faster than WordBreaker.split(content).length\n * @param content - string to break and count\n*/\nfunction wordCount(content) {\n    var count = 1;\n    BREAKERS_REGEX.lastIndex = 0;\n    BREAKERS_REGEX.exec(content);\n    while (BREAKERS_REGEX.lastIndex !== 0) {\n        count++;\n        BREAKERS_REGEX.exec(content);\n    }\n    return count;\n}\nexports.wordCount = wordCount;\nfunction getMaxWordWidth(content, textWidthMeasurer, properties) {\n    var words = split(content);\n    var maxWidth = 0;\n    for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n        var w = words_1[_i];\n        properties.text = w;\n        maxWidth = Math.max(maxWidth, textWidthMeasurer(properties));\n    }\n    return maxWidth;\n}\nexports.getMaxWordWidth = getMaxWordWidth;\nfunction split(content) {\n    return content.split(BREAKERS_REGEX);\n}\nfunction getWidth(content, properties, textWidthMeasurer) {\n    properties.text = content;\n    return textWidthMeasurer(properties);\n}\nfunction truncate(content, properties, truncator, maxWidth) {\n    properties.text = content;\n    return truncator(properties, maxWidth);\n}\n/**\n * Split content by breakers (words) and greedy fit as many words\n * into each index in the result based on max width and number of lines\n * e.g. Each index in result corresponds to a line of content\n *      when used by AxisHelper.LabelLayoutStrategy.wordBreak\n * @param content - string to split\n * @param properties - text properties to be used by @param:textWidthMeasurer\n * @param textWidthMeasurer - function to calculate width of given text content\n * @param maxWidth - maximum allowed width of text content in each result\n * @param maxNumLines - maximum number of results we will allow, valid values must be greater than 0\n * @param truncator - (optional) if specified, used as a function to truncate content to a given width\n*/\nfunction splitByWidth(content, properties, textWidthMeasurer, maxWidth, maxNumLines, truncator) {\n    // Default truncator returns string as-is\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    truncator = truncator ? truncator : function (properties, maxWidth) { return properties.text; };\n    var result = [];\n    var words = split(content);\n    var usedWidth = 0;\n    var wordsInLine = [];\n    for (var _i = 0, words_2 = words; _i < words_2.length; _i++) {\n        var word = words_2[_i];\n        // Last line? Just add whatever is left\n        if ((maxNumLines > 0) && (result.length >= maxNumLines - 1)) {\n            wordsInLine.push(word);\n            continue;\n        }\n        // Determine width if we add this word\n        // Account for SPACE we will add when joining...\n        var wordWidth = wordsInLine.length === 0\n            ? getWidth(word, properties, textWidthMeasurer)\n            : getWidth(SPACE + word, properties, textWidthMeasurer);\n        // If width would exceed max width,\n        // then push used words and start new split result\n        if (usedWidth + wordWidth > maxWidth) {\n            // Word alone exceeds max width, just add it.\n            if (wordsInLine.length === 0) {\n                result.push(truncate(word, properties, truncator, maxWidth));\n                usedWidth = 0;\n                wordsInLine = [];\n                continue;\n            }\n            result.push(truncate(wordsInLine.join(SPACE), properties, truncator, maxWidth));\n            usedWidth = 0;\n            wordsInLine = [];\n        }\n        // ...otherwise, add word and continue\n        wordsInLine.push(word);\n        usedWidth += wordWidth;\n    }\n    // Push remaining words onto result (if any)\n    if (wordsInLine && wordsInLine.length) {\n        result.push(truncate(wordsInLine.join(SPACE), properties, truncator, maxWidth));\n    }\n    return result;\n}\nexports.splitByWidth = splitByWidth;\n//# sourceMappingURL=wordBreaker.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nexport function createClassAndSelector(className) {\n    return {\n        className: className,\n        selectorName: \".\" + className,\n    };\n}\nexport const styleAttribute = \"style\";\nexport const pixelUnits = \"px\";\nexport const heightProperty = \"height\";\nexport const widthProperty = \"width\";\nexport const topProperty = \"top\";\nexport const bottomProperty = \"bottom\";\nexport const leftProperty = \"left\";\nexport const rightProperty = \"right\";\nexport const marginTopProperty = \"margin-top\";\nexport const marginLeftProperty = \"margin-left\";\nexport const displayProperty = \"display\";\nexport const backgroundProperty = \"background\";\nexport const backgroundColorProperty = \"background-color\";\nexport const backgroundRepeatProperty = \"background-repeat\";\nexport const backgroundSizeProperty = \"background-size\";\nexport const backgroundImageProperty = \"background-image\";\nexport const textShadowProperty = \"text-shadow\";\nexport const textAlignProperty = \"text-align\";\nexport const borderProperty = \"border\";\nexport const borderTopWidthProperty = \"border-top-width\";\nexport const borderBottomWidthProperty = \"border-bottom-width\";\nexport const borderLeftWidthProperty = \"border-left-width\";\nexport const borderRightWidthProperty = \"border-right-width\";\nexport const fontSizeProperty = \"font-size\";\nexport const fontWeightProperty = \"font-weight\";\nexport const colorProperty = \"color\";\nexport const opacityProperty = \"opacity\";\nexport const paddingLeftProperty = \"padding-left\";\nexport const paddingRightProperty = \"padding-right\";\nexport const positionProperty = \"position\";\nexport const maxWidthProperty = \"max-width\";\nexport const minWidthProperty = \"min-width\";\nexport const overflowProperty = \"overflow\";\nexport const overflowXProperty = \"overflow-x\";\nexport const overflowYProperty = \"overflow-y\";\nexport const transformProperty = \"transform\";\nexport const webkitTransformProperty = \"-webkit-transform\";\nexport const cursorProperty = \"cursor\";\nexport const visibilityProperty = \"visibility\";\nexport const absoluteValue = \"absolute\";\nexport const zeroPixelValue = \"0px\";\nexport const autoValue = \"auto\";\nexport const hiddenValue = \"hidden\";\nexport const noneValue = \"none\";\nexport const blockValue = \"block\";\nexport const inlineBlockValue = \"inline-block\";\nexport const transparentValue = \"transparent\";\nexport const boldValue = \"bold\";\nexport const visibleValue = \"visible\";\nexport const tableRowValue = \"table-row\";\nexport const coverValue = \"cover\";\nexport const pointerValue = \"pointer\";\nexport const scrollValue = \"scroll\";\n//# sourceMappingURL=cssConstants.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nimport { timerFlush } from \"d3-timer\";\n/**\n * Very small values, when stringified, may be converted to scientific notation and cause a temporarily\n * invalid attribute or style property value.\n * For example, the number 0.0000001 is converted to the string \"1e-7\".\n * This is particularly noticeable when interpolating opacity values.\n * To avoid scientific notation, start or end the transition at 1e-6,\n * which is the smallest value that is not stringified in exponential notation.\n */\nexport const AlmostZero = 1e-6;\n/**\n     * Creates a translate string for use with the SVG transform call.\n     */\nexport function translate(x, y) {\n    return \"translate(\" + x + \",\" + y + \")\";\n}\n/**\n * Creates a translateX string for use with the SVG transform call.\n */\nexport function translateXWithPixels(x) {\n    return \"translateX(\" + x + \"px)\";\n}\nexport function translateWithPixels(x, y) {\n    return \"translate(\" + x + \"px,\" + y + \"px)\";\n}\n/**\n * Creates a translate + rotate string for use with the SVG transform call.\n */\nexport function translateAndRotate(x, y, px, py, angle) {\n    return \"translate(\"\n        + x + \",\" + y + \")\"\n        + \" rotate(\" + angle + \",\" + px + \",\" + py + \")\";\n}\n/**\n * Creates a scale string for use in a CSS transform property.\n */\nexport function scale(scale) {\n    return `scale(${scale})`;\n}\n/**\n * Creates a translate + scale string for use with the SVG transform call.\n */\nexport function translateAndScale(x, y, ratio) {\n    return \"translate(\"\n        + x + \",\" + y + \")\"\n        + \" scale(\" + ratio + \")\";\n}\n/**\n * Creates a transform origin string for use in a CSS transform-origin property.\n */\nexport function transformOrigin(xOffset, yOffset) {\n    return `${xOffset} ${yOffset}`;\n}\n/**\n * Forces all D3 transitions to complete.\n * Normally, zero-delay transitions are executed after an instantaneous delay (<10ms).\n * This can cause a brief flicker if the browser renders the page twice: once at the end of the first event loop,\n * then again immediately on the first timer callback. By flushing the timer queue at the end of the first event loop,\n * you can run any zero-delay transitions immediately and avoid the flicker.\n *\n * These flickers are noticable on IE, and with a large number of webviews(not recommend you ever do this) on iOS.\n */\nexport function flushAllD3Transitions() {\n    const now = Date.now;\n    Date.now = function () { return Infinity; };\n    timerFlush();\n    Date.now = now;\n}\n/**\n * Wrapper for flushAllD3Transitions.\n */\nexport function flushAllD3TransitionsIfNeeded(options) {\n    if (!options)\n        return;\n    const animationOptions = options;\n    if (animationOptions && animationOptions.transitionImmediate) {\n        flushAllD3Transitions();\n    }\n}\n/**\n * There is a known bug in IE10 that causes cryptic crashes for SVG elements with a null \"d\" attribute:\n * https://github.com/mbostock/d3/issues/1737\n */\nexport function ensureDAttribute(pathElement) {\n    if (!pathElement.getAttribute(\"d\")) {\n        pathElement.setAttribute(\"d\", \"\");\n    }\n}\n/**\n * In IE10, it is possible to return SVGPoints with NaN members.\n */\nexport function ensureValidSVGPoint(point) {\n    if (isNaN(point.x)) {\n        point.x = 0;\n    }\n    if (isNaN(point.y)) {\n        point.y = 0;\n    }\n}\n/**\n * Parse the Transform string with value \"translate(x,y)\".\n * In Chrome for the translate(position) string the delimiter\n * is a comma and in IE it is a spaceso checking for both.\n */\nexport function parseTranslateTransform(input) {\n    if (!input || input.length === 0) { // Interpet falsy and empty string as a no-op translate\n        return {\n            x: \"0\",\n            y: \"0\",\n        };\n    }\n    const translateCoordinates = input.split(/[\\s,]+/);\n    let yValue = \"0\";\n    let xValue;\n    const xCoord = translateCoordinates[0];\n    // Y coordinate is ommited in I.E if it is 0, so need to check against that\n    if (translateCoordinates.length === 1) {\n        // 10 refers to the length of \"translate(\"\n        xValue = xCoord.substring(10, xCoord.length - 1);\n    }\n    else {\n        const yCoord = translateCoordinates[1];\n        yValue = yCoord.substring(0, yCoord.length - 1);\n        // 10 refers to the length of \"translate(\"\n        xValue = xCoord.substring(10, xCoord.length);\n    }\n    return {\n        x: xValue,\n        y: yValue\n    };\n}\n/**\n * Create an arrow.\n */\nexport function createArrow(width, height, rotate) {\n    const transform = \"rotate(\" + rotate + \" \" + width / 2 + \" \" + height / 2 + \")\";\n    let path = \"M0 0\";\n    path += \"L0 \" + height;\n    path += \"L\" + width + \" \" + height / 2 + \" Z\";\n    return {\n        path: path,\n        transform: transform\n    };\n}\n/**\n * Use the ratio of the scaled bounding rect and the SVG DOM bounding box to get the x and y transform scale values\n * @deprecated This function is unreliable across browser implementations, prefer to use SVGScaleDetector if needed.\n */\nexport function getTransformScaleRatios(svgElement) {\n    if (svgElement != null) {\n        const scaledRect = svgElement.getBoundingClientRect();\n        const domRect = svgElement.getBBox();\n        if (domRect.height > 0 && domRect.width > 0) {\n            return {\n                x: scaledRect.width / domRect.width,\n                y: scaledRect.height / domRect.height\n            };\n        }\n    }\n    return { x: 1, y: 1 };\n}\n//# sourceMappingURL=manipulation.js.map","/*\n*  Power BI Visualizations\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\n/**\n * Module Double contains a set of constants and precision based utility methods\n * for dealing with doubles and their decimal garbage in the javascript.\n */\n// Constants.\nexport const MIN_VALUE = -Number.MAX_VALUE;\nexport const MAX_VALUE = Number.MAX_VALUE;\nexport const MIN_EXP = -308;\nexport const MAX_EXP = 308;\nexport const EPSILON = 1E-323;\nexport const DEFAULT_PRECISION = 0.0001;\nexport const DEFAULT_PRECISION_IN_DECIMAL_DIGITS = 12;\nexport const LOG_E_10 = Math.log(10);\nexport const POSITIVE_POWERS = [\n    1E0, 1E1, 1E2, 1E3, 1E4, 1E5, 1E6, 1E7, 1E8, 1E9, 1E10, 1E11, 1E12, 1E13, 1E14, 1E15, 1E16, 1E17, 1E18, 1E19, 1E20, 1E21, 1E22, 1E23, 1E24, 1E25, 1E26, 1E27, 1E28, 1E29, 1E30, 1E31, 1E32, 1E33, 1E34, 1E35, 1E36, 1E37, 1E38, 1E39, 1E40, 1E41, 1E42, 1E43, 1E44, 1E45, 1E46, 1E47, 1E48, 1E49, 1E50, 1E51, 1E52, 1E53, 1E54, 1E55, 1E56, 1E57, 1E58, 1E59, 1E60, 1E61, 1E62, 1E63, 1E64, 1E65, 1E66, 1E67, 1E68, 1E69, 1E70, 1E71, 1E72, 1E73, 1E74, 1E75, 1E76, 1E77, 1E78, 1E79, 1E80, 1E81, 1E82, 1E83, 1E84, 1E85, 1E86, 1E87, 1E88, 1E89, 1E90, 1E91, 1E92, 1E93, 1E94, 1E95, 1E96, 1E97, 1E98, 1E99,\n    1E100, 1E101, 1E102, 1E103, 1E104, 1E105, 1E106, 1E107, 1E108, 1E109, 1E110, 1E111, 1E112, 1E113, 1E114, 1E115, 1E116, 1E117, 1E118, 1E119, 1E120, 1E121, 1E122, 1E123, 1E124, 1E125, 1E126, 1E127, 1E128, 1E129, 1E130, 1E131, 1E132, 1E133, 1E134, 1E135, 1E136, 1E137, 1E138, 1E139, 1E140, 1E141, 1E142, 1E143, 1E144, 1E145, 1E146, 1E147, 1E148, 1E149, 1E150, 1E151, 1E152, 1E153, 1E154, 1E155, 1E156, 1E157, 1E158, 1E159, 1E160, 1E161, 1E162, 1E163, 1E164, 1E165, 1E166, 1E167, 1E168, 1E169, 1E170, 1E171, 1E172, 1E173, 1E174, 1E175, 1E176, 1E177, 1E178, 1E179, 1E180, 1E181, 1E182, 1E183, 1E184, 1E185, 1E186, 1E187, 1E188, 1E189, 1E190, 1E191, 1E192, 1E193, 1E194, 1E195, 1E196, 1E197, 1E198, 1E199,\n    1E200, 1E201, 1E202, 1E203, 1E204, 1E205, 1E206, 1E207, 1E208, 1E209, 1E210, 1E211, 1E212, 1E213, 1E214, 1E215, 1E216, 1E217, 1E218, 1E219, 1E220, 1E221, 1E222, 1E223, 1E224, 1E225, 1E226, 1E227, 1E228, 1E229, 1E230, 1E231, 1E232, 1E233, 1E234, 1E235, 1E236, 1E237, 1E238, 1E239, 1E240, 1E241, 1E242, 1E243, 1E244, 1E245, 1E246, 1E247, 1E248, 1E249, 1E250, 1E251, 1E252, 1E253, 1E254, 1E255, 1E256, 1E257, 1E258, 1E259, 1E260, 1E261, 1E262, 1E263, 1E264, 1E265, 1E266, 1E267, 1E268, 1E269, 1E270, 1E271, 1E272, 1E273, 1E274, 1E275, 1E276, 1E277, 1E278, 1E279, 1E280, 1E281, 1E282, 1E283, 1E284, 1E285, 1E286, 1E287, 1E288, 1E289, 1E290, 1E291, 1E292, 1E293, 1E294, 1E295, 1E296, 1E297, 1E298, 1E299,\n    1E300, 1E301, 1E302, 1E303, 1E304, 1E305, 1E306, 1E307, 1E308\n];\nexport const NEGATIVE_POWERS = [\n    1E0, 1E-1, 1E-2, 1E-3, 1E-4, 1E-5, 1E-6, 1E-7, 1E-8, 1E-9, 1E-10, 1E-11, 1E-12, 1E-13, 1E-14, 1E-15, 1E-16, 1E-17, 1E-18, 1E-19, 1E-20, 1E-21, 1E-22, 1E-23, 1E-24, 1E-25, 1E-26, 1E-27, 1E-28, 1E-29, 1E-30, 1E-31, 1E-32, 1E-33, 1E-34, 1E-35, 1E-36, 1E-37, 1E-38, 1E-39, 1E-40, 1E-41, 1E-42, 1E-43, 1E-44, 1E-45, 1E-46, 1E-47, 1E-48, 1E-49, 1E-50, 1E-51, 1E-52, 1E-53, 1E-54, 1E-55, 1E-56, 1E-57, 1E-58, 1E-59, 1E-60, 1E-61, 1E-62, 1E-63, 1E-64, 1E-65, 1E-66, 1E-67, 1E-68, 1E-69, 1E-70, 1E-71, 1E-72, 1E-73, 1E-74, 1E-75, 1E-76, 1E-77, 1E-78, 1E-79, 1E-80, 1E-81, 1E-82, 1E-83, 1E-84, 1E-85, 1E-86, 1E-87, 1E-88, 1E-89, 1E-90, 1E-91, 1E-92, 1E-93, 1E-94, 1E-95, 1E-96, 1E-97, 1E-98, 1E-99,\n    1E-100, 1E-101, 1E-102, 1E-103, 1E-104, 1E-105, 1E-106, 1E-107, 1E-108, 1E-109, 1E-110, 1E-111, 1E-112, 1E-113, 1E-114, 1E-115, 1E-116, 1E-117, 1E-118, 1E-119, 1E-120, 1E-121, 1E-122, 1E-123, 1E-124, 1E-125, 1E-126, 1E-127, 1E-128, 1E-129, 1E-130, 1E-131, 1E-132, 1E-133, 1E-134, 1E-135, 1E-136, 1E-137, 1E-138, 1E-139, 1E-140, 1E-141, 1E-142, 1E-143, 1E-144, 1E-145, 1E-146, 1E-147, 1E-148, 1E-149, 1E-150, 1E-151, 1E-152, 1E-153, 1E-154, 1E-155, 1E-156, 1E-157, 1E-158, 1E-159, 1E-160, 1E-161, 1E-162, 1E-163, 1E-164, 1E-165, 1E-166, 1E-167, 1E-168, 1E-169, 1E-170, 1E-171, 1E-172, 1E-173, 1E-174, 1E-175, 1E-176, 1E-177, 1E-178, 1E-179, 1E-180, 1E-181, 1E-182, 1E-183, 1E-184, 1E-185, 1E-186, 1E-187, 1E-188, 1E-189, 1E-190, 1E-191, 1E-192, 1E-193, 1E-194, 1E-195, 1E-196, 1E-197, 1E-198, 1E-199,\n    1E-200, 1E-201, 1E-202, 1E-203, 1E-204, 1E-205, 1E-206, 1E-207, 1E-208, 1E-209, 1E-210, 1E-211, 1E-212, 1E-213, 1E-214, 1E-215, 1E-216, 1E-217, 1E-218, 1E-219, 1E-220, 1E-221, 1E-222, 1E-223, 1E-224, 1E-225, 1E-226, 1E-227, 1E-228, 1E-229, 1E-230, 1E-231, 1E-232, 1E-233, 1E-234, 1E-235, 1E-236, 1E-237, 1E-238, 1E-239, 1E-240, 1E-241, 1E-242, 1E-243, 1E-244, 1E-245, 1E-246, 1E-247, 1E-248, 1E-249, 1E-250, 1E-251, 1E-252, 1E-253, 1E-254, 1E-255, 1E-256, 1E-257, 1E-258, 1E-259, 1E-260, 1E-261, 1E-262, 1E-263, 1E-264, 1E-265, 1E-266, 1E-267, 1E-268, 1E-269, 1E-270, 1E-271, 1E-272, 1E-273, 1E-274, 1E-275, 1E-276, 1E-277, 1E-278, 1E-279, 1E-280, 1E-281, 1E-282, 1E-283, 1E-284, 1E-285, 1E-286, 1E-287, 1E-288, 1E-289, 1E-290, 1E-291, 1E-292, 1E-293, 1E-294, 1E-295, 1E-296, 1E-297, 1E-298, 1E-299,\n    1E-300, 1E-301, 1E-302, 1E-303, 1E-304, 1E-305, 1E-306, 1E-307, 1E-308, 1E-309, 1E-310, 1E-311, 1E-312, 1E-313, 1E-314, 1E-315, 1E-316, 1E-317, 1E-318, 1E-319, 1E-320, 1E-321, 1E-322, 1E-323, 1E-324\n];\n/**\n * Returns powers of 10.\n * Unlike the Math.pow this function produces no decimal garbage.\n * @param exp Exponent.\n */\nexport function pow10(exp) {\n    // Positive & zero\n    if (exp >= 0) {\n        if (exp < POSITIVE_POWERS.length) {\n            return POSITIVE_POWERS[exp];\n        }\n        else {\n            return Infinity;\n        }\n    }\n    // Negative\n    exp = -exp;\n    if (exp > 0 && exp < NEGATIVE_POWERS.length) { // if exp==int.MIN_VALUE then changing the sign will overflow and keep the number negative - we need to check for exp > 0 to filter out this corner case\n        return NEGATIVE_POWERS[exp];\n    }\n    else {\n        return 0;\n    }\n}\n/**\n * Returns the 10 base logarithm of the number.\n * Unlike Math.log function this produces integer results with no decimal garbage.\n * @param val Positive value or zero.\n */\n// eslint-disable-next-line max-lines-per-function\nexport function log10(val) {\n    // Fast Log10() algorithm\n    if (val > 1 && val < 1E16) {\n        if (val < 1E8) {\n            if (val < 1E4) {\n                if (val < 1E2) {\n                    if (val < 1E1) {\n                        return 0;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else {\n                    if (val < 1E3) {\n                        return 2;\n                    }\n                    else {\n                        return 3;\n                    }\n                }\n            }\n            else {\n                if (val < 1E6) {\n                    if (val < 1E5) {\n                        return 4;\n                    }\n                    else {\n                        return 5;\n                    }\n                }\n                else {\n                    if (val < 1E7) {\n                        return 6;\n                    }\n                    else {\n                        return 7;\n                    }\n                }\n            }\n        }\n        else {\n            if (val < 1E12) {\n                if (val < 1E10) {\n                    if (val < 1E9) {\n                        return 8;\n                    }\n                    else {\n                        return 9;\n                    }\n                }\n                else {\n                    if (val < 1E11) {\n                        return 10;\n                    }\n                    else {\n                        return 11;\n                    }\n                }\n            }\n            else {\n                if (val < 1E14) {\n                    if (val < 1E13) {\n                        return 12;\n                    }\n                    else {\n                        return 13;\n                    }\n                }\n                else {\n                    if (val < 1E15) {\n                        return 14;\n                    }\n                    else {\n                        return 15;\n                    }\n                }\n            }\n        }\n    }\n    if (val > 1E-16 && val < 1) {\n        if (val < 1E-8) {\n            if (val < 1E-12) {\n                if (val < 1E-14) {\n                    if (val < 1E-15) {\n                        return -16;\n                    }\n                    else {\n                        return -15;\n                    }\n                }\n                else {\n                    if (val < 1E-13) {\n                        return -14;\n                    }\n                    else {\n                        return -13;\n                    }\n                }\n            }\n            else {\n                if (val < 1E-10) {\n                    if (val < 1E-11) {\n                        return -12;\n                    }\n                    else {\n                        return -11;\n                    }\n                }\n                else {\n                    if (val < 1E-9) {\n                        return -10;\n                    }\n                    else {\n                        return -9;\n                    }\n                }\n            }\n        }\n        else {\n            if (val < 1E-4) {\n                if (val < 1E-6) {\n                    if (val < 1E-7) {\n                        return -8;\n                    }\n                    else {\n                        return -7;\n                    }\n                }\n                else {\n                    if (val < 1E-5) {\n                        return -6;\n                    }\n                    else {\n                        return -5;\n                    }\n                }\n            }\n            else {\n                if (val < 1E-2) {\n                    if (val < 1E-3) {\n                        return -4;\n                    }\n                    else {\n                        return -3;\n                    }\n                }\n                else {\n                    if (val < 1E-1) {\n                        return -2;\n                    }\n                    else {\n                        return -1;\n                    }\n                }\n            }\n        }\n    }\n    // JS Math provides only natural log function so we need to calc the 10 base logarithm:\n    // logb(x) = logk(x)/logk(b);\n    const log10 = Math.log(val) / LOG_E_10;\n    return floorWithPrecision(log10);\n}\n/**\n * Returns a power of 10 representing precision of the number based on the number of meaningful decimal digits.\n * For example the precision of 56,263.3767 with the 6 meaningful decimal digit is 0.1.\n * @param x Value.\n * @param decimalDigits How many decimal digits are meaningfull.\n */\nexport function getPrecision(x, decimalDigits) {\n    if (decimalDigits === undefined) {\n        decimalDigits = DEFAULT_PRECISION_IN_DECIMAL_DIGITS;\n    }\n    if (!x || !isFinite(x)) {\n        return undefined;\n    }\n    const exp = log10(Math.abs(x));\n    if (exp < MIN_EXP) {\n        return 0;\n    }\n    const precisionExp = Math.max(exp - decimalDigits, -NEGATIVE_POWERS.length + 1);\n    return pow10(precisionExp);\n}\n/**\n * Checks if a delta between 2 numbers is less than provided precision.\n * @param x One value.\n * @param y Another value.\n * @param precision Precision value.\n */\nexport function equalWithPrecision(x, y, precision) {\n    precision = detectPrecision(precision, x, y);\n    return x === y || Math.abs(x - y) < precision;\n}\n/**\n * Checks if a first value is less than another taking\n * into account the loose precision based equality.\n * @param x One value.\n * @param y Another value.\n * @param precision Precision value.\n */\nexport function lessWithPrecision(x, y, precision) {\n    precision = detectPrecision(precision, x, y);\n    return x < y && Math.abs(x - y) > precision;\n}\n/**\n * Checks if a first value is less or equal than another taking\n * into account the loose precision based equality.\n * @param x One value.\n * @param y Another value.\n * @param precision Precision value.\n */\nexport function lessOrEqualWithPrecision(x, y, precision) {\n    precision = detectPrecision(precision, x, y);\n    return x < y || Math.abs(x - y) < precision;\n}\n/**\n * Checks if a first value is greater than another taking\n * into account the loose precision based equality.\n * @param x One value.\n * @param y Another value.\n * @param precision Precision value.\n */\nexport function greaterWithPrecision(x, y, precision) {\n    precision = detectPrecision(precision, x, y);\n    return x > y && Math.abs(x - y) > precision;\n}\n/**\n * Checks if a first value is greater or equal to another taking\n * into account the loose precision based equality.\n * @param x One value.\n * @param y Another value.\n * @param precision Precision value.\n */\nexport function greaterOrEqualWithPrecision(x, y, precision) {\n    precision = detectPrecision(precision, x, y);\n    return x > y || Math.abs(x - y) < precision;\n}\n/**\n * Floors the number unless it's withing the precision distance from the higher int.\n * @param x One value.\n * @param precision Precision value.\n */\nexport function floorWithPrecision(x, precision) {\n    precision = precision != null ? precision : DEFAULT_PRECISION;\n    const roundX = Math.round(x);\n    if (Math.abs(x - roundX) < precision) {\n        return roundX;\n    }\n    else {\n        return Math.floor(x);\n    }\n}\n/**\n * Ceils the number unless it's withing the precision distance from the lower int.\n * @param x One value.\n * @param precision Precision value.\n */\nexport function ceilWithPrecision(x, precision) {\n    precision = detectPrecision(precision, DEFAULT_PRECISION);\n    const roundX = Math.round(x);\n    if (Math.abs(x - roundX) < precision) {\n        return roundX;\n    }\n    else {\n        return Math.ceil(x);\n    }\n}\n/**\n * Floors the number to the provided precision.\n * For example 234,578 floored to 1,000 precision is 234,000.\n * @param x One value.\n * @param precision Precision value.\n */\nexport function floorToPrecision(x, precision) {\n    precision = detectPrecision(precision, DEFAULT_PRECISION);\n    if (precision === 0 || x === 0) {\n        return x;\n    }\n    // Precision must be a Power of 10\n    return Math.floor(x / precision) * precision;\n}\n/**\n * Ceils the number to the provided precision.\n * For example 234,578 floored to 1,000 precision is 235,000.\n * @param x One value.\n * @param precision Precision value.\n */\nexport function ceilToPrecision(x, precision) {\n    precision = detectPrecision(precision, DEFAULT_PRECISION);\n    if (precision === 0 || x === 0) {\n        return x;\n    }\n    // Precision must be a Power of 10\n    return Math.ceil(x / precision) * precision;\n}\n/**\n * Rounds the number to the provided precision.\n * For example 234,578 floored to 1,000 precision is 235,000.\n * @param x One value.\n * @param precision Precision value.\n */\nexport function roundToPrecision(x, precision) {\n    precision = detectPrecision(precision, DEFAULT_PRECISION);\n    if (precision === 0 || x === 0) {\n        return x;\n    }\n    // Precision must be a Power of 10\n    let result = Math.round(x / precision) * precision;\n    const decimalDigits = Math.round(log10(Math.abs(x)) - log10(precision)) + 1;\n    if (decimalDigits > 0 && decimalDigits < 16) {\n        result = parseFloat(result.toPrecision(decimalDigits));\n    }\n    return result;\n}\n/**\n * Returns the value making sure that it's restricted to the provided range.\n * @param x One value.\n * @param min Range min boundary.\n * @param max Range max boundary.\n */\nexport function ensureInRange(x, min, max) {\n    if (x === undefined || x === null) {\n        return x;\n    }\n    if (x < min) {\n        return min;\n    }\n    if (x > max) {\n        return max;\n    }\n    return x;\n}\n/**\n * Rounds the value - this method is actually faster than Math.round - used in the graphics utils.\n * @param x Value to round.\n */\nexport function round(x) {\n    return (0.5 + x) << 0;\n}\n/**\n * Projects the value from the source range into the target range.\n * @param value Value to project.\n * @param fromMin Minimum of the source range.\n * @param toMin Minimum of the target range.\n * @param toMax Maximum of the target range.\n */\nexport function project(value, fromMin, fromSize, toMin, toSize) {\n    if (fromSize === 0 || toSize === 0) {\n        if (fromMin <= value && value <= fromMin + fromSize) {\n            return toMin;\n        }\n        else {\n            return NaN;\n        }\n    }\n    const relativeX = (value - fromMin) / fromSize;\n    const projectedX = toMin + relativeX * toSize;\n    return projectedX;\n}\n/**\n * Removes decimal noise.\n * @param value Value to be processed.\n */\nexport function removeDecimalNoise(value) {\n    return roundToPrecision(value, getPrecision(value));\n}\n/**\n * Checks whether the number is integer.\n * @param value Value to be checked.\n */\nexport function isInteger(value) {\n    return value !== null && value % 1 === 0;\n}\n/**\n * Dividing by increment will give us count of increments\n * Round out the rough edges into even integer\n * Multiply back by increment to get rounded value\n * e.g. Rounder.toIncrement(0.647291, 0.05) => 0.65\n * @param value - value to round to nearest increment\n * @param increment - smallest increment to round toward\n */\nexport function toIncrement(value, increment) {\n    return Math.round(value / increment) * increment;\n}\n/**\n * Overrides the given precision with defaults if necessary. Exported only for tests\n *\n * precision defined returns precision\n * x defined with y undefined returns twelve digits of precision based on x\n * x defined but zero with y defined; returns twelve digits of precision based on y\n * x and y defined retursn twelve digits of precision based on the minimum of the two\n * if no applicable precision is found based on those (such as x and y being zero), the default precision is used\n */\nexport function detectPrecision(precision, x, y) {\n    if (precision !== undefined) {\n        return precision;\n    }\n    let calculatedPrecision;\n    if (!y) {\n        calculatedPrecision = getPrecision(x);\n    }\n    else if (!x) {\n        calculatedPrecision = getPrecision(y);\n    }\n    else {\n        calculatedPrecision = getPrecision(Math.min(Math.abs(x), Math.abs(y)));\n    }\n    return calculatedPrecision || DEFAULT_PRECISION;\n}\n//# sourceMappingURL=double.js.map","/**\n * Returns items that exist in target and other.\n */\nexport function intersect(target, other) {\n    const result = [];\n    for (let i = target.length - 1; i >= 0; --i) {\n        if (other.indexOf(target[i]) !== -1) {\n            result.push(target[i]);\n        }\n    }\n    return result;\n}\n/**\n * Return elements exists in target but not exists in other.\n */\nexport function diff(target, other) {\n    const result = [];\n    for (let i = target.length - 1; i >= 0; --i) {\n        const value = target[i];\n        if (other.indexOf(value) === -1) {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/**\n * Return an array with only the distinct items in the source.\n */\nexport function distinct(source) {\n    const result = [];\n    for (let i = 0, len = source.length; i < len; i++) {\n        const value = source[i];\n        if (result.indexOf(value) === -1) {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/**\n * Pushes content of source onto target,\n * for parts of course that do not already exist in target.\n */\nexport function union(target, source) {\n    for (let i = 0, len = source.length; i < len; ++i) {\n        unionSingle(target, source[i]);\n    }\n}\n/**\n * Pushes value onto target, if value does not already exist in target.\n */\nexport function unionSingle(target, value) {\n    if (target.indexOf(value) < 0) {\n        target.push(value);\n    }\n}\n/**\n * Returns an array with a range of items from source,\n * including the startIndex & endIndex.\n */\nexport function range(source, startIndex, endIndex) {\n    const result = [];\n    for (let i = startIndex; i <= endIndex; ++i) {\n        result.push(source[i]);\n    }\n    return result;\n}\n/**\n * Returns an array that includes items from source, up to the specified count.\n */\nexport function take(source, count) {\n    const result = [];\n    for (let i = 0; i < count; ++i) {\n        result.push(source[i]);\n    }\n    return result;\n}\nexport function copy(source) {\n    return take(source, source.length);\n}\n/**\n  * Returns a value indicating whether the arrays have the same values in the same sequence.\n  */\nexport function sequenceEqual(left, right, comparison) {\n    // Normalize falsy to null\n    if (!left) {\n        left = null;\n    }\n    if (!right) {\n        right = null;\n    }\n    // T can be same as U, and it is possible for left and right to be the same array object...\n    if (left === right) {\n        return true;\n    }\n    if (!!left !== !!right) {\n        return false;\n    }\n    const len = left.length;\n    if (len !== right.length) {\n        return false;\n    }\n    let i = 0;\n    while (i < len && comparison(left[i], right[i])) {\n        ++i;\n    }\n    return i === len;\n}\n/**\n * Returns null if the specified array is empty.\n * Otherwise returns the specified array.\n */\nexport function emptyToNull(array) {\n    if (array && array.length === 0) {\n        return null;\n    }\n    return array;\n}\nexport function indexOf(array, predicate) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n        if (predicate(array[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns a copy of the array rotated by the specified offset.\n */\nexport function rotate(array, offset) {\n    if (offset === 0)\n        return array.slice();\n    const rotated = array.slice(offset);\n    Array.prototype.push.apply(rotated, array.slice(0, offset));\n    return rotated;\n}\nexport function createWithId() {\n    return extendWithId([]);\n}\nexport function extendWithId(array) {\n    const extended = array;\n    extended.withId = withId;\n    return extended;\n}\n/**\n * Finds and returns the first item with a matching ID.\n */\nexport function findWithId(array, id) {\n    for (let i = 0, len = array.length; i < len; i++) {\n        const item = array[i];\n        if (item.id === id)\n            return item;\n    }\n}\nfunction withId(id) {\n    return findWithId(this, id);\n}\nexport function createWithName() {\n    return extendWithName([]);\n}\nexport function extendWithName(array) {\n    const extended = array;\n    extended.withName = withName;\n    return extended;\n}\nexport function findItemWithName(array, name) {\n    const index = indexWithName(array, name);\n    if (index >= 0)\n        return array[index];\n}\nexport function indexWithName(array, name) {\n    for (let i = 0, len = array.length; i < len; i++) {\n        const item = array[i];\n        if (item.name === name)\n            return i;\n    }\n    return -1;\n}\n/**\n * Inserts a number in sorted order into a list of numbers already in sorted order.\n * @returns True if the item was added, false if it already existed.\n */\nexport function insertSorted(list, value) {\n    const len = list.length;\n    // NOTE: iterate backwards because incoming values tend to be sorted already.\n    for (let i = len - 1; i >= 0; i--) {\n        const diff = list[i] - value;\n        if (diff === 0)\n            return false;\n        if (diff > 0)\n            continue;\n        // diff < 0\n        list.splice(i + 1, 0, value);\n        return true;\n    }\n    list.unshift(value);\n    return true;\n}\n/**\n * Removes the first occurrence of a value from a list if it exists.\n * @returns True if the value was removed, false if it did not exist in the list.\n */\nexport function removeFirst(list, value) {\n    const index = list.indexOf(value);\n    if (index < 0)\n        return false;\n    list.splice(index, 1);\n    return true;\n}\n/**\n * Finds and returns the first item with a matching name.\n */\nfunction withName(name) {\n    return findItemWithName(this, name);\n}\n/**\n * Deletes all items from the array.\n */\nexport function clear(array) {\n    if (!array)\n        return;\n    while (array.length > 0)\n        array.pop();\n}\nexport function isUndefinedOrEmpty(array) {\n    if (!array || array.length === 0) {\n        return true;\n    }\n    return false;\n}\nexport function swap(array, firstIndex, secondIndex) {\n    const temp = array[firstIndex];\n    array[firstIndex] = array[secondIndex];\n    array[secondIndex] = temp;\n}\nexport function isInArray(array, lookupItem, compareCallback) {\n    return array.some(item => compareCallback(item, lookupItem));\n}\n/** Checks if the given object is an Array, and looking all the way up the prototype chain. */\nexport function isArrayOrInheritedArray(obj) {\n    let nextPrototype = obj;\n    while (nextPrototype != null) {\n        if (Array.isArray(nextPrototype))\n            return true;\n        nextPrototype = Object.getPrototypeOf(nextPrototype);\n    }\n    return false;\n}\n/**\n * Returns true if the specified values array is sorted in an order as determined by the specified compareFunction.\n */\nexport function isSorted(values, compareFunction) {\n    const ilen = values.length;\n    if (ilen >= 2) {\n        for (let i = 1; i < ilen; i++) {\n            if (compareFunction(values[i - 1], values[i]) > 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * Returns true if the specified number values array is sorted in ascending order\n * (or descending order if the specified descendingOrder is truthy).\n */\nexport function isSortedNumeric(values, descendingOrder) {\n    const compareFunction = descendingOrder ?\n        (a, b) => b - a :\n        (a, b) => a - b;\n    return isSorted(values, compareFunction);\n}\n/**\n * Ensures that the given T || T[] is in array form, either returning the array or\n * converting single items into an array of length one.\n */\nexport function ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [value];\n}\n//# sourceMappingURL=arrayExtensions.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n// NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\nimport { isInteger } from \"../double\";\n/**\n * Extensions for Enumerations.\n */\n/**\n * Gets a value indicating whether the value has the bit flags set.\n */\nexport function hasFlag(value, flag) {\n    return (value & flag) === flag;\n}\n/**\n * Sets a value of a flag without modifying any other flags.\n */\nexport function setFlag(value, flag) {\n    return value |= flag;\n}\n/**\n * Resets a value of a flag without modifying any other flags.\n */\nexport function resetFlag(value, flag) {\n    return value &= ~flag;\n}\n/**\n * According to the TypeScript Handbook, this is safe to do.\n */\nexport function toString(enumType, value) {\n    return enumType[value];\n}\n/**\n * Returns the number of 1's in the specified value that is a set of binary bit flags.\n */\nexport function getBitCount(value) {\n    if (!isInteger(value))\n        return 0;\n    let bitCount = 0;\n    let shiftingValue = value;\n    while (shiftingValue !== 0) {\n        if ((shiftingValue & 1) === 1) {\n            bitCount++;\n        }\n        shiftingValue = shiftingValue >>> 1;\n    }\n    return bitCount;\n}\n//# sourceMappingURL=enumExtensions.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n// NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\nexport function XOR(a, b) {\n    return (a || b) && !(a && b);\n}\n//# sourceMappingURL=logicExtensions.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n// NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\n/**\n * Runs exec on regex starting from 0 index\n * This is the expected behavior but RegExp actually remember\n * the last index they stopped at (found match at) and will\n * return unexpected results when run in sequence.\n * @param regex - regular expression object\n * @param value - string to search wiht regex\n * @param start - index within value to start regex\n */\nexport function run(regex, value, start) {\n    regex.lastIndex = start || 0;\n    return regex.exec(value);\n}\n//# sourceMappingURL=regExpExtensions.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n/**\n * Extensions to String class.\n */\n/**\n * Checks if a string ends with a sub-string.\n */\nexport function endsWith(str, suffix) {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n//# sourceMappingURL=stringExtensions.js.map","import * as arrayExtensions from \"./extensions/arrayExtensions\";\nimport * as enumExtensions from \"./extensions/enumExtensions\";\nimport * as logicExtensions from \"./extensions/logicExtensions\";\nimport * as regExpExtensions from \"./extensions/regExpExtensions\";\nimport * as stringExtensions from \"./extensions/stringExtensions\";\nimport * as numericSequence from \"./numericSequence/numericSequence\";\nimport * as numericSequenceRange from \"./numericSequence/numericSequenceRange\";\nimport * as double from \"./double\";\nimport * as jsonComparer from \"./jsonComparer\";\nimport * as pixelConverter from \"./pixelConverter\";\nimport * as prototype from \"./prototype\";\nimport * as textSizeDefaults from \"./textSizeDefaults\";\nimport * as valueType from \"./valueType\";\nexport { arrayExtensions, enumExtensions, logicExtensions, regExpExtensions, stringExtensions, numericSequence, numericSequenceRange, double, jsonComparer, pixelConverter, prototype, textSizeDefaults, valueType };\n//# sourceMappingURL=index.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n// NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\n/**\n * Performs JSON-style comparison of two objects.\n */\nexport function equals(x, y) {\n    if (x === y)\n        return true;\n    return JSON.stringify(x) === JSON.stringify(y);\n}\n//# sourceMappingURL=jsonComparer.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nimport * as Double from \"../double\";\nimport { NumericSequenceRange } from \"./numericSequenceRange\";\nexport class NumericSequence {\n    // eslint-disable-next-line max-lines-per-function\n    static calculate(range, expectedCount, maxAllowedMargin, minPower, useZeroRefPoint, steps) {\n        const result = new NumericSequence();\n        if (expectedCount === undefined)\n            expectedCount = 10;\n        else\n            expectedCount = Double.ensureInRange(expectedCount, NumericSequence.MIN_COUNT, NumericSequence.MAX_COUNT);\n        if (minPower === undefined)\n            minPower = Double.MIN_EXP;\n        if (useZeroRefPoint === undefined)\n            useZeroRefPoint = false;\n        if (maxAllowedMargin === undefined)\n            maxAllowedMargin = 1;\n        if (steps === undefined)\n            steps = [1, 2, 5];\n        // Handle single stop case\n        if (range.forcedSingleStop) {\n            result.interval = range.getSize();\n            result.intervalOffset = result.interval - (range.forcedSingleStop - range.min);\n            result.min = range.min;\n            result.max = range.max;\n            result.sequence = [range.forcedSingleStop];\n            return result;\n        }\n        let interval = 0;\n        let min = 0;\n        let max = 9;\n        const canExtendMin = maxAllowedMargin > 0 && !range.hasFixedMin;\n        const canExtendMax = maxAllowedMargin > 0 && !range.hasFixedMax;\n        const size = range.getSize();\n        let exp = Double.log10(size);\n        // Account for Exp of steps\n        const stepExp = Double.log10(steps[0]);\n        exp = exp - stepExp;\n        // Account for MaxCount\n        const expectedCountExp = Double.log10(expectedCount);\n        exp = exp - expectedCountExp;\n        // Account for MinPower\n        exp = Math.max(exp, minPower - stepExp + 1);\n        let count = undefined;\n        // Create array of \"good looking\" numbers\n        if (interval !== 0) {\n            // If explicit interval is defined - use it instead of the steps array.\n            const power = Double.pow10(exp);\n            const roundMin = Double.floorToPrecision(range.min, power);\n            const roundMax = Double.ceilToPrecision(range.max, power);\n            const roundRange = NumericSequenceRange.calculateFixedRange(roundMin, roundMax);\n            roundRange.shrinkByStep(range, interval);\n            min = roundRange.min;\n            max = roundRange.max;\n            count = Math.floor(roundRange.getSize() / interval);\n        }\n        else {\n            // No interval defined -> find optimal interval\n            let dexp;\n            for (dexp = 0; dexp < 3; dexp++) {\n                const e = exp + dexp;\n                const power = Double.pow10(e);\n                const roundMin = Double.floorToPrecision(range.min, power);\n                const roundMax = Double.ceilToPrecision(range.max, power);\n                // Go throught the steps array looking for the smallest step that produces the right interval count.\n                const stepsCount = steps.length;\n                const stepPower = Double.pow10(e - 1);\n                for (let i = 0; i < stepsCount; i++) {\n                    const step = steps[i] * stepPower;\n                    const roundRange = NumericSequenceRange.calculateFixedRange(roundMin, roundMax, useZeroRefPoint);\n                    roundRange.shrinkByStep(range, step);\n                    // If the range is based on Data we might need to extend it to provide nice data margins.\n                    if (canExtendMin && range.min === roundRange.min && maxAllowedMargin >= 1)\n                        roundRange.min -= step;\n                    if (canExtendMax && range.max === roundRange.max && maxAllowedMargin >= 1)\n                        roundRange.max += step;\n                    // Count the intervals\n                    count = Double.ceilWithPrecision(roundRange.getSize() / step, Double.DEFAULT_PRECISION);\n                    if (count <= expectedCount || (dexp === 2 && i === stepsCount - 1) || (expectedCount === 1 && count === 2 && (step > range.getSize() || (range.min < 0 && range.max > 0 && step * 2 >= range.getSize())))) {\n                        interval = step;\n                        min = roundRange.min;\n                        max = roundRange.max;\n                        break;\n                    }\n                }\n                // Increase the scale power until the interval is found\n                if (interval !== 0)\n                    break;\n            }\n        }\n        // Avoid extreme count cases (>1000 ticks)\n        if (count > expectedCount * 32 || count > NumericSequence.MAX_COUNT) {\n            count = Math.min(expectedCount * 32, NumericSequence.MAX_COUNT);\n            interval = (max - min) / count;\n        }\n        result.min = min;\n        result.max = max;\n        result.interval = interval;\n        result.intervalOffset = min - range.min;\n        result.maxAllowedMargin = maxAllowedMargin;\n        result.canExtendMin = canExtendMin;\n        result.canExtendMax = canExtendMax;\n        // Fill in the Sequence\n        const precision = Double.getPrecision(interval, 0);\n        result.precision = precision;\n        const sequence = [];\n        let x = Double.roundToPrecision(min, precision);\n        sequence.push(x);\n        for (let i = 0; i < count; i++) {\n            x = Double.roundToPrecision(x + interval, precision);\n            sequence.push(x);\n        }\n        result.sequence = sequence;\n        result.trimMinMax(range.min, range.max);\n        return result;\n    }\n    /**\n     * Calculates the sequence of int numbers which are mapped to the multiples of the units grid.\n     * @min - The minimum of the range.\n     * @max - The maximum of the range.\n     * @maxCount - The max count of intervals.\n     * @steps - array of intervals.\n     */\n    static calculateUnits(min, max, maxCount, steps) {\n        // Initialization actions\n        maxCount = Double.ensureInRange(maxCount, NumericSequence.MIN_COUNT, NumericSequence.MAX_COUNT);\n        if (min === max) {\n            max = min + 1;\n        }\n        let stepCount = 0;\n        let step = 0;\n        // Calculate step\n        for (let i = 0; i < steps.length; i++) {\n            step = steps[i];\n            const maxStepCount = Double.ceilWithPrecision(max / step);\n            const minStepCount = Double.floorWithPrecision(min / step);\n            stepCount = maxStepCount - minStepCount;\n            if (stepCount <= maxCount) {\n                break;\n            }\n        }\n        // Calculate the offset\n        let offset = -min;\n        offset = offset % step;\n        // Create sequence\n        const result = new NumericSequence();\n        result.sequence = [];\n        for (let x = min + offset;; x += step) {\n            result.sequence.push(x);\n            if (x >= max)\n                break;\n        }\n        result.interval = step;\n        result.intervalOffset = offset;\n        result.min = result.sequence[0];\n        result.max = result.sequence[result.sequence.length - 1];\n        return result;\n    }\n    trimMinMax(min, max) {\n        const minMargin = (min - this.min) / this.interval;\n        const maxMargin = (this.max - max) / this.interval;\n        const marginPrecision = 0.001;\n        if (!this.canExtendMin || (minMargin > this.maxAllowedMargin && minMargin > marginPrecision)) {\n            this.min = min;\n        }\n        if (!this.canExtendMax || (maxMargin > this.maxAllowedMargin && maxMargin > marginPrecision)) {\n            this.max = max;\n        }\n    }\n}\nNumericSequence.MIN_COUNT = 1;\nNumericSequence.MAX_COUNT = 1000;\n//# sourceMappingURL=numericSequence.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nimport * as Double from \"../double\";\nexport class NumericSequenceRange {\n    _ensureIncludeZero() {\n        if (this.includeZero) {\n            // fixed min and max has higher priority than includeZero\n            if (this.min > 0 && !this.hasFixedMin) {\n                this.min = 0;\n            }\n            if (this.max < 0 && !this.hasFixedMax) {\n                this.max = 0;\n            }\n        }\n    }\n    _ensureNotEmpty() {\n        if (this.min === this.max) {\n            if (!this.min) {\n                this.min = 0;\n                this.max = NumericSequenceRange.DEFAULT_MAX;\n                this.hasFixedMin = true;\n                this.hasFixedMax = true;\n            }\n            else {\n                // We are dealing with a single data value (includeZero is not set)\n                // In order to fix the range we need to extend it in both directions by half of the interval.\n                // Interval is calculated based on the number:\n                // 1. Integers below 10,000 are extended by 0.5: so the [2006-2006] empty range is extended to [2005.5-2006.5] range and the ForsedSingleStop=2006\n                // 2. Other numbers are extended by half of their power: [700,001-700,001] => [650,001-750,001] and the ForsedSingleStop=null as we want the intervals to be calculated to cover the range.\n                const value = this.min;\n                const exp = Double.log10(Math.abs(value));\n                let step;\n                if (exp >= 0 && exp < 4) {\n                    step = 0.5;\n                    this.forcedSingleStop = value;\n                }\n                else {\n                    step = Double.pow10(exp) / 2;\n                    this.forcedSingleStop = null;\n                }\n                this.min = value - step;\n                this.max = value + step;\n            }\n        }\n    }\n    _ensureDirection() {\n        if (this.min > this.max) {\n            const temp = this.min;\n            this.min = this.max;\n            this.max = temp;\n        }\n    }\n    getSize() {\n        return this.max - this.min;\n    }\n    shrinkByStep(range, step) {\n        let oldCount = this.min / step;\n        let newCount = range.min / step;\n        let deltaCount = Math.floor(newCount - oldCount);\n        this.min += deltaCount * step;\n        oldCount = this.max / step;\n        newCount = range.max / step;\n        deltaCount = Math.ceil(newCount - oldCount);\n        this.max += deltaCount * step;\n    }\n    static calculate(dataMin, dataMax, fixedMin, fixedMax, includeZero) {\n        const result = new NumericSequenceRange();\n        result.includeZero = includeZero ? true : false;\n        result.hasDataRange = hasValue(dataMin) && hasValue(dataMax);\n        result.hasFixedMin = hasValue(fixedMin);\n        result.hasFixedMax = hasValue(fixedMax);\n        dataMin = Double.ensureInRange(dataMin, NumericSequenceRange.MIN_SUPPORTED_DOUBLE, NumericSequenceRange.MAX_SUPPORTED_DOUBLE);\n        dataMax = Double.ensureInRange(dataMax, NumericSequenceRange.MIN_SUPPORTED_DOUBLE, NumericSequenceRange.MAX_SUPPORTED_DOUBLE);\n        // Calculate the range using the min, max, dataRange\n        if (result.hasFixedMin && result.hasFixedMax) {\n            result.min = fixedMin;\n            result.max = fixedMax;\n        }\n        else if (result.hasFixedMin) {\n            result.min = fixedMin;\n            result.max = dataMax > fixedMin ? dataMax : fixedMin;\n        }\n        else if (result.hasFixedMax) {\n            result.min = dataMin < fixedMax ? dataMin : fixedMax;\n            result.max = fixedMax;\n        }\n        else if (result.hasDataRange) {\n            result.min = dataMin;\n            result.max = dataMax;\n        }\n        else {\n            result.min = 0;\n            result.max = 0;\n        }\n        result._ensureIncludeZero();\n        result._ensureNotEmpty();\n        result._ensureDirection();\n        if (result.min === 0) {\n            result.hasFixedMin = true; // If the range starts from zero we should prevent extending the intervals into the negative range\n        }\n        else if (result.max === 0) {\n            result.hasFixedMax = true; // If the range ends at zero we should prevent extending the intervals into the positive range\n        }\n        return result;\n    }\n    static calculateDataRange(dataMin, dataMax, includeZero) {\n        if (!hasValue(dataMin) || !hasValue(dataMax)) {\n            return NumericSequenceRange.calculateFixedRange(0, NumericSequenceRange.DEFAULT_MAX);\n        }\n        else {\n            return NumericSequenceRange.calculate(dataMin, dataMax, null, null, includeZero);\n        }\n    }\n    static calculateFixedRange(fixedMin, fixedMax, includeZero) {\n        const result = new NumericSequenceRange();\n        result.hasDataRange = false;\n        result.includeZero = includeZero;\n        result.min = fixedMin;\n        result.max = fixedMax;\n        result._ensureIncludeZero();\n        result._ensureNotEmpty();\n        result._ensureDirection();\n        result.hasFixedMin = true;\n        result.hasFixedMax = true;\n        return result;\n    }\n}\nNumericSequenceRange.DEFAULT_MAX = 10;\nNumericSequenceRange.MIN_SUPPORTED_DOUBLE = -1E307;\nNumericSequenceRange.MAX_SUPPORTED_DOUBLE = 1E307;\n/** Note: Exported for testability */\nexport function hasValue(value) {\n    return value !== undefined && value !== null;\n}\n//# sourceMappingURL=numericSequenceRange.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nconst PxPtRatio = 4 / 3;\nconst PixelString = \"px\";\n/**\n * Appends 'px' to the end of number value for use as pixel string in styles\n */\nexport function toString(px) {\n    return px + PixelString;\n}\n/**\n * Converts point value (pt) to pixels\n * Returns a string for font-size property\n * e.g. fromPoint(8) => '24px'\n */\nexport function fromPoint(pt) {\n    return toString(fromPointToPixel(pt));\n}\n/**\n * Converts point value (pt) to pixels\n * Returns a number for font-size property\n * e.g. fromPoint(8) => 24px\n */\nexport function fromPointToPixel(pt) {\n    return (PxPtRatio * pt);\n}\n/**\n * Converts pixel value (px) to pt\n * e.g. toPoint(24) => 8\n */\nexport function toPoint(px) {\n    return px / PxPtRatio;\n}\n//# sourceMappingURL=pixelConverter.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n/**\n * Returns a new object with the provided obj as its prototype.\n */\nexport function inherit(obj, extension) {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    function wrapCtor() { }\n    wrapCtor.prototype = obj;\n    const inherited = new wrapCtor();\n    if (extension)\n        extension(inherited);\n    return inherited;\n}\n/**\n * Returns a new object with the provided obj as its prototype\n * if, and only if, the prototype has not been previously set\n */\nexport function inheritSingle(obj) {\n    const proto = Object.getPrototypeOf(obj);\n    if (proto === Object.prototype || proto === Array.prototype)\n        obj = inherit(obj);\n    return obj;\n}\n/**\n * Uses the provided callback function to selectively replace contents in the provided array.\n * @return A new array with those values overriden\n * or undefined if no overrides are necessary.\n */\nexport function overrideArray(prototype, override) {\n    if (!prototype)\n        return;\n    let overwritten;\n    for (let i = 0, len = prototype.length; i < len; i++) {\n        const value = override(prototype[i]);\n        if (value) {\n            if (!overwritten)\n                overwritten = inherit(prototype);\n            overwritten[i] = value;\n        }\n    }\n    return overwritten;\n}\n//# sourceMappingURL=prototype.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n// NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\n/**\n * Values are in terms of 'pt'\n * Convert to pixels using PixelConverter.fromPoint\n */\n/**\n * Stored in terms of 'pt'\n * Convert to pixels using PixelConverter.fromPoint\n */\nexport const TextSizeMin = 8;\n/**\n * Stored in terms of 'pt'\n * Convert to pixels using PixelConverter.fromPoint\n */\nexport const TextSizeMax = 40;\nconst TextSizeRange = TextSizeMax - TextSizeMin;\n/**\n * Returns the percentage of this value relative to the TextSizeMax\n * @param textSize - should be given in terms of 'pt'\n */\nexport function getScale(textSize) {\n    return (textSize - TextSizeMin) / TextSizeRange;\n}\n//# sourceMappingURL=textSizeDefaults.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n// powerbi.extensibility.utils.type\nimport * as EnumExtensions from \"./extensions/enumExtensions\";\nimport { equals } from \"./jsonComparer\";\n/** Describes a data value type, including a primitive type and extended type if any (derived from data category). */\nexport class ValueType {\n    /** Do not call the ValueType constructor directly. Use the ValueType.fromXXX methods. */\n    constructor(underlyingType, category, enumType, variantTypes) {\n        this.underlyingType = underlyingType;\n        this.category = category;\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Temporal)) {\n            this.temporalType = new TemporalType(underlyingType);\n        }\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Geography)) {\n            this.geographyType = new GeographyType(underlyingType);\n        }\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Miscellaneous)) {\n            this.miscType = new MiscellaneousType(underlyingType);\n        }\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Formatting)) {\n            this.formattingType = new FormattingType(underlyingType);\n        }\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Enumeration)) {\n            this.enumType = enumType;\n        }\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Scripting)) {\n            this.scriptingType = new ScriptType(underlyingType);\n        }\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Variant)) {\n            this.variationTypes = variantTypes;\n        }\n    }\n    /** Creates or retrieves a ValueType object based on the specified ValueTypeDescriptor. */\n    static fromDescriptor(descriptor) {\n        descriptor = descriptor || {};\n        // Simplified primitive types\n        if (descriptor.text)\n            return ValueType.fromExtendedType(ExtendedType.Text);\n        if (descriptor.integer)\n            return ValueType.fromExtendedType(ExtendedType.Integer);\n        if (descriptor.numeric)\n            return ValueType.fromExtendedType(ExtendedType.Double);\n        if (descriptor.bool)\n            return ValueType.fromExtendedType(ExtendedType.Boolean);\n        if (descriptor.dateTime)\n            return ValueType.fromExtendedType(ExtendedType.DateTime);\n        if (descriptor.duration)\n            return ValueType.fromExtendedType(ExtendedType.Duration);\n        if (descriptor.binary)\n            return ValueType.fromExtendedType(ExtendedType.Binary);\n        if (descriptor.none)\n            return ValueType.fromExtendedType(ExtendedType.None);\n        // Extended types\n        if (descriptor.scripting) {\n            if (descriptor.scripting.source)\n                return ValueType.fromExtendedType(ExtendedType.ScriptSource);\n        }\n        if (descriptor.enumeration)\n            return ValueType.fromEnum(descriptor.enumeration);\n        if (descriptor.temporal) {\n            if (descriptor.temporal.year)\n                return ValueType.fromExtendedType(ExtendedType.Years_Integer);\n            if (descriptor.temporal.quarter)\n                return ValueType.fromExtendedType(ExtendedType.Quarters_Integer);\n            if (descriptor.temporal.month)\n                return ValueType.fromExtendedType(ExtendedType.Months_Integer);\n            if (descriptor.temporal.day)\n                return ValueType.fromExtendedType(ExtendedType.DayOfMonth_Integer);\n            if (descriptor.temporal.paddedDateTableDate)\n                return ValueType.fromExtendedType(ExtendedType.PaddedDateTableDates);\n        }\n        if (descriptor.geography) {\n            if (descriptor.geography.address)\n                return ValueType.fromExtendedType(ExtendedType.Address);\n            if (descriptor.geography.city)\n                return ValueType.fromExtendedType(ExtendedType.City);\n            if (descriptor.geography.continent)\n                return ValueType.fromExtendedType(ExtendedType.Continent);\n            if (descriptor.geography.country)\n                return ValueType.fromExtendedType(ExtendedType.Country);\n            if (descriptor.geography.county)\n                return ValueType.fromExtendedType(ExtendedType.County);\n            if (descriptor.geography.region)\n                return ValueType.fromExtendedType(ExtendedType.Region);\n            if (descriptor.geography.postalCode)\n                return ValueType.fromExtendedType(ExtendedType.PostalCode_Text);\n            if (descriptor.geography.stateOrProvince)\n                return ValueType.fromExtendedType(ExtendedType.StateOrProvince);\n            if (descriptor.geography.place)\n                return ValueType.fromExtendedType(ExtendedType.Place);\n            if (descriptor.geography.latitude)\n                return ValueType.fromExtendedType(ExtendedType.Latitude_Double);\n            if (descriptor.geography.longitude)\n                return ValueType.fromExtendedType(ExtendedType.Longitude_Double);\n        }\n        if (descriptor.misc) {\n            if (descriptor.misc.image)\n                return ValueType.fromExtendedType(ExtendedType.Image);\n            if (descriptor.misc.imageUrl)\n                return ValueType.fromExtendedType(ExtendedType.ImageUrl);\n            if (descriptor.misc.webUrl)\n                return ValueType.fromExtendedType(ExtendedType.WebUrl);\n            if (descriptor.misc.barcode)\n                return ValueType.fromExtendedType(ExtendedType.Barcode_Text);\n        }\n        if (descriptor.formatting) {\n            if (descriptor.formatting.color)\n                return ValueType.fromExtendedType(ExtendedType.Color);\n            if (descriptor.formatting.formatString)\n                return ValueType.fromExtendedType(ExtendedType.FormatString);\n            if (descriptor.formatting.alignment)\n                return ValueType.fromExtendedType(ExtendedType.Alignment);\n            if (descriptor.formatting.labelDisplayUnits)\n                return ValueType.fromExtendedType(ExtendedType.LabelDisplayUnits);\n            if (descriptor.formatting.fontSize)\n                return ValueType.fromExtendedType(ExtendedType.FontSize);\n            if (descriptor.formatting.labelDensity)\n                return ValueType.fromExtendedType(ExtendedType.LabelDensity);\n        }\n        if (descriptor.extendedType) {\n            return ValueType.fromExtendedType(descriptor.extendedType);\n        }\n        if (descriptor.operations) {\n            if (descriptor.operations.searchEnabled)\n                return ValueType.fromExtendedType(ExtendedType.SearchEnabled);\n        }\n        if (descriptor.variant) {\n            const variantTypes = descriptor.variant.map((variantType) => ValueType.fromDescriptor(variantType));\n            return ValueType.fromVariant(variantTypes);\n        }\n        return ValueType.fromExtendedType(ExtendedType.Null);\n    }\n    /** Advanced: Generally use fromDescriptor instead. Creates or retrieves a ValueType object for the specified ExtendedType. */\n    static fromExtendedType(extendedType) {\n        extendedType = extendedType || ExtendedType.Null;\n        const primitiveType = getPrimitiveType(extendedType), category = getCategoryFromExtendedType(extendedType);\n        return ValueType.fromPrimitiveTypeAndCategory(primitiveType, category);\n    }\n    /** Creates or retrieves a ValueType object for the specified PrimitiveType and data category. */\n    static fromPrimitiveTypeAndCategory(primitiveType, category) {\n        primitiveType = primitiveType || PrimitiveType.Null;\n        category = category || null;\n        let id = primitiveType.toString();\n        if (category)\n            id += \"|\" + category;\n        return ValueType.typeCache[id] || (ValueType.typeCache[id] = new ValueType(toExtendedType(primitiveType, category), category));\n    }\n    /** Creates a ValueType to describe the given IEnumType. */\n    static fromEnum(enumType) {\n        return new ValueType(ExtendedType.Enumeration, null, enumType);\n    }\n    /** Creates a ValueType to describe the given Variant type. */\n    static fromVariant(variantTypes) {\n        return new ValueType(ExtendedType.Variant, /* category */ null, /* enumType */ null, variantTypes);\n    }\n    /** Determines if the specified type is compatible from at least one of the otherTypes. */\n    static isCompatibleTo(typeDescriptor, otherTypes) {\n        const valueType = ValueType.fromDescriptor(typeDescriptor);\n        for (const otherType of otherTypes) {\n            const otherValueType = ValueType.fromDescriptor(otherType);\n            if (otherValueType.isCompatibleFrom(valueType))\n                return true;\n        }\n        return false;\n    }\n    /** Determines if the instance ValueType is convertable from the 'other' ValueType. */\n    isCompatibleFrom(other) {\n        const otherPrimitiveType = other.primitiveType;\n        if (this === other ||\n            this.primitiveType === otherPrimitiveType ||\n            otherPrimitiveType === PrimitiveType.Null ||\n            // Return true if both types are numbers\n            (this.numeric && other.numeric))\n            return true;\n        return false;\n    }\n    /**\n     * Determines if the instance ValueType is equal to the 'other' ValueType\n     * @param {ValueType} other the other ValueType to check equality against\n     * @returns True if the instance ValueType is equal to the 'other' ValueType\n     */\n    equals(other) {\n        return equals(this, other);\n    }\n    /** Gets the exact primitive type of this ValueType. */\n    get primitiveType() {\n        return getPrimitiveType(this.underlyingType);\n    }\n    /** Gets the exact extended type of this ValueType. */\n    get extendedType() {\n        return this.underlyingType;\n    }\n    /** Gets the data category string (if any) for this ValueType. */\n    get categoryString() {\n        return this.category;\n    }\n    // Simplified primitive types\n    /** Indicates whether the type represents text values. */\n    get text() {\n        return this.primitiveType === PrimitiveType.Text;\n    }\n    /** Indicates whether the type represents any numeric value. */\n    get numeric() {\n        return EnumExtensions.hasFlag(this.underlyingType, ExtendedType.Numeric);\n    }\n    /** Indicates whether the type represents integer numeric values. */\n    get integer() {\n        return this.primitiveType === PrimitiveType.Integer;\n    }\n    /** Indicates whether the type represents Boolean values. */\n    get bool() {\n        return this.primitiveType === PrimitiveType.Boolean;\n    }\n    /** Indicates whether the type represents any date/time values. */\n    get dateTime() {\n        return this.primitiveType === PrimitiveType.DateTime ||\n            this.primitiveType === PrimitiveType.Date ||\n            this.primitiveType === PrimitiveType.Time;\n    }\n    /** Indicates whether the type represents duration values. */\n    get duration() {\n        return this.primitiveType === PrimitiveType.Duration;\n    }\n    /** Indicates whether the type represents binary values. */\n    get binary() {\n        return this.primitiveType === PrimitiveType.Binary;\n    }\n    /** Indicates whether the type represents none values. */\n    get none() {\n        return this.primitiveType === PrimitiveType.None;\n    }\n    // Extended types\n    /** Returns an object describing temporal values represented by the type, if it represents a temporal type. */\n    get temporal() {\n        return this.temporalType;\n    }\n    /** Returns an object describing geographic values represented by the type, if it represents a geographic type. */\n    get geography() {\n        return this.geographyType;\n    }\n    /** Returns an object describing the specific values represented by the type, if it represents a miscellaneous extended type. */\n    get misc() {\n        return this.miscType;\n    }\n    /** Returns an object describing the formatting values represented by the type, if it represents a formatting type. */\n    get formatting() {\n        return this.formattingType;\n    }\n    /** Returns an object describing the enum values represented by the type, if it represents an enumeration type. */\n    get enumeration() {\n        return this.enumType;\n    }\n    get scripting() {\n        return this.scriptingType;\n    }\n    /** Returns an array describing the variant values represented by the type, if it represents an Variant type. */\n    get variant() {\n        return this.variationTypes;\n    }\n}\nValueType.typeCache = {};\nexport class ScriptType {\n    constructor(underlyingType) {\n        this.underlyingType = underlyingType;\n    }\n    get source() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.ScriptSource);\n    }\n}\nexport class TemporalType {\n    constructor(underlyingType) {\n        this.underlyingType = underlyingType;\n    }\n    get year() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Years);\n    }\n    get quarter() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Quarters);\n    }\n    get month() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Months);\n    }\n    get day() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.DayOfMonth);\n    }\n    get paddedDateTableDate() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.PaddedDateTableDates);\n    }\n}\nexport class GeographyType {\n    constructor(underlyingType) {\n        this.underlyingType = underlyingType;\n    }\n    get address() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Address);\n    }\n    get city() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.City);\n    }\n    get continent() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Continent);\n    }\n    get country() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Country);\n    }\n    get county() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.County);\n    }\n    get region() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Region);\n    }\n    get postalCode() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.PostalCode);\n    }\n    get stateOrProvince() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.StateOrProvince);\n    }\n    get place() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Place);\n    }\n    get latitude() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Latitude);\n    }\n    get longitude() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Longitude);\n    }\n}\nexport class MiscellaneousType {\n    constructor(underlyingType) {\n        this.underlyingType = underlyingType;\n    }\n    get image() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Image);\n    }\n    get imageUrl() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.ImageUrl);\n    }\n    get webUrl() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.WebUrl);\n    }\n    get barcode() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Barcode);\n    }\n}\nexport class FormattingType {\n    constructor(underlyingType) {\n        this.underlyingType = underlyingType;\n    }\n    get color() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Color);\n    }\n    get formatString() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.FormatString);\n    }\n    get alignment() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Alignment);\n    }\n    get labelDisplayUnits() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.LabelDisplayUnits);\n    }\n    get fontSize() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.FontSize);\n    }\n    get labelDensity() {\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.LabelDensity);\n    }\n}\n/** Defines primitive value types. Must be consistent with types defined by server conceptual schema. */\nexport var PrimitiveType;\n(function (PrimitiveType) {\n    PrimitiveType[PrimitiveType[\"Null\"] = 0] = \"Null\";\n    PrimitiveType[PrimitiveType[\"Text\"] = 1] = \"Text\";\n    PrimitiveType[PrimitiveType[\"Decimal\"] = 2] = \"Decimal\";\n    PrimitiveType[PrimitiveType[\"Double\"] = 3] = \"Double\";\n    PrimitiveType[PrimitiveType[\"Integer\"] = 4] = \"Integer\";\n    PrimitiveType[PrimitiveType[\"Boolean\"] = 5] = \"Boolean\";\n    PrimitiveType[PrimitiveType[\"Date\"] = 6] = \"Date\";\n    PrimitiveType[PrimitiveType[\"DateTime\"] = 7] = \"DateTime\";\n    PrimitiveType[PrimitiveType[\"DateTimeZone\"] = 8] = \"DateTimeZone\";\n    PrimitiveType[PrimitiveType[\"Time\"] = 9] = \"Time\";\n    PrimitiveType[PrimitiveType[\"Duration\"] = 10] = \"Duration\";\n    PrimitiveType[PrimitiveType[\"Binary\"] = 11] = \"Binary\";\n    PrimitiveType[PrimitiveType[\"None\"] = 12] = \"None\";\n    PrimitiveType[PrimitiveType[\"Variant\"] = 13] = \"Variant\";\n})(PrimitiveType || (PrimitiveType = {}));\nvar PrimitiveTypeStrings;\n(function (PrimitiveTypeStrings) {\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Null\"] = 0] = \"Null\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Text\"] = 1] = \"Text\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Decimal\"] = 2] = \"Decimal\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Double\"] = 3] = \"Double\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Integer\"] = 4] = \"Integer\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Boolean\"] = 5] = \"Boolean\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Date\"] = 6] = \"Date\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"DateTime\"] = 7] = \"DateTime\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"DateTimeZone\"] = 8] = \"DateTimeZone\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Time\"] = 9] = \"Time\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Duration\"] = 10] = \"Duration\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Binary\"] = 11] = \"Binary\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"None\"] = 12] = \"None\";\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Variant\"] = 13] = \"Variant\";\n})(PrimitiveTypeStrings || (PrimitiveTypeStrings = {}));\n/** Defines extended value types, which include primitive types and known data categories constrained to expected primitive types. */\nexport var ExtendedType;\n(function (ExtendedType) {\n    // Flags (1 << 8-15 range [0xFF00])\n    // Important: Enum members must be declared before they are used in TypeScript.\n    ExtendedType[ExtendedType[\"Numeric\"] = 256] = \"Numeric\";\n    ExtendedType[ExtendedType[\"Temporal\"] = 512] = \"Temporal\";\n    ExtendedType[ExtendedType[\"Geography\"] = 1024] = \"Geography\";\n    ExtendedType[ExtendedType[\"Miscellaneous\"] = 2048] = \"Miscellaneous\";\n    ExtendedType[ExtendedType[\"Formatting\"] = 4096] = \"Formatting\";\n    ExtendedType[ExtendedType[\"Scripting\"] = 8192] = \"Scripting\";\n    // Primitive types (0-255 range [0xFF] | flags)\n    // The member names and base values must match those in PrimitiveType.\n    ExtendedType[ExtendedType[\"Null\"] = 0] = \"Null\";\n    ExtendedType[ExtendedType[\"Text\"] = 1] = \"Text\";\n    ExtendedType[ExtendedType[\"Decimal\"] = 258] = \"Decimal\";\n    ExtendedType[ExtendedType[\"Double\"] = 259] = \"Double\";\n    ExtendedType[ExtendedType[\"Integer\"] = 260] = \"Integer\";\n    ExtendedType[ExtendedType[\"Boolean\"] = 5] = \"Boolean\";\n    ExtendedType[ExtendedType[\"Date\"] = 518] = \"Date\";\n    ExtendedType[ExtendedType[\"DateTime\"] = 519] = \"DateTime\";\n    ExtendedType[ExtendedType[\"DateTimeZone\"] = 520] = \"DateTimeZone\";\n    ExtendedType[ExtendedType[\"Time\"] = 521] = \"Time\";\n    ExtendedType[ExtendedType[\"Duration\"] = 10] = \"Duration\";\n    ExtendedType[ExtendedType[\"Binary\"] = 11] = \"Binary\";\n    ExtendedType[ExtendedType[\"None\"] = 12] = \"None\";\n    ExtendedType[ExtendedType[\"Variant\"] = 13] = \"Variant\";\n    // Extended types (0-32767 << 16 range [0xFFFF0000] | corresponding primitive type | flags)\n    // Temporal\n    ExtendedType[ExtendedType[\"Years\"] = 66048] = \"Years\";\n    ExtendedType[ExtendedType[\"Years_Text\"] = 66049] = \"Years_Text\";\n    ExtendedType[ExtendedType[\"Years_Integer\"] = 66308] = \"Years_Integer\";\n    ExtendedType[ExtendedType[\"Years_Date\"] = 66054] = \"Years_Date\";\n    ExtendedType[ExtendedType[\"Years_DateTime\"] = 66055] = \"Years_DateTime\";\n    ExtendedType[ExtendedType[\"Months\"] = 131584] = \"Months\";\n    ExtendedType[ExtendedType[\"Months_Text\"] = 131585] = \"Months_Text\";\n    ExtendedType[ExtendedType[\"Months_Integer\"] = 131844] = \"Months_Integer\";\n    ExtendedType[ExtendedType[\"Months_Date\"] = 131590] = \"Months_Date\";\n    ExtendedType[ExtendedType[\"Months_DateTime\"] = 131591] = \"Months_DateTime\";\n    ExtendedType[ExtendedType[\"PaddedDateTableDates\"] = 197127] = \"PaddedDateTableDates\";\n    ExtendedType[ExtendedType[\"Quarters\"] = 262656] = \"Quarters\";\n    ExtendedType[ExtendedType[\"Quarters_Text\"] = 262657] = \"Quarters_Text\";\n    ExtendedType[ExtendedType[\"Quarters_Integer\"] = 262916] = \"Quarters_Integer\";\n    ExtendedType[ExtendedType[\"Quarters_Date\"] = 262662] = \"Quarters_Date\";\n    ExtendedType[ExtendedType[\"Quarters_DateTime\"] = 262663] = \"Quarters_DateTime\";\n    ExtendedType[ExtendedType[\"DayOfMonth\"] = 328192] = \"DayOfMonth\";\n    ExtendedType[ExtendedType[\"DayOfMonth_Text\"] = 328193] = \"DayOfMonth_Text\";\n    ExtendedType[ExtendedType[\"DayOfMonth_Integer\"] = 328452] = \"DayOfMonth_Integer\";\n    ExtendedType[ExtendedType[\"DayOfMonth_Date\"] = 328198] = \"DayOfMonth_Date\";\n    ExtendedType[ExtendedType[\"DayOfMonth_DateTime\"] = 328199] = \"DayOfMonth_DateTime\";\n    // Geography\n    ExtendedType[ExtendedType[\"Address\"] = 6554625] = \"Address\";\n    ExtendedType[ExtendedType[\"City\"] = 6620161] = \"City\";\n    ExtendedType[ExtendedType[\"Continent\"] = 6685697] = \"Continent\";\n    ExtendedType[ExtendedType[\"Country\"] = 6751233] = \"Country\";\n    ExtendedType[ExtendedType[\"County\"] = 6816769] = \"County\";\n    ExtendedType[ExtendedType[\"Region\"] = 6882305] = \"Region\";\n    ExtendedType[ExtendedType[\"PostalCode\"] = 6947840] = \"PostalCode\";\n    ExtendedType[ExtendedType[\"PostalCode_Text\"] = 6947841] = \"PostalCode_Text\";\n    ExtendedType[ExtendedType[\"PostalCode_Integer\"] = 6948100] = \"PostalCode_Integer\";\n    ExtendedType[ExtendedType[\"StateOrProvince\"] = 7013377] = \"StateOrProvince\";\n    ExtendedType[ExtendedType[\"Place\"] = 7078913] = \"Place\";\n    ExtendedType[ExtendedType[\"Latitude\"] = 7144448] = \"Latitude\";\n    ExtendedType[ExtendedType[\"Latitude_Decimal\"] = 7144706] = \"Latitude_Decimal\";\n    ExtendedType[ExtendedType[\"Latitude_Double\"] = 7144707] = \"Latitude_Double\";\n    ExtendedType[ExtendedType[\"Longitude\"] = 7209984] = \"Longitude\";\n    ExtendedType[ExtendedType[\"Longitude_Decimal\"] = 7210242] = \"Longitude_Decimal\";\n    ExtendedType[ExtendedType[\"Longitude_Double\"] = 7210243] = \"Longitude_Double\";\n    // Miscellaneous\n    ExtendedType[ExtendedType[\"Image\"] = 13109259] = \"Image\";\n    ExtendedType[ExtendedType[\"ImageUrl\"] = 13174785] = \"ImageUrl\";\n    ExtendedType[ExtendedType[\"WebUrl\"] = 13240321] = \"WebUrl\";\n    ExtendedType[ExtendedType[\"Barcode\"] = 13305856] = \"Barcode\";\n    ExtendedType[ExtendedType[\"Barcode_Text\"] = 13305857] = \"Barcode_Text\";\n    ExtendedType[ExtendedType[\"Barcode_Integer\"] = 13306116] = \"Barcode_Integer\";\n    // Formatting\n    ExtendedType[ExtendedType[\"Color\"] = 19664897] = \"Color\";\n    ExtendedType[ExtendedType[\"FormatString\"] = 19730433] = \"FormatString\";\n    ExtendedType[ExtendedType[\"Alignment\"] = 20058113] = \"Alignment\";\n    ExtendedType[ExtendedType[\"LabelDisplayUnits\"] = 20123649] = \"LabelDisplayUnits\";\n    ExtendedType[ExtendedType[\"FontSize\"] = 20189443] = \"FontSize\";\n    ExtendedType[ExtendedType[\"LabelDensity\"] = 20254979] = \"LabelDensity\";\n    // Enumeration\n    ExtendedType[ExtendedType[\"Enumeration\"] = 26214401] = \"Enumeration\";\n    // Scripting\n    ExtendedType[ExtendedType[\"ScriptSource\"] = 32776193] = \"ScriptSource\";\n    // NOTE: To avoid confusion, underscores should be used only to delimit primitive type variants of an extended type\n    // (e.g. Year_Integer or Latitude_Double above)\n    // Operations\n    ExtendedType[ExtendedType[\"SearchEnabled\"] = 65541] = \"SearchEnabled\";\n})(ExtendedType || (ExtendedType = {}));\nvar ExtendedTypeStrings;\n(function (ExtendedTypeStrings) {\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Numeric\"] = 256] = \"Numeric\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Temporal\"] = 512] = \"Temporal\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Geography\"] = 1024] = \"Geography\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Miscellaneous\"] = 2048] = \"Miscellaneous\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Formatting\"] = 4096] = \"Formatting\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Scripting\"] = 8192] = \"Scripting\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Null\"] = 0] = \"Null\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Text\"] = 1] = \"Text\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Decimal\"] = 258] = \"Decimal\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Double\"] = 259] = \"Double\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Integer\"] = 260] = \"Integer\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Boolean\"] = 5] = \"Boolean\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Date\"] = 518] = \"Date\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DateTime\"] = 519] = \"DateTime\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DateTimeZone\"] = 520] = \"DateTimeZone\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Time\"] = 521] = \"Time\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Duration\"] = 10] = \"Duration\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Binary\"] = 11] = \"Binary\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"None\"] = 12] = \"None\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Variant\"] = 13] = \"Variant\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years\"] = 66048] = \"Years\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years_Text\"] = 66049] = \"Years_Text\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years_Integer\"] = 66308] = \"Years_Integer\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years_Date\"] = 66054] = \"Years_Date\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years_DateTime\"] = 66055] = \"Years_DateTime\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months\"] = 131584] = \"Months\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months_Text\"] = 131585] = \"Months_Text\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months_Integer\"] = 131844] = \"Months_Integer\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months_Date\"] = 131590] = \"Months_Date\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months_DateTime\"] = 131591] = \"Months_DateTime\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"PaddedDateTableDates\"] = 197127] = \"PaddedDateTableDates\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters\"] = 262656] = \"Quarters\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters_Text\"] = 262657] = \"Quarters_Text\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters_Integer\"] = 262916] = \"Quarters_Integer\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters_Date\"] = 262662] = \"Quarters_Date\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters_DateTime\"] = 262663] = \"Quarters_DateTime\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth\"] = 328192] = \"DayOfMonth\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth_Text\"] = 328193] = \"DayOfMonth_Text\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth_Integer\"] = 328452] = \"DayOfMonth_Integer\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth_Date\"] = 328198] = \"DayOfMonth_Date\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth_DateTime\"] = 328199] = \"DayOfMonth_DateTime\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Address\"] = 6554625] = \"Address\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"City\"] = 6620161] = \"City\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Continent\"] = 6685697] = \"Continent\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Country\"] = 6751233] = \"Country\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"County\"] = 6816769] = \"County\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Region\"] = 6882305] = \"Region\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"PostalCode\"] = 6947840] = \"PostalCode\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"PostalCode_Text\"] = 6947841] = \"PostalCode_Text\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"PostalCode_Integer\"] = 6948100] = \"PostalCode_Integer\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"StateOrProvince\"] = 7013377] = \"StateOrProvince\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Place\"] = 7078913] = \"Place\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Latitude\"] = 7144448] = \"Latitude\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Latitude_Decimal\"] = 7144706] = \"Latitude_Decimal\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Latitude_Double\"] = 7144707] = \"Latitude_Double\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Longitude\"] = 7209984] = \"Longitude\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Longitude_Decimal\"] = 7210242] = \"Longitude_Decimal\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Longitude_Double\"] = 7210243] = \"Longitude_Double\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Image\"] = 13109259] = \"Image\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"ImageUrl\"] = 13174785] = \"ImageUrl\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"WebUrl\"] = 13240321] = \"WebUrl\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Barcode\"] = 13305856] = \"Barcode\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Barcode_Text\"] = 13305857] = \"Barcode_Text\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Barcode_Integer\"] = 13306116] = \"Barcode_Integer\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Color\"] = 19664897] = \"Color\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"FormatString\"] = 19730433] = \"FormatString\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Alignment\"] = 20058113] = \"Alignment\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"LabelDisplayUnits\"] = 20123649] = \"LabelDisplayUnits\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"FontSize\"] = 20189443] = \"FontSize\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"LabelDensity\"] = 20254979] = \"LabelDensity\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Enumeration\"] = 26214401] = \"Enumeration\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"ScriptSource\"] = 32776193] = \"ScriptSource\";\n    ExtendedTypeStrings[ExtendedTypeStrings[\"SearchEnabled\"] = 65541] = \"SearchEnabled\";\n})(ExtendedTypeStrings || (ExtendedTypeStrings = {}));\nconst PrimitiveTypeMask = 0xFF;\nconst PrimitiveTypeWithFlagsMask = 0xFFFF;\nconst PrimitiveTypeFlagsExcludedMask = 0xFFFF0000;\nfunction getPrimitiveType(extendedType) {\n    return extendedType & PrimitiveTypeMask;\n}\nfunction isPrimitiveType(extendedType) {\n    return (extendedType & PrimitiveTypeWithFlagsMask) === extendedType;\n}\nfunction getCategoryFromExtendedType(extendedType) {\n    if (isPrimitiveType(extendedType))\n        return null;\n    let category = ExtendedTypeStrings[extendedType];\n    if (category) {\n        // Check for ExtendedType declaration without a primitive type.\n        // If exists, use it as category (e.g. Longitude rather than Longitude_Double)\n        // Otherwise use the ExtendedType declaration with a primitive type (e.g. Address)\n        const delimIdx = category.lastIndexOf(\"_\");\n        if (delimIdx > 0) {\n            const baseCategory = category.slice(0, delimIdx);\n            if (ExtendedTypeStrings[baseCategory]) {\n                category = baseCategory;\n            }\n        }\n    }\n    return category || null;\n}\nfunction toExtendedType(primitiveType, category) {\n    const primitiveString = PrimitiveTypeStrings[primitiveType];\n    let t = ExtendedTypeStrings[primitiveString];\n    if (t == null) {\n        t = ExtendedType.Null;\n    }\n    if (primitiveType && category) {\n        let categoryType = ExtendedTypeStrings[category];\n        if (categoryType) {\n            const categoryPrimitiveType = getPrimitiveType(categoryType);\n            if (categoryPrimitiveType === PrimitiveType.Null) {\n                // Category supports multiple primitive types, check if requested primitive type is supported\n                // (note: important to use t here rather than primitiveType as it may include primitive type flags)\n                categoryType = t | categoryType;\n                if (ExtendedTypeStrings[categoryType]) {\n                    t = categoryType;\n                }\n            }\n            else if (categoryPrimitiveType === primitiveType) {\n                // Primitive type matches the single supported type for the category\n                t = categoryType;\n            }\n        }\n    }\n    return t;\n}\nfunction matchesExtendedTypeWithAnyPrimitive(a, b) {\n    return (a & PrimitiveTypeFlagsExcludedMask) === (b & PrimitiveTypeFlagsExcludedMask);\n}\n//# sourceMappingURL=valueType.js.map","module.exports = null;","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","import identity from \"./identity.js\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + offset,\n        range1 = +range[range.length - 1] + offset,\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient === right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = Array.from(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  axis.offset = function(_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","export default function(x) {\n  return x;\n}\n","export {\n  axisTop,\n  axisRight,\n  axisBottom,\n  axisLeft\n} from \"./axis.js\";\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export {\n  default as brush,\n  brushX,\n  brushY,\n  brushSelection\n} from \"./brush.js\";\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","export default x => () => x;\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export {default as interpolate} from \"./value.js\";\nexport {default as interpolateArray} from \"./array.js\";\nexport {default as interpolateBasis} from \"./basis.js\";\nexport {default as interpolateBasisClosed} from \"./basisClosed.js\";\nexport {default as interpolateDate} from \"./date.js\";\nexport {default as interpolateDiscrete} from \"./discrete.js\";\nexport {default as interpolateHue} from \"./hue.js\";\nexport {default as interpolateNumber} from \"./number.js\";\nexport {default as interpolateNumberArray} from \"./numberArray.js\";\nexport {default as interpolateObject} from \"./object.js\";\nexport {default as interpolateRound} from \"./round.js\";\nexport {default as interpolateString} from \"./string.js\";\nexport {interpolateTransformCss, interpolateTransformSvg} from \"./transform/index.js\";\nexport {default as interpolateZoom} from \"./zoom.js\";\nexport {default as interpolateRgb, rgbBasis as interpolateRgbBasis, rgbBasisClosed as interpolateRgbBasisClosed} from \"./rgb.js\";\nexport {default as interpolateHsl, hslLong as interpolateHslLong} from \"./hsl.js\";\nexport {default as interpolateLab} from \"./lab.js\";\nexport {default as interpolateHcl, hclLong as interpolateHclLong} from \"./hcl.js\";\nexport {default as interpolateCubehelix, cubehelixLong as interpolateCubehelixLong} from \"./cubehelix.js\";\nexport {default as piecewise} from \"./piecewise.js\";\nexport {default as quantize} from \"./quantize.js\";\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./band.js\";\n\nexport {\n  default as scaleIdentity\n} from \"./identity.js\";\n\nexport {\n  default as scaleLinear\n} from \"./linear.js\";\n\nexport {\n  default as scaleLog\n} from \"./log.js\";\n\nexport {\n  default as scaleSymlog\n} from \"./symlog.js\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./ordinal.js\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./pow.js\";\n\nexport {\n  default as scaleRadial\n} from \"./radial.js\";\n\nexport {\n  default as scaleQuantile\n} from \"./quantile.js\";\n\nexport {\n  default as scaleQuantize\n} from \"./quantize.js\";\n\nexport {\n  default as scaleThreshold\n} from \"./threshold.js\";\n\nexport {\n  default as scaleTime\n} from \"./time.js\";\n\nexport {\n  default as scaleUtc\n} from \"./utcTime.js\";\n\nexport {\n  default as scaleSequential,\n  sequentialLog as scaleSequentialLog,\n  sequentialPow as scaleSequentialPow,\n  sequentialSqrt as scaleSequentialSqrt,\n  sequentialSymlog as scaleSequentialSymlog\n} from \"./sequential.js\";\n\nexport {\n  default as scaleSequentialQuantile\n} from \"./sequentialQuantile.js\";\n\nexport {\n  default as scaleDiverging,\n  divergingLog as scaleDivergingLog,\n  divergingPow as scaleDivergingPow,\n  divergingSqrt as scaleDivergingSqrt,\n  divergingSymlog as scaleDivergingSymlog\n} from \"./diverging.js\";\n\nexport {\n  default as tickFormat\n} from \"./tickFormat.js\";\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export default function number(x) {\n  return +x;\n}\n","import {InternMap} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nexport default function array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","export {default as create} from \"./create.js\";\nexport {default as creator} from \"./creator.js\";\nexport {default as local} from \"./local.js\";\nexport {default as matcher} from \"./matcher.js\";\nexport {default as namespace} from \"./namespace.js\";\nexport {default as namespaces} from \"./namespaces.js\";\nexport {default as pointer} from \"./pointer.js\";\nexport {default as pointers} from \"./pointers.js\";\nexport {default as select} from \"./select.js\";\nexport {default as selectAll} from \"./selectAll.js\";\nexport {default as selection} from \"./selection/index.js\";\nexport {default as selector} from \"./selector.js\";\nexport {default as selectorAll} from \"./selectorAll.js\";\nexport {styleValue as style} from \"./selection/style.js\";\nexport {default as window} from \"./window.js\";\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import array from \"./array.js\";\nimport {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([array(selector)], root);\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn’t worried about “live” collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don’t; we’d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === \"object\" && \"length\" in data\n    ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  return !this.node();\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  return Array.from(this);\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    return array(select.apply(this, arguments));\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return Array.from(this.children);\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export {default as arc} from \"./arc.js\";\nexport {default as area} from \"./area.js\";\nexport {default as line} from \"./line.js\";\nexport {default as pie} from \"./pie.js\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial.js\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial.js\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial.js\";\nexport {link, linkHorizontal, linkVertical, linkRadial} from \"./link.js\";\n\nexport {default as symbol, symbolsStroke, symbolsFill, symbolsFill as symbols} from \"./symbol.js\";\nexport {default as symbolAsterisk} from \"./symbol/asterisk.js\";\nexport {default as symbolCircle} from \"./symbol/circle.js\";\nexport {default as symbolCross} from \"./symbol/cross.js\";\nexport {default as symbolDiamond} from \"./symbol/diamond.js\";\nexport {default as symbolDiamond2} from \"./symbol/diamond2.js\";\nexport {default as symbolPlus} from \"./symbol/plus.js\";\nexport {default as symbolSquare} from \"./symbol/square.js\";\nexport {default as symbolSquare2} from \"./symbol/square2.js\";\nexport {default as symbolStar} from \"./symbol/star.js\";\nexport {default as symbolTriangle} from \"./symbol/triangle.js\";\nexport {default as symbolTriangle2} from \"./symbol/triangle2.js\";\nexport {default as symbolWye} from \"./symbol/wye.js\";\nexport {default as symbolTimes, default as symbolX} from \"./symbol/times.js\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed.js\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen.js\";\nexport {default as curveBasis} from \"./curve/basis.js\";\nexport {bumpX as curveBumpX, bumpY as curveBumpY} from \"./curve/bump.js\";\nexport {default as curveBundle} from \"./curve/bundle.js\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed.js\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen.js\";\nexport {default as curveCardinal} from \"./curve/cardinal.js\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed.js\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen.js\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom.js\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed.js\";\nexport {default as curveLinear} from \"./curve/linear.js\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone.js\";\nexport {default as curveNatural} from \"./curve/natural.js\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step.js\";\n\nexport {default as stack} from \"./stack.js\";\nexport {default as stackOffsetExpand} from \"./offset/expand.js\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging.js\";\nexport {default as stackOffsetNone} from \"./offset/none.js\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette.js\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle.js\";\nexport {default as stackOrderAppearance} from \"./order/appearance.js\";\nexport {default as stackOrderAscending} from \"./order/ascending.js\";\nexport {default as stackOrderDescending} from \"./order/descending.js\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut.js\";\nexport {default as stackOrderNone} from \"./order/none.js\";\nexport {default as stackOrderReverse} from \"./order/reverse.js\";\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import \"./selection/index.js\";\nexport {default as transition} from \"./transition/index.js\";\nexport {default as active} from \"./active.js\";\nexport {default as interrupt} from \"./interrupt.js\";\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","export {default as zoom} from \"./zoom.js\";\nexport {default as zoomTransform, identity as zoomIdentity, Transform as ZoomTransform} from \"./transform.js\";\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {select, pointer} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled, {passive: false})\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var currentTarget = event.currentTarget,\n        g = gesture(this, args, true).event(event),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = pointer(event, currentTarget),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n","export * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-delaunay\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-zoom\";\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Visual } from \"../../src/visual\";\nimport powerbiVisualsApi from \"powerbi-visuals-api\";\nimport IVisualPlugin = powerbiVisualsApi.visuals.plugins.IVisualPlugin;\nimport VisualConstructorOptions = powerbiVisualsApi.extensibility.visual.VisualConstructorOptions;\nimport DialogConstructorOptions = powerbiVisualsApi.extensibility.visual.DialogConstructorOptions;\nvar powerbiKey: any = \"powerbi\";\nvar powerbi: any = window[powerbiKey];\nvar barAndLineChartWithTableC51A8F083FFA4AD1B56D590728B72F84_DEBUG: IVisualPlugin = {\n    name: 'barAndLineChartWithTableC51A8F083FFA4AD1B56D590728B72F84_DEBUG',\n    displayName: 'Bar and Line Chart with Table',\n    class: 'Visual',\n    apiVersion: '5.3.0',\n    create: (options?: VisualConstructorOptions) => {\n        if (Visual) {\n            return new Visual(options);\n        }\n        throw 'Visual instance not found';\n    },\n    createModalDialog: (dialogId: string, options: DialogConstructorOptions, initialState: object) => {\n        const dialogRegistry = (<any>globalThis).dialogRegistry;\n        if (dialogId in dialogRegistry) {\n            new dialogRegistry[dialogId](options, initialState);\n        }\n    },\n    custom: true\n};\nif (typeof powerbi !== \"undefined\") {\n    powerbi.visuals = powerbi.visuals || {};\n    powerbi.visuals.plugins = powerbi.visuals.plugins || {};\n    powerbi.visuals.plugins[\"barAndLineChartWithTableC51A8F083FFA4AD1B56D590728B72F84_DEBUG\"] = barAndLineChartWithTableC51A8F083FFA4AD1B56D590728B72F84_DEBUG;\n}\nexport default barAndLineChartWithTableC51A8F083FFA4AD1B56D590728B72F84_DEBUG;"],"names":[],"sourceRoot":""}